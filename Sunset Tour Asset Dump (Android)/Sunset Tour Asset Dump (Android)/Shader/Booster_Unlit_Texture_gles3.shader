//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Booster/Unlit/Texture" {
Properties {
_Color ("Main Color", Color) = (1,1,1,1)
_VertexColor ("Vertex Main Color", Color) = (1,1,1,1)
[KeywordEnum(DISABLE, MULTIPLY, ADD)] _VERTEXCOLOR ("VertexColor", Float) = 0
[KeywordEnum(DISABLE, ENABLE)] _FOG ("Fog", Float) = 0
[KeywordEnum(DISABLE, ENABLE)] _MAIN_COLOR ("Main Color", Float) = 0
[KeywordEnum(DISABLE, ENABLE)] _IGNORE_FAR ("Farクリップを無視", Float) = 0
[KeywordEnum(ONE, TOW)] _TEXTURE ("テクスチャ枚数", Float) = 0
[KeywordEnum(MULTIPLY, ADD)] _TEXTURE_BLEND ("テクスチャブレンド方法", Float) = 0
_MainTex ("Texture", 2D) = "black" { }
[Header(Texture UV Scroll)] _ScrollSpeedU ("U方向：移動速度", Range(-10, 10)) = 0
_ScrollSpeedV ("V方向：移動速度", Range(-10, 10)) = 0
_MainTex2 ("Texture2", 2D) = "white" { }
[Header(Texture 2 UV Scroll)] _ScrollSpeedU2 ("U方向：移動速度", Range(-10, 10)) = 0
_ScrollSpeedV2 ("V方向：移動速度", Range(-10, 10)) = 0
[Space(10)] [Enum(None,0,ReverseU,1,ReverseV,2)] _ReverseScrollType ("逆走時スクロール反転", Float) = 0
_FogIntencity ("FogIntencity", Range(0, 2)) = 1
}
SubShader {
 LOD 100
 Tags { "RenderType" = "Opaque" }
 Pass {
  LOD 100
  Tags { "RenderType" = "Opaque" }
  GpuProgramID 219
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat1.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
float u_xlat3;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat3 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
#else
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat3) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
vec2 u_xlat4;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat4.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat4.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat4.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat4.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
bvec2 u_xlatb0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
void main()
{
    u_xlatb0.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 0.0, 0.0)).xy;
    u_xlat0.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb0.xy));
    u_xlat6.x = booster_Env.y + booster_Env.y;
    u_xlat0.xy = (-u_xlat6.xx) * u_xlat0.xy + vec2(1.0, 1.0);
    u_xlat6.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat6.xy = fract(u_xlat6.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat0.xy + u_xlat6.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat1.x);
    u_xlat6.x = u_xlat0.z / u_xlat0.w;
    u_xlat6.x = min(u_xlat6.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat6.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat1.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * _Color.xyz;
    u_xlat16_0.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat2.xyz = vs_COLOR0.xyz * _VertexColor.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz + u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
#else
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD2;
out highp vec4 vs_COLOR0;
vec4 u_xlat0;
vec4 u_xlat1;
vec2 u_xlat4;
bvec2 u_xlatb4;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb4.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat4.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb4.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat4.xy = (-u_xlat1.xx) * u_xlat4.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat4.xy + u_xlat0.xy;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat4.x = u_xlat0.z / u_xlat0.w;
    u_xlat4.x = min(u_xlat4.x, 0.999989986);
    gl_Position.z = u_xlat0.w * u_xlat4.x;
    gl_Position.xyw = u_xlat0.xyw;
    vs_COLOR0 = in_COLOR0;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp vec2 vs_TEXCOORD2;
in highp vec4 vs_COLOR0;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec2 u_xlat6;
bvec2 u_xlatb6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;
    u_xlat1.x = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
    gl_Position = u_xlat0;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    vs_TEXCOORD1 = max(u_xlat1.x, u_xlat16_2);
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb6.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat6.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb6.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat6.xy = (-u_xlat1.xx) * u_xlat6.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat6.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 _MainTex_ST;
uniform 	mediump float _ScrollSpeedU;
uniform 	mediump float _ScrollSpeedV;
uniform 	mediump float _FogIntencity;
uniform 	mediump float _ReverseScrollType;
uniform 	vec4 _MainTex2_ST;
uniform 	mediump float _ScrollSpeedU2;
uniform 	mediump float _ScrollSpeedV2;
uniform 	vec4 booster_Env;
in highp vec4 in_POSITION0;
in highp vec2 in_TEXCOORD0;
in highp vec4 in_COLOR0;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD1;
out highp vec4 vs_COLOR0;
out highp vec2 vs_TEXCOORD2;
vec2 u_xlat0;
vec4 u_xlat1;
mediump float u_xlat16_2;
vec4 u_xlat3;
vec2 u_xlat8;
bvec2 u_xlatb8;
void main()
{
    u_xlat0.xy = vec2(_ScrollSpeedU, _ScrollSpeedV) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlatb8.xy = equal(vec4(vec4(_ReverseScrollType, _ReverseScrollType, _ReverseScrollType, _ReverseScrollType)), vec4(1.0, 2.0, 1.0, 2.0)).xy;
    u_xlat8.xy = mix(vec2(0.0, 0.0), vec2(1.0, 1.0), vec2(u_xlatb8.xy));
    u_xlat1.x = booster_Env.y + booster_Env.y;
    u_xlat8.xy = (-u_xlat1.xx) * u_xlat8.xy + vec2(1.0, 1.0);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    u_xlat16_2 = _FogIntencity * _FogIntencity;
    u_xlat16_2 = (-unity_FogColor.w) * u_xlat16_2 + 1.0;
    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat3;
    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat3;
    u_xlat0.x = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD1 = max(u_xlat16_2, u_xlat0.x);
    u_xlat0.x = u_xlat1.z / u_xlat1.w;
    u_xlat0.x = min(u_xlat0.x, 0.999989986);
    gl_Position.z = u_xlat1.w * u_xlat0.x;
    gl_Position.xyw = u_xlat1.xyw;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.xy = vec2(_ScrollSpeedU2, _ScrollSpeedV2) * booster_Env.xx;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex2_ST.xy + _MainTex2_ST.zw;
    vs_TEXCOORD2.xy = u_xlat1.xy * u_xlat8.xy + u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _VertexColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _MainTex2;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD1;
in highp vec4 vs_COLOR0;
in highp vec2 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
float u_xlat6;
void main()
{
    u_xlat16_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = texture(_MainTex2, vs_TEXCOORD2.xy).xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _Color.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = vs_COLOR0.xyz * _VertexColor.xyz + u_xlat16_0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat6 = vs_TEXCOORD1;
#ifdef UNITY_ADRENO_ES3
    u_xlat6 = min(max(u_xlat6, 0.0), 1.0);
#else
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_VERTEXCOLOR_MULTIPLY" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_ONE" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_TEXTURE_BLEND_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_MULTIPLY" "_MAIN_COLOR_ENABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_IGNORE_FAR_DISABLE" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_VERTEXCOLOR_ADD" "_MAIN_COLOR_DISABLE" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_ONE" "_VERTEXCOLOR_ADD" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_TEXTURE_BLEND_MULTIPLY" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_IGNORE_FAR_DISABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" "_FOG_ENABLE" "_MAIN_COLOR_ENABLE" "_VERTEXCOLOR_ADD" "_TEXTURE_TOW" "_TEXTURE_BLEND_ADD" "_IGNORE_FAR_ENABLE" }
""
}
}
}
}
}