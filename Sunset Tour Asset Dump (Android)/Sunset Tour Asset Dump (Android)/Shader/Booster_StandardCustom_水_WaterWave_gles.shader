//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Booster/StandardCustom/水/WaterWave" {
Properties {
_Color ("Main Color", Color) = (1,1,1,1)
_Metallic ("Metallic", Range(0, 1)) = 0
_Smoothness ("Smoothness", Range(0, 1)) = 0
_Occlusion ("Occlusion", Range(0, 1)) = 1
[Header(Booster Whitecaps)] _Whitecaps ("白波テクスチャRGB(UV0)", 2D) = "black" { }
_WhitecapsAlpha ("白波テクスチャA(UV0)", 2D) = "white" { }
[Header(Whitecaps UV Wave)] _WhitecapsScrollSpeedU ("U方向：移動速度", Range(-10, 10)) = 0
_WhitecapsScrollSpeedV ("V方向：移動速度", Range(-10, 10)) = 0
_WhitecapsScrollSinScaleU ("U方向：波打つ幅", Range(-10, 10)) = 0
_WhitecapsScrollSinScaleV ("V方向：波打つ幅", Range(-10, 10)) = 0
_WhitecapsScrollSinSpeedU ("U方向：波打つ速度", Range(0, 10)) = 0
_WhitecapsScrollSinSpeedV ("V方向：波打つ速度", Range(0, 10)) = 0
[Header(Whitecaps Parameters)] _WhitecapsBaseAlpha ("カメラ距離による透明度", Range(0, 1)) = 0.117647
_WhitecapsDepthMin ("透明が始まる距離", Range(0, 200)) = 10
_WhitecapsDepthMax ("透明が終わる距離", Range(0, 200)) = 50
[Space(10)] [Header(Vertex Wave Animation)] _WaveFreq ("波打つ頻度", Range(0, 10)) = 1
_WaveSpeed ("波打つ速度", Range(-100, 100)) = 1
_WaveHeight ("波の高さ", Range(0, 100)) = 1
_Wave2Freq ("波打つ頻度2", Range(0, 10)) = 1
_Wave2Speed ("波打つ速度2", Range(-100, 100)) = 1
_Wave2Height ("波の高さ2", Range(0, 100)) = 0
_WaveSlopeMag ("法線の傾きの強さ", Range(0, 1)) = 1
_WaveCenterPos ("波紋の中心", Vector) = (0,0,0,0)
[Header(Booster Reflection Cube Map)] [KeywordEnum(NO,YES,FIXEDCOLOR)] _ReflectionProbeType ("個別リフレクションキューブマップ使用", Float) = 0
_HeuristicReflection ("個別リフレクションキューブマップ", Cube) = "_Skybox" { }
_NormalDiff ("疑似LOD反射の揺らぎ", Range(-1, 1)) = 0
_NormalRand ("疑似LOD乱数値", Vector) = (9993.169,5715.817,4488.509,34.2347)
_FixedReflColor ("単色リフレクションカラー", Color) = (1,1,1,1)
[Space(20)] [Enum(NO,0,YES,2)] _StencilOp ("置き影が落ちなくなる", Float) = 0
}
SubShader {
 LOD 5000
 Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
 Pass {
  Name "FORWARD"
  LOD 5000
  Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 26644
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump float u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec2 u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
float u_xlat29;
mediump float u_xlat16_31;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat27 * u_xlat16_1.x;
    u_xlat3.x = u_xlat27 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat27) + u_xlat16_1.xyz;
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat3.z<0.00499999989;
    u_xlat29 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb27) ? 0.0 : u_xlat29;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat29 = u_xlat27;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat29) + 1.0;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat18.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat18.xy = sin(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat18.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat18.xy;
    u_xlat18.xy = fract(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat18.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat18.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_32 = u_xlat16_32 + 1.0;
    u_xlat16_32 = clamp(u_xlat16_32, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_32);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_31) + u_xlat16_7.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0 = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump float u_xlat16_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec3 u_xlat10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
float u_xlat20;
float u_xlat21;
float u_xlat30;
float u_xlat33;
mediump float u_xlat16_35;
mediump float u_xlat16_37;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat10.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat1);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat1) + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat11.xyz);
    u_xlat1 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1<9.99999975e-06;
    u_xlat1 = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1 * u_xlat16_2.x;
    u_xlat4.x = u_xlat1 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat3.xyz = vec3(u_xlat1) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat33 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1 = u_xlat0.x * u_xlat0.x;
    u_xlat16_35 = u_xlat0.x * u_xlat1;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_35 = (-u_xlat16_35) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_35);
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat16_35 = (-u_xlat11.x) + 1.0;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_37 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_38 = (-u_xlat16_37) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat16_9.xyz = vec3(u_xlat16_35) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat21 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat21);
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat10.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat10.x = dot(u_xlat3.xyz, u_xlat10.xyz);
    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);
    u_xlat20 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);
    u_xlat10.x = u_xlat10.x * u_xlat10.x;
    u_xlat30 = max(u_xlat21, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat30;
    u_xlat30 = u_xlat1 * u_xlat1 + -1.0;
    u_xlat10.x = u_xlat10.x * u_xlat30 + 1.00001001;
    u_xlat0.x = u_xlat10.x * u_xlat0.x;
    u_xlat0.x = u_xlat1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat0.xyw = u_xlat16_8.xyz * u_xlat0.xxx;
    u_xlat0.xyw = u_xlat16_7.xyz * vec3(u_xlat16_37) + u_xlat0.xyw;
    u_xlat0.xyw = u_xlat0.xyw * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat0.xyw * vec3(u_xlat20) + u_xlat16_5.xyz;
    u_xlat16_1 = (-u_xlat16_11) + 1.0;
    u_xlat1 = vs_TEXCOORD3 * u_xlat16_1 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1 = u_xlat1 + u_xlat16_11;
    u_xlat0.w = min(u_xlat1, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump float u_xlat16_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec3 u_xlat10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
float u_xlat20;
float u_xlat21;
float u_xlat30;
float u_xlat33;
mediump float u_xlat16_35;
mediump float u_xlat16_37;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat10.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat1);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat1) + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat11.xyz);
    u_xlat1 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1<9.99999975e-06;
    u_xlat1 = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1 * u_xlat16_2.x;
    u_xlat4.x = u_xlat1 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat3.xyz = vec3(u_xlat1) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat33 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1 = u_xlat0.x * u_xlat0.x;
    u_xlat16_35 = u_xlat0.x * u_xlat1;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_35 = (-u_xlat16_35) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_35);
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat16_35 = (-u_xlat11.x) + 1.0;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_37 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_38 = (-u_xlat16_37) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat16_9.xyz = vec3(u_xlat16_35) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat21 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat21);
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat10.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat10.x = dot(u_xlat3.xyz, u_xlat10.xyz);
    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);
    u_xlat20 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);
    u_xlat10.x = u_xlat10.x * u_xlat10.x;
    u_xlat30 = max(u_xlat21, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat30;
    u_xlat30 = u_xlat1 * u_xlat1 + -1.0;
    u_xlat10.x = u_xlat10.x * u_xlat30 + 1.00001001;
    u_xlat0.x = u_xlat10.x * u_xlat0.x;
    u_xlat0.x = u_xlat1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat0.xyw = u_xlat16_8.xyz * u_xlat0.xxx;
    u_xlat0.xyw = u_xlat16_7.xyz * vec3(u_xlat16_37) + u_xlat0.xyw;
    u_xlat0.xyw = u_xlat0.xyw * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat0.xyw * vec3(u_xlat20) + u_xlat16_5.xyz;
    u_xlat16_1 = (-u_xlat16_11) + 1.0;
    u_xlat1 = vs_TEXCOORD3 * u_xlat16_1 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1 = u_xlat1 + u_xlat16_11;
    u_xlat0.w = min(u_xlat1, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat30;
mediump float u_xlat16_30;
lowp float u_xlat10_30;
mediump float u_xlat16_31;
mediump float u_xlat16_33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz;
    u_xlat16_31 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_31)) + (-u_xlat0.xyz);
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_31 = u_xlat10_2.w + -1.0;
    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;
    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;
    u_xlat16_3.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat30;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat0.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat0.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat30) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_31 = (-u_xlat34) + 1.0;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_6.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_30 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_30 = (-u_xlat10_30) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_33 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_31) * u_xlat16_7.xyz;
    u_xlat16_31 = u_xlat16_33 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_31);
    u_xlat16_9.xyz = vec3(u_xlat16_10) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_0.x = (-u_xlat16_30) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_30;
    u_xlat16_10 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_10;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump float u_xlat16_9;
vec3 u_xlat13;
mediump float u_xlat16_13;
mediump float u_xlat16_16;
mediump float u_xlat16_22;
float u_xlat23;
mediump float u_xlat16_24;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_7.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_7.xyz;
    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_22) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_22 = (-u_xlat16_22) + _Smoothness;
    u_xlat16_22 = u_xlat16_22 + 1.0;
    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_22);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat9.xyz = u_xlat7.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat9.xyz, u_xlat9.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
    u_xlat23 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat23 = max(u_xlat23, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_13 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat23 = u_xlat23 * u_xlat16_13;
    u_xlat13.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat13.x = inversesqrt(u_xlat13.x);
    u_xlat13.xyz = u_xlat13.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat13.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_9 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_22 = u_xlat16_6 * u_xlat16_9;
    u_xlat16_22 = (-u_xlat16_22) * 0.280000001 + 1.0;
    u_xlat16_16 = u_xlat16_9 * u_xlat16_9 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_16 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat23;
    u_xlat2.x = u_xlat16_9 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
    u_xlat23 = dot(u_xlat13.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat6 = dot(u_xlat13.xyz, u_xlat7.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_24 = (-u_xlat6) + 1.0;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_3.xyz = vec3(u_xlat16_24) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat23) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat7.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat7.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_22);
    u_xlat1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat16_7.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_7.x + u_xlat16_0.x;
    u_xlat16_7.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_7.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump float u_xlat16_9;
vec3 u_xlat13;
mediump float u_xlat16_13;
mediump float u_xlat16_16;
mediump float u_xlat16_22;
float u_xlat23;
mediump float u_xlat16_24;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_7.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_7.xyz;
    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_22) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_22 = (-u_xlat16_22) + _Smoothness;
    u_xlat16_22 = u_xlat16_22 + 1.0;
    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_22);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat9.xyz = u_xlat7.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat9.xyz, u_xlat9.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
    u_xlat23 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat23 = max(u_xlat23, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_13 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat23 = u_xlat23 * u_xlat16_13;
    u_xlat13.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat13.x = inversesqrt(u_xlat13.x);
    u_xlat13.xyz = u_xlat13.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat13.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_9 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_22 = u_xlat16_6 * u_xlat16_9;
    u_xlat16_22 = (-u_xlat16_22) * 0.280000001 + 1.0;
    u_xlat16_16 = u_xlat16_9 * u_xlat16_9 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_16 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat23;
    u_xlat2.x = u_xlat16_9 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
    u_xlat23 = dot(u_xlat13.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat6 = dot(u_xlat13.xyz, u_xlat7.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_24 = (-u_xlat6) + 1.0;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_3.xyz = vec3(u_xlat16_24) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat23) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat7.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat7.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_22);
    u_xlat1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat16_7.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_7.x + u_xlat16_0.x;
    u_xlat16_7.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_7.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_10;
vec2 u_xlat20;
mediump float u_xlat16_20;
lowp float u_xlat10_20;
float u_xlat30;
bool u_xlatb30;
mediump float u_xlat16_31;
float u_xlat33;
mediump float u_xlat16_35;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz;
    u_xlat16_31 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_31)) + (-u_xlat0.xyz);
    u_xlat30 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb30 = u_xlat30<9.99999975e-06;
    u_xlat30 = (u_xlatb30) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat30 * u_xlat16_2.x;
    u_xlat4.x = u_xlat30 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat30 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat30 = sin(u_xlat30);
    u_xlat30 = u_xlat30 * _NormalRand.w;
    u_xlat30 = fract(u_xlat30);
    u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat30) + u_xlat16_2.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat4.z = (-_Smoothness) + 1.0;
    u_xlatb30 = u_xlat4.z<0.00499999989;
    u_xlat33 = u_xlat4.z * 8.29800034;
    u_xlat16_31 = (u_xlatb30) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_31);
    u_xlat16_31 = u_xlat10_2.w + -1.0;
    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;
    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat33 = u_xlat30;
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat30)) + u_xlat0.xyz;
    u_xlat30 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat30) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat4.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat4.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat33) + 1.0;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat20.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat20.xy = sin(u_xlat20.xy);
    u_xlat20.xy = u_xlat20.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat20.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat20.xy;
    u_xlat20.xy = fract(u_xlat20.xy);
    u_xlat20.xy = u_xlat20.xy + vs_TEXCOORD0.xy;
    u_xlat10_3.xyz = texture2D(_Whitecaps, u_xlat20.xy).xyz;
    u_xlat10_20 = texture2D(_WhitecapsAlpha, u_xlat20.xy).x;
    u_xlat16_20 = (-u_xlat10_20) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_35 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_31) * u_xlat16_7.xyz;
    u_xlat16_31 = u_xlat16_35 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_31);
    u_xlat16_9.xyz = vec3(u_xlat16_10) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_7.xyz + u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_0.x = (-u_xlat16_20) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_20;
    u_xlat16_10 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_10;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump float u_xlat16_4;
lowp float u_xlat10_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
mediump vec3 u_xlat16_13;
float u_xlat27;
mediump float u_xlat16_28;
mediump float u_xlat16_30;
float u_xlat31;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_28 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_28)) + (-u_xlat0.xyz);
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_28 = u_xlat10_2.w + -1.0;
    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;
    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;
    u_xlat16_3.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat4.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat27;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat4.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_28 = (-u_xlat31) + 1.0;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_4 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_4 = (-u_xlat10_4) + 1.0;
    u_xlat16_13.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_13.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_30 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_28) * u_xlat16_6.xyz;
    u_xlat16_28 = u_xlat16_30 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_28);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_0.x = (-u_xlat16_4) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_4;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
vec3 u_xlat10;
mediump float u_xlat16_10;
vec3 u_xlat14;
mediump float u_xlat16_14;
mediump float u_xlat16_18;
mediump float u_xlat16_25;
float u_xlat26;
mediump float u_xlat16_27;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_8.xyz;
    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_25) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_25 = (-u_xlat16_25) + _Smoothness;
    u_xlat16_25 = u_xlat16_25 + 1.0;
    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_25);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat10.xyz = u_xlat8.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat8.xyz = u_xlat8.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat10.xyz;
    u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat26 = max(u_xlat26, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_14 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat26 = u_xlat26 * u_xlat16_14;
    u_xlat14.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat14.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat14.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_25 = u_xlat16_6 * u_xlat16_10;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10 * u_xlat16_10 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat26;
    u_xlat2.x = u_xlat16_10 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat10_4 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_4, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_7.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_7.xyz;
    u_xlat26 = dot(u_xlat14.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat6 = dot(u_xlat14.xyz, u_xlat8.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_27 = (-u_xlat6) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_3.xyz = vec3(u_xlat16_27) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat26) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat8.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat8.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat16_8.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_0.x;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
vec3 u_xlat10;
mediump float u_xlat16_10;
vec3 u_xlat14;
mediump float u_xlat16_14;
mediump float u_xlat16_18;
mediump float u_xlat16_25;
float u_xlat26;
mediump float u_xlat16_27;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_8.xyz;
    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_25) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_25 = (-u_xlat16_25) + _Smoothness;
    u_xlat16_25 = u_xlat16_25 + 1.0;
    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_25);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat10.xyz = u_xlat8.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat8.xyz = u_xlat8.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat10.xyz;
    u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat26 = max(u_xlat26, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_14 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat26 = u_xlat26 * u_xlat16_14;
    u_xlat14.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat14.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat14.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_25 = u_xlat16_6 * u_xlat16_10;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10 * u_xlat16_10 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat26;
    u_xlat2.x = u_xlat16_10 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat10_4 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_4, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_7.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_7.xyz;
    u_xlat26 = dot(u_xlat14.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat6 = dot(u_xlat14.xyz, u_xlat8.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_27 = (-u_xlat6) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_3.xyz = vec3(u_xlat16_27) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat26) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat8.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat8.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat16_8.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_0.x;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
mediump float u_xlat16_28;
float u_xlat30;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_28 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_28)) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat27 * u_xlat16_2.x;
    u_xlat4.x = u_xlat27 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat27 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat27) + u_xlat16_2.xyz;
    u_xlat27 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * u_xlat3.xyz;
    u_xlat4.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat4.z<0.00499999989;
    u_xlat30 = u_xlat4.z * 8.29800034;
    u_xlat16_28 = (u_xlatb27) ? 0.0 : u_xlat30;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_28);
    u_xlat16_28 = u_xlat10_2.w + -1.0;
    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;
    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat4.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat4.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_28 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_4.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_28) * u_xlat16_6.xyz;
    u_xlat16_28 = u_xlat16_32 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_28);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_5.xyz = vec3(u_xlat27) * u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_0.x = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump float u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
mediump float u_xlat16_29;
float u_xlat30;
mediump float u_xlat16_31;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_29 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_27 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_27 = (-u_xlat10_27) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_31 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz;
    u_xlat16_29 = u_xlat16_31 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_29);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_8.xyz = u_xlat16_3.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(_Occlusion);
    u_xlat16_2.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = (-u_xlat16_27) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_27;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = vec3(u_xlat24) * u_xlat1.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_25 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_25 * u_xlat16_25 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_9.x = u_xlat16_25 * u_xlat16_25;
    u_xlat16_3.x = u_xlat16_25 * u_xlat16_9.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_17 = u_xlat16_9.x * u_xlat16_9.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_17 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat1.x;
    u_xlat24 = u_xlat16_9.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_9.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_11.xyz = u_xlat10_4.xyz + u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_11.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(u_xlat16_29);
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_29);
    u_xlat9.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_11.xyz;
    u_xlat9.xyz = u_xlat9.xyz * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_7.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat16_29 = (-u_xlat2.x) + 1.0;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat24) + u_xlat16_11.xyz;
    u_xlat16_11.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;
    u_xlat16_11.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_11.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_11.xyz);
    u_xlat16_11.x = u_xlat10_0.w + -1.0;
    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;
    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;
    u_xlat16_11.xyz = u_xlat10_0.xyz * u_xlat16_11.xxx;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Occlusion);
    u_xlat16_3.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat9.xyz;
    u_xlat16_9.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_9.x + u_xlat16_1;
    u_xlat16_9.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_9.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = vec3(u_xlat24) * u_xlat1.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_25 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_25 * u_xlat16_25 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_9.x = u_xlat16_25 * u_xlat16_25;
    u_xlat16_3.x = u_xlat16_25 * u_xlat16_9.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_17 = u_xlat16_9.x * u_xlat16_9.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_17 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat1.x;
    u_xlat24 = u_xlat16_9.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_9.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_11.xyz = u_xlat10_4.xyz + u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_11.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(u_xlat16_29);
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_29);
    u_xlat9.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_11.xyz;
    u_xlat9.xyz = u_xlat9.xyz * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_7.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat16_29 = (-u_xlat2.x) + 1.0;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat24) + u_xlat16_11.xyz;
    u_xlat16_11.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;
    u_xlat16_11.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_11.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_11.xyz);
    u_xlat16_11.x = u_xlat10_0.w + -1.0;
    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;
    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;
    u_xlat16_11.xyz = u_xlat10_0.xyz * u_xlat16_11.xxx;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Occlusion);
    u_xlat16_3.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat9.xyz;
    u_xlat16_9.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_9.x + u_xlat16_1;
    u_xlat16_9.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_9.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec2 u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
float u_xlat29;
mediump float u_xlat16_31;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat27 * u_xlat16_1.x;
    u_xlat3.x = u_xlat27 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat27) + u_xlat16_1.xyz;
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat3.z<0.00499999989;
    u_xlat29 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb27) ? 0.0 : u_xlat29;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat29 = u_xlat27;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat29) + 1.0;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat18.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat18.xy = sin(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat18.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat18.xy;
    u_xlat18.xy = fract(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat18.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat18.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_31) * u_xlat16_6.xyz;
    u_xlat16_31 = u_xlat16_32 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_31);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyw = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_8.xyz = u_xlat16_0.xyw * unity_Lightmap_HDR.xxx;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(_Occlusion);
    u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.x = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_13;
mediump float u_xlat16_30;
mediump float u_xlat16_32;
float u_xlat33;
mediump float u_xlat16_33;
lowp float u_xlat10_33;
float u_xlat34;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;
    u_xlat16_30 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_30)) + (-u_xlat3.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_30 = u_xlat10_1.w + -1.0;
    u_xlat16_30 = unity_SpecCube0_HDR.w * u_xlat16_30 + 1.0;
    u_xlat16_30 = u_xlat16_30 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_30);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat33 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD1.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat33;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat33 = u_xlat33 + u_xlat33;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat33)) + u_xlat3.xyz;
    u_xlat33 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat33) * _LightColor0.xyz;
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat16_30 = (-u_xlat34) + 1.0;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_30;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_6.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_33 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_33 = (-u_xlat10_33) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_30 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_30) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_7.xyz;
    u_xlat16_30 = u_xlat16_32 + 1.0;
    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_30);
    u_xlat16_9.xyz = vec3(u_xlat16_13) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_9.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_2.xyz = u_xlat3.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz + u_xlat16_0.xyz;
    u_xlat16_3.x = (-u_xlat16_33) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_33;
    u_xlat16_13 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_13;
    u_xlat3.x = min(u_xlat3.x, 1.0);
    SV_Target0.w = u_xlat3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat4.xyz = u_xlat4.xyz * _LightColor0.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat4.xyz = u_xlat4.xyz * _LightColor0.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_13;
vec2 u_xlat23;
mediump float u_xlat16_23;
lowp float u_xlat10_23;
mediump float u_xlat16_30;
mediump float u_xlat16_32;
float u_xlat33;
bool u_xlatb33;
float u_xlat34;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;
    u_xlat16_30 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_30)) + (-u_xlat3.xyz);
    u_xlat33 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb33 = u_xlat33<9.99999975e-06;
    u_xlat33 = (u_xlatb33) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat4.z = u_xlat16_2.x * u_xlat33;
    u_xlat5.x = u_xlat16_2.z * u_xlat33;
    u_xlat4.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat5.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat4.xyz = u_xlat4.xyz + (-u_xlat5.xyz);
    u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(_NormalDiff);
    u_xlat33 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat33 = sin(u_xlat33);
    u_xlat33 = u_xlat33 * _NormalRand.w;
    u_xlat33 = fract(u_xlat33);
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat33) + u_xlat16_2.xyz;
    u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * u_xlat4.xyz;
    u_xlat5.z = (-_Smoothness) + 1.0;
    u_xlatb33 = u_xlat5.z<0.00499999989;
    u_xlat34 = u_xlat5.z * 8.29800034;
    u_xlat16_30 = (u_xlatb33) ? 0.0 : u_xlat34;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat4.xyz, u_xlat16_30);
    u_xlat16_30 = u_xlat10_1.w + -1.0;
    u_xlat16_30 = unity_SpecCube0_HDR.w * u_xlat16_30 + 1.0;
    u_xlat16_30 = u_xlat16_30 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_30);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat33 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD1.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat33;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat33 = u_xlat33 + u_xlat33;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat33)) + u_xlat3.xyz;
    u_xlat33 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat33) * _LightColor0.xyz;
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat5.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat5.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_30 = (-u_xlat34) + 1.0;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_30;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat23.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat23.xy = sin(u_xlat23.xy);
    u_xlat23.xy = u_xlat23.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat23.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat23.xy;
    u_xlat23.xy = fract(u_xlat23.xy);
    u_xlat23.xy = u_xlat23.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat23.xy).xyz;
    u_xlat10_23 = texture2D(_WhitecapsAlpha, u_xlat23.xy).x;
    u_xlat16_23 = (-u_xlat10_23) + 1.0;
    u_xlat16_5.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_30 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_30) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_7.xyz;
    u_xlat16_30 = u_xlat16_32 + 1.0;
    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_30);
    u_xlat16_9.xyz = vec3(u_xlat16_13) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = u_xlat3.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_9.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_0.xyz;
    u_xlat16_3.x = (-u_xlat16_23) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_23;
    u_xlat16_13 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_13;
    u_xlat3.x = min(u_xlat3.x, 1.0);
    SV_Target0.w = u_xlat3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump float u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
lowp float u_xlat10_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
float u_xlat24;
mediump float u_xlat16_26;
float u_xlat27;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat27 = u_xlat24;
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat24 = u_xlat24 + u_xlat24;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat24)) + u_xlat0.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_26 = (-u_xlat27) + 1.0;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_8;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_8;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3 = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_26) + _Smoothness;
    u_xlat16_5.xyz = vec3(u_xlat16_26) * u_xlat16_5.xyz;
    u_xlat16_26 = u_xlat16_29 + 1.0;
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_26);
    u_xlat16_7.xyz = vec3(u_xlat16_8) * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz;
    u_xlat16_11.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_11.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat24) * u_xlat16_6.xyz;
    SV_Target0.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = (-u_xlat16_3) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_3;
    u_xlat16_8 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp float u_xlat10_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_18;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_26;
mediump float u_xlat16_29;
void main()
{
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_1.x = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_26 = (-_Smoothness) + 1.0;
    u_xlat16_3 = u_xlat16_26 * u_xlat16_26 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_3;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10.x = u_xlat16_26 * u_xlat16_26;
    u_xlat16_25 = u_xlat16_26 * u_xlat16_10.x;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10.x * u_xlat16_10.x + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat2.x;
    u_xlat24 = u_xlat16_10.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_2 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_2 = (-u_xlat10_2) + 1.0;
    u_xlat16_10.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_10.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_5.xyz;
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_29);
    u_xlat10.xyz = vec3(u_xlat24) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10.xyz = u_xlat16_1.xyz * u_xlat10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, u_xlat0.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat16_5.x = (-u_xlat3.x) + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_0.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz + u_xlat10.xyz;
    u_xlat16_10.x = (-u_xlat16_2) + 1.0;
    u_xlat2.x = vs_TEXCOORD3 * u_xlat16_10.x + u_xlat16_2;
    u_xlat16_10.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat2.x = u_xlat2.x + u_xlat16_10.x;
    u_xlat0.w = min(u_xlat2.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp float u_xlat10_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_18;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_26;
mediump float u_xlat16_29;
void main()
{
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_1.x = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_26 = (-_Smoothness) + 1.0;
    u_xlat16_3 = u_xlat16_26 * u_xlat16_26 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_3;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10.x = u_xlat16_26 * u_xlat16_26;
    u_xlat16_25 = u_xlat16_26 * u_xlat16_10.x;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10.x * u_xlat16_10.x + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat2.x;
    u_xlat24 = u_xlat16_10.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_2 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_2 = (-u_xlat10_2) + 1.0;
    u_xlat16_10.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_10.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_5.xyz;
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_29);
    u_xlat10.xyz = vec3(u_xlat24) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10.xyz = u_xlat16_1.xyz * u_xlat10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, u_xlat0.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat16_5.x = (-u_xlat3.x) + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_0.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz + u_xlat10.xyz;
    u_xlat16_10.x = (-u_xlat16_2) + 1.0;
    u_xlat2.x = vs_TEXCOORD3 * u_xlat16_10.x + u_xlat16_2;
    u_xlat16_10.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat2.x = u_xlat2.x + u_xlat16_10.x;
    u_xlat0.w = min(u_xlat2.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump float u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
mediump float u_xlat16_16;
lowp float u_xlat10_16;
float u_xlat24;
bool u_xlatb24;
float u_xlat26;
mediump float u_xlat16_28;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat24 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb24 = u_xlat24<9.99999975e-06;
    u_xlat24 = (u_xlatb24) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat24 * u_xlat16_1.x;
    u_xlat3.x = u_xlat24 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat24 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat24 = sin(u_xlat24);
    u_xlat24 = u_xlat24 * _NormalRand.w;
    u_xlat24 = fract(u_xlat24);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb24 = u_xlat3.z<0.00499999989;
    u_xlat26 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb24) ? 0.0 : u_xlat26;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat26 = u_xlat24;
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat24 = u_xlat24 + u_xlat24;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat24)) + u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_28 = (-u_xlat26) + 1.0;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_8;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_8;
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_3.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_16 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_16 = (-u_xlat10_16) + 1.0;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_3.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat16_5.xyz;
    u_xlat16_28 = u_xlat16_29 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_28);
    u_xlat16_7.xyz = vec3(u_xlat16_8) * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
    u_xlat16_2.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_4.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0 = (-u_xlat16_16) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_16;
    u_xlat16_8 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp float u_xlat10_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
mediump float u_xlat16_27;
mediump float u_xlat16_29;
float u_xlat30;
float u_xlat31;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat16_27 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_27 = u_xlat16_27 + u_xlat16_27;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_27)) + (-u_xlat3.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_27 = u_xlat10_1.w + -1.0;
    u_xlat16_27 = unity_SpecCube0_HDR.w * u_xlat16_27 + 1.0;
    u_xlat16_27 = u_xlat16_27 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_27);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat30;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat16_27 = (-u_xlat31) + 1.0;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_4 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_4.x = (-u_xlat10_4) + 1.0;
    u_xlat16_13.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_13.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_27) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_27) * u_xlat16_6.xyz;
    u_xlat16_27 = u_xlat16_29 + 1.0;
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_27);
    u_xlat16_8.xyz = vec3(u_xlat16_12) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_2.xyz = u_xlat3.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat30) * u_xlat16_6.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz + u_xlat16_0.xyz;
    u_xlat16_3.x = (-u_xlat16_4.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_4.x;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_12;
    u_xlat3.x = min(u_xlat3.x, 1.0);
    SV_Target0.w = u_xlat3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_5.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_5.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_12;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
mediump float u_xlat16_27;
mediump float u_xlat16_29;
float u_xlat30;
bool u_xlatb30;
float u_xlat31;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat16_27 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_27 = u_xlat16_27 + u_xlat16_27;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_27)) + (-u_xlat3.xyz);
    u_xlat30 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb30 = u_xlat30<9.99999975e-06;
    u_xlat30 = (u_xlatb30) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat4.z = u_xlat16_2.x * u_xlat30;
    u_xlat5.x = u_xlat16_2.z * u_xlat30;
    u_xlat4.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat5.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat4.xyz = u_xlat4.xyz + (-u_xlat5.xyz);
    u_xlat30 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(_NormalDiff);
    u_xlat30 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat30 = sin(u_xlat30);
    u_xlat30 = u_xlat30 * _NormalRand.w;
    u_xlat30 = fract(u_xlat30);
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat30) + u_xlat16_2.xyz;
    u_xlat30 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * u_xlat4.xyz;
    u_xlat5.z = (-_Smoothness) + 1.0;
    u_xlatb30 = u_xlat5.z<0.00499999989;
    u_xlat31 = u_xlat5.z * 8.29800034;
    u_xlat16_27 = (u_xlatb30) ? 0.0 : u_xlat31;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat4.xyz, u_xlat16_27);
    u_xlat16_27 = u_xlat10_1.w + -1.0;
    u_xlat16_27 = unity_SpecCube0_HDR.w * u_xlat16_27 + 1.0;
    u_xlat16_27 = u_xlat16_27 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_27);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat30;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat5.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat5.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_27 = (-u_xlat31) + 1.0;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_21 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_21 = (-u_xlat10_21) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_27) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_27) * u_xlat16_6.xyz;
    u_xlat16_27 = u_xlat16_29 + 1.0;
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_27);
    u_xlat16_8.xyz = vec3(u_xlat16_12) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat3.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat16_2.xyz = vec3(u_xlat30) * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.x = (-u_xlat16_21) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_21;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_12;
    u_xlat3.x = min(u_xlat3.x, 1.0);
    SV_Target0.w = u_xlat3.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_41 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_41) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_41 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_41) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat1.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump float u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
mediump float u_xlat16_29;
float u_xlat30;
mediump float u_xlat16_31;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_29 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_27 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_27 = (-u_xlat10_27) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_31 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_31 = u_xlat16_31 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_31);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat0.xxx;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_29) + u_xlat16_7.xyz;
    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0 = (-u_xlat16_27) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_27;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat0.x = min(u_xlat0.x, 1.0);
    SV_Target0.w = u_xlat0.x;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
float u_xlat21;
mediump float u_xlat16_22;
mediump float u_xlat16_26;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat21 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat21) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz;
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat21 = max(u_xlat21, 0.319999993);
    u_xlat16_22 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_22 * u_xlat16_22 + 1.5;
    u_xlat21 = u_xlat21 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_8.x = u_xlat16_22 * u_xlat16_22;
    u_xlat16_3.x = u_xlat16_22 * u_xlat16_8.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_15 = u_xlat16_8.x * u_xlat16_8.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_15 + 1.00001001;
    u_xlat21 = u_xlat21 * u_xlat1.x;
    u_xlat21 = u_xlat16_8.x / u_xlat21;
    u_xlat21 = u_xlat21 + -9.99999975e-05;
    u_xlat21 = max(u_xlat21, 0.0);
    u_xlat21 = min(u_xlat21, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_10.xyz = u_xlat10_4.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat8.xyz = vec3(u_xlat21) * u_xlat16_5.xyz;
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat8.xyz = u_xlat16_10.xyz * vec3(u_xlat16_26) + u_xlat8.xyz;
    u_xlat16_10.x = (-u_xlat16_26) + _Smoothness;
    u_xlat16_10.x = u_xlat16_10.x + 1.0;
    u_xlat16_10.x = clamp(u_xlat16_10.x, 0.0, 1.0);
    u_xlat16_10.xyz = (-u_xlat16_5.xyz) + u_xlat16_10.xxx;
    u_xlat8.xyz = u_xlat8.xyz * _LightColor0.xyz;
    u_xlat16_26 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_26 = u_xlat16_26 + u_xlat16_26;
    u_xlat16_6.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_26)) + (-u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat7 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat0.x) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_10.xyz = vec3(u_xlat16_26) * u_xlat16_10.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_6.xyz);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_3.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat8.xyz * vec3(u_xlat7) + u_xlat16_3.xyz;
    u_xlat16_8.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_1;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_8.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD2.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
float u_xlat21;
mediump float u_xlat16_22;
mediump float u_xlat16_26;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat21 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat21) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz;
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat21 = max(u_xlat21, 0.319999993);
    u_xlat16_22 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_22 * u_xlat16_22 + 1.5;
    u_xlat21 = u_xlat21 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_8.x = u_xlat16_22 * u_xlat16_22;
    u_xlat16_3.x = u_xlat16_22 * u_xlat16_8.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_15 = u_xlat16_8.x * u_xlat16_8.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_15 + 1.00001001;
    u_xlat21 = u_xlat21 * u_xlat1.x;
    u_xlat21 = u_xlat16_8.x / u_xlat21;
    u_xlat21 = u_xlat21 + -9.99999975e-05;
    u_xlat21 = max(u_xlat21, 0.0);
    u_xlat21 = min(u_xlat21, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_10.xyz = u_xlat10_4.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat8.xyz = vec3(u_xlat21) * u_xlat16_5.xyz;
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat8.xyz = u_xlat16_10.xyz * vec3(u_xlat16_26) + u_xlat8.xyz;
    u_xlat16_10.x = (-u_xlat16_26) + _Smoothness;
    u_xlat16_10.x = u_xlat16_10.x + 1.0;
    u_xlat16_10.x = clamp(u_xlat16_10.x, 0.0, 1.0);
    u_xlat16_10.xyz = (-u_xlat16_5.xyz) + u_xlat16_10.xxx;
    u_xlat8.xyz = u_xlat8.xyz * _LightColor0.xyz;
    u_xlat16_26 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_26 = u_xlat16_26 + u_xlat16_26;
    u_xlat16_6.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_26)) + (-u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat7 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat0.x) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_10.xyz = vec3(u_xlat16_26) * u_xlat16_10.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_6.xyz);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_3.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat8.xyz * vec3(u_xlat7) + u_xlat16_3.xyz;
    u_xlat16_8.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_1;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_8.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec2 u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
float u_xlat29;
mediump float u_xlat16_31;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat27 * u_xlat16_1.x;
    u_xlat3.x = u_xlat27 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat27) + u_xlat16_1.xyz;
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat3.z<0.00499999989;
    u_xlat29 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb27) ? 0.0 : u_xlat29;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat29 = u_xlat27;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat29) + 1.0;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat18.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat18.xy = sin(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat18.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat18.xy;
    u_xlat18.xy = fract(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat18.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat18.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_32 = u_xlat16_32 + 1.0;
    u_xlat16_32 = clamp(u_xlat16_32, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_32);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_31) + u_xlat16_7.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;
    u_xlat16_4.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyw = u_xlat16_4.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat16_0.xyw + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump float u_xlat16_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec3 u_xlat10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
float u_xlat20;
float u_xlat21;
float u_xlat30;
float u_xlat33;
mediump float u_xlat16_35;
mediump float u_xlat16_37;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat10.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat1);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat1) + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat11.xyz);
    u_xlat1 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1<9.99999975e-06;
    u_xlat1 = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1 * u_xlat16_2.x;
    u_xlat4.x = u_xlat1 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat3.xyz = vec3(u_xlat1) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat33 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1 = u_xlat0.x * u_xlat0.x;
    u_xlat16_35 = u_xlat0.x * u_xlat1;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_35 = (-u_xlat16_35) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_35);
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat16_35 = (-u_xlat11.x) + 1.0;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_37 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_38 = (-u_xlat16_37) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat16_9.xyz = vec3(u_xlat16_35) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat21 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat21);
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat10.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat10.x = dot(u_xlat3.xyz, u_xlat10.xyz);
    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);
    u_xlat20 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);
    u_xlat10.x = u_xlat10.x * u_xlat10.x;
    u_xlat30 = max(u_xlat21, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat30;
    u_xlat30 = u_xlat1 * u_xlat1 + -1.0;
    u_xlat10.x = u_xlat10.x * u_xlat30 + 1.00001001;
    u_xlat0.x = u_xlat10.x * u_xlat0.x;
    u_xlat0.x = u_xlat1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat0.xyw = u_xlat16_8.xyz * u_xlat0.xxx;
    u_xlat0.xyw = u_xlat16_7.xyz * vec3(u_xlat16_37) + u_xlat0.xyw;
    u_xlat0.xyw = u_xlat0.xyw * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat0.xyw * vec3(u_xlat20) + u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat30 = vs_TEXCOORD2.w;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_1 = (-u_xlat16_11) + 1.0;
    u_xlat1 = vs_TEXCOORD3 * u_xlat16_1 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1 = u_xlat1 + u_xlat16_11;
    u_xlat0.w = min(u_xlat1, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
float u_xlat1;
mediump float u_xlat16_1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
vec3 u_xlat10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
float u_xlat20;
float u_xlat21;
float u_xlat30;
float u_xlat33;
mediump float u_xlat16_35;
mediump float u_xlat16_37;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat10.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat11.xyz = u_xlat10.xyz * vec3(u_xlat1);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat1) + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat11.xyz);
    u_xlat1 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1<9.99999975e-06;
    u_xlat1 = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1 * u_xlat16_2.x;
    u_xlat4.x = u_xlat1 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1 = inversesqrt(u_xlat1);
    u_xlat3.xyz = vec3(u_xlat1) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat33 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1 = u_xlat0.x * u_xlat0.x;
    u_xlat16_35 = u_xlat0.x * u_xlat1;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_35 = (-u_xlat16_35) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_35);
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat16_35 = (-u_xlat11.x) + 1.0;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat16_35 = u_xlat16_35 * u_xlat16_35;
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_37 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_38 = (-u_xlat16_37) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat16_9.xyz = vec3(u_xlat16_35) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat21 = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat21);
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat10.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat10.x = dot(u_xlat3.xyz, u_xlat10.xyz);
    u_xlat10.x = clamp(u_xlat10.x, 0.0, 1.0);
    u_xlat20 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);
    u_xlat10.x = u_xlat10.x * u_xlat10.x;
    u_xlat30 = max(u_xlat21, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat30;
    u_xlat30 = u_xlat1 * u_xlat1 + -1.0;
    u_xlat10.x = u_xlat10.x * u_xlat30 + 1.00001001;
    u_xlat0.x = u_xlat10.x * u_xlat0.x;
    u_xlat0.x = u_xlat1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat0.xyw = u_xlat16_8.xyz * u_xlat0.xxx;
    u_xlat0.xyw = u_xlat16_7.xyz * vec3(u_xlat16_37) + u_xlat0.xyw;
    u_xlat0.xyw = u_xlat0.xyw * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat0.xyw * vec3(u_xlat20) + u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat30 = vs_TEXCOORD2.w;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_1 = (-u_xlat16_11) + 1.0;
    u_xlat1 = vs_TEXCOORD3 * u_xlat16_1 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1 = u_xlat1 + u_xlat16_11;
    u_xlat0.w = min(u_xlat1, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_10;
float u_xlat30;
mediump float u_xlat16_30;
lowp float u_xlat10_30;
mediump float u_xlat16_31;
mediump float u_xlat16_33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz;
    u_xlat16_31 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_31)) + (-u_xlat0.xyz);
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_31 = u_xlat10_2.w + -1.0;
    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;
    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;
    u_xlat16_3.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat30;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat0.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat0.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat30) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_31 = (-u_xlat34) + 1.0;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_6.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_30 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_30 = (-u_xlat10_30) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_33 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_31) * u_xlat16_7.xyz;
    u_xlat16_31 = u_xlat16_33 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_31);
    u_xlat16_9.xyz = vec3(u_xlat16_10) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_7.xyz + u_xlat16_3.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat4.xxx * u_xlat16_0.xyz + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_30) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_30;
    u_xlat16_10 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_10;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump float u_xlat16_9;
vec3 u_xlat13;
mediump float u_xlat16_13;
mediump float u_xlat16_16;
mediump float u_xlat16_22;
float u_xlat23;
mediump float u_xlat16_24;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_7.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_7.xyz;
    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_22) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_22 = (-u_xlat16_22) + _Smoothness;
    u_xlat16_22 = u_xlat16_22 + 1.0;
    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_22);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat9.xyz = u_xlat7.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat9.xyz, u_xlat9.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
    u_xlat23 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat23 = max(u_xlat23, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_13 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat23 = u_xlat23 * u_xlat16_13;
    u_xlat13.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat13.x = inversesqrt(u_xlat13.x);
    u_xlat13.xyz = u_xlat13.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat13.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_9 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_22 = u_xlat16_6 * u_xlat16_9;
    u_xlat16_22 = (-u_xlat16_22) * 0.280000001 + 1.0;
    u_xlat16_16 = u_xlat16_9 * u_xlat16_9 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_16 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat23;
    u_xlat2.x = u_xlat16_9 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
    u_xlat23 = dot(u_xlat13.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat6 = dot(u_xlat13.xyz, u_xlat7.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_24 = (-u_xlat6) + 1.0;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_3.xyz = vec3(u_xlat16_24) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat23) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat7.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat7.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_22);
    u_xlat7.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat7.xyz = u_xlat7.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat7.xyz + unity_FogColor.xyz;
    u_xlat16_7.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_7.x + u_xlat16_0.x;
    u_xlat16_7.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_7.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump float u_xlat16_9;
vec3 u_xlat13;
mediump float u_xlat16_13;
mediump float u_xlat16_16;
mediump float u_xlat16_22;
float u_xlat23;
mediump float u_xlat16_24;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_7.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_7.xyz;
    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_22) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_22 = (-u_xlat16_22) + _Smoothness;
    u_xlat16_22 = u_xlat16_22 + 1.0;
    u_xlat16_22 = clamp(u_xlat16_22, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_22);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat7.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat9.xyz = u_xlat7.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat7.xyz = u_xlat7.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat9.xyz, u_xlat9.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat9.xyz;
    u_xlat23 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat23 = max(u_xlat23, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_13 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat23 = u_xlat23 * u_xlat16_13;
    u_xlat13.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat13.x = inversesqrt(u_xlat13.x);
    u_xlat13.xyz = u_xlat13.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat13.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_9 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_22 = u_xlat16_6 * u_xlat16_9;
    u_xlat16_22 = (-u_xlat16_22) * 0.280000001 + 1.0;
    u_xlat16_16 = u_xlat16_9 * u_xlat16_9 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_16 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat23;
    u_xlat2.x = u_xlat16_9 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat2.xyz * _LightColor0.xyz;
    u_xlat23 = dot(u_xlat13.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat23 = clamp(u_xlat23, 0.0, 1.0);
    u_xlat6 = dot(u_xlat13.xyz, u_xlat7.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_24 = (-u_xlat6) + 1.0;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_24 = u_xlat16_24 * u_xlat16_24;
    u_xlat16_3.xyz = vec3(u_xlat16_24) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat23) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat7.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat7.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_22);
    u_xlat7.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat7.xyz = u_xlat7.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat7.xyz + unity_FogColor.xyz;
    u_xlat16_7.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_7.x + u_xlat16_0.x;
    u_xlat16_7.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_7.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_10;
vec2 u_xlat20;
mediump float u_xlat16_20;
lowp float u_xlat10_20;
float u_xlat30;
bool u_xlatb30;
mediump float u_xlat16_31;
float u_xlat33;
mediump float u_xlat16_35;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat0.xyz;
    u_xlat16_31 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_31 = u_xlat16_31 + u_xlat16_31;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_31)) + (-u_xlat0.xyz);
    u_xlat30 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb30 = u_xlat30<9.99999975e-06;
    u_xlat30 = (u_xlatb30) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat30 * u_xlat16_2.x;
    u_xlat4.x = u_xlat30 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat30 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat30 = sin(u_xlat30);
    u_xlat30 = u_xlat30 * _NormalRand.w;
    u_xlat30 = fract(u_xlat30);
    u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat30) + u_xlat16_2.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat4.z = (-_Smoothness) + 1.0;
    u_xlatb30 = u_xlat4.z<0.00499999989;
    u_xlat33 = u_xlat4.z * 8.29800034;
    u_xlat16_31 = (u_xlatb30) ? 0.0 : u_xlat33;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_31);
    u_xlat16_31 = u_xlat10_2.w + -1.0;
    u_xlat16_31 = unity_SpecCube0_HDR.w * u_xlat16_31 + 1.0;
    u_xlat16_31 = u_xlat16_31 * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * vec3(u_xlat16_31);
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat33 = u_xlat30;
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat30)) + u_xlat0.xyz;
    u_xlat30 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat30) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat4.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat4.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat33) + 1.0;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat16_10 = u_xlat16_31 * u_xlat16_10;
    u_xlat20.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat20.xy = sin(u_xlat20.xy);
    u_xlat20.xy = u_xlat20.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat20.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat20.xy;
    u_xlat20.xy = fract(u_xlat20.xy);
    u_xlat20.xy = u_xlat20.xy + vs_TEXCOORD0.xy;
    u_xlat10_3.xyz = texture2D(_Whitecaps, u_xlat20.xy).xyz;
    u_xlat10_20 = texture2D(_WhitecapsAlpha, u_xlat20.xy).x;
    u_xlat16_20 = (-u_xlat10_20) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_35 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_31) * u_xlat16_7.xyz;
    u_xlat16_31 = u_xlat16_35 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_31);
    u_xlat16_9.xyz = vec3(u_xlat16_10) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_9.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_7.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyw = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat3.x = vs_TEXCOORD2.w;
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat3.xxx * u_xlat16_0.xyw + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_20) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_20;
    u_xlat16_10 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_10;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump float u_xlat16_4;
lowp float u_xlat10_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
mediump vec3 u_xlat16_13;
float u_xlat27;
mediump float u_xlat16_28;
mediump float u_xlat16_30;
float u_xlat31;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_28 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_28)) + (-u_xlat0.xyz);
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_28 = u_xlat10_2.w + -1.0;
    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;
    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;
    u_xlat16_3.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat4.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat27;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat4.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_28 = (-u_xlat31) + 1.0;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_4 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_4 = (-u_xlat10_4) + 1.0;
    u_xlat16_13.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_13.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_30 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_28) * u_xlat16_6.xyz;
    u_xlat16_28 = u_xlat16_30 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_28);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_3.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat27) * u_xlat16_6.xyz;
    u_xlat16_1.xyz = u_xlat16_3.xyz * u_xlat16_6.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat27 = vs_TEXCOORD2.w;
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat16_0.xyz + unity_FogColor.xyz;
    u_xlat16_13.x = (-u_xlat16_4) + 1.0;
    u_xlat4.x = vs_TEXCOORD3 * u_xlat16_13.x + u_xlat16_4;
    u_xlat16_13.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat4.x = u_xlat4.x + u_xlat16_13.x;
    u_xlat0.w = min(u_xlat4.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
vec3 u_xlat10;
mediump float u_xlat16_10;
vec3 u_xlat14;
mediump float u_xlat16_14;
mediump float u_xlat16_18;
mediump float u_xlat16_25;
float u_xlat26;
mediump float u_xlat16_27;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_8.xyz;
    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_25) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_25 = (-u_xlat16_25) + _Smoothness;
    u_xlat16_25 = u_xlat16_25 + 1.0;
    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_25);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat10.xyz = u_xlat8.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat8.xyz = u_xlat8.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat10.xyz;
    u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat26 = max(u_xlat26, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_14 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat26 = u_xlat26 * u_xlat16_14;
    u_xlat14.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat14.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat14.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_25 = u_xlat16_6 * u_xlat16_10;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10 * u_xlat16_10 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat26;
    u_xlat2.x = u_xlat16_10 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat10_4 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_4, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_7.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_7.xyz;
    u_xlat26 = dot(u_xlat14.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat6 = dot(u_xlat14.xyz, u_xlat8.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_27 = (-u_xlat6) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_3.xyz = vec3(u_xlat16_27) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat26) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat8.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat8.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat8.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat8.xyz = u_xlat8.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat8.xyz + unity_FogColor.xyz;
    u_xlat16_8.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_0.x;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec4 u_xlat10_4;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump float u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
vec3 u_xlat10;
mediump float u_xlat16_10;
vec3 u_xlat14;
mediump float u_xlat16_14;
mediump float u_xlat16_18;
mediump float u_xlat16_25;
float u_xlat26;
mediump float u_xlat16_27;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat0.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat0.xy;
    u_xlat0.xy = fract(u_xlat0.xy);
    u_xlat0.xy = u_xlat0.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat0.xy).xyz;
    u_xlat10_0 = texture2D(_WhitecapsAlpha, u_xlat0.xy).x;
    u_xlat16_0.x = (-u_xlat10_0) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_2.xyz + u_xlat16_8.xyz;
    u_xlat16_25 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_4.xyz = vec3(u_xlat16_25) * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_3.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_3.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_25 = (-u_xlat16_25) + _Smoothness;
    u_xlat16_25 = u_xlat16_25 + 1.0;
    u_xlat16_25 = clamp(u_xlat16_25, 0.0, 1.0);
    u_xlat16_5.xyz = (-u_xlat16_3.xyz) + vec3(u_xlat16_25);
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat8.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat2.x = dot(u_xlat8.xyz, u_xlat8.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat10.xyz = u_xlat8.xyz * u_xlat2.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat8.xyz = u_xlat8.xyz * u_xlat2.xxx;
    u_xlat2.x = dot(u_xlat10.xyz, u_xlat10.xyz);
    u_xlat2.x = max(u_xlat2.x, 0.00100000005);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat10.xyz;
    u_xlat26 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat26 = max(u_xlat26, 0.319999993);
    u_xlat16_6 = (-_Smoothness) + 1.0;
    u_xlat16_14 = u_xlat16_6 * u_xlat16_6 + 1.5;
    u_xlat26 = u_xlat26 * u_xlat16_14;
    u_xlat14.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat14.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat14.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_25 = u_xlat16_6 * u_xlat16_10;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10 * u_xlat16_10 + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat2.x = u_xlat2.x * u_xlat26;
    u_xlat2.x = u_xlat16_10 / u_xlat2.x;
    u_xlat2.x = u_xlat2.x + -9.99999975e-05;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat2.x = min(u_xlat2.x, 100.0);
    u_xlat2.xyz = u_xlat2.xxx * u_xlat16_3.xyz + u_xlat16_4.xyz;
    u_xlat10_4 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_4, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_7.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_7.xyz;
    u_xlat26 = dot(u_xlat14.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat6 = dot(u_xlat14.xyz, u_xlat8.xyz);
    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);
    u_xlat16_27 = (-u_xlat6) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_3.xyz = vec3(u_xlat16_27) * u_xlat16_5.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat26) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat8.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat8.xyz);
    u_xlat10_4 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_4.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_4.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat8.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz + u_xlat2.xyz;
    u_xlat8.xyz = u_xlat8.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat8.xyz + unity_FogColor.xyz;
    u_xlat16_8.x = (-u_xlat16_0.x) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_0.x;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8.x;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
mediump float u_xlat16_28;
float u_xlat30;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_28 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_28 = u_xlat16_28 + u_xlat16_28;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_28)) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat27 * u_xlat16_2.x;
    u_xlat4.x = u_xlat27 * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat27 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat3.xyz = u_xlat3.xyz * vec3(u_xlat27) + u_xlat16_2.xyz;
    u_xlat27 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * u_xlat3.xyz;
    u_xlat4.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat4.z<0.00499999989;
    u_xlat30 = u_xlat4.z * 8.29800034;
    u_xlat16_28 = (u_xlatb27) ? 0.0 : u_xlat30;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_28);
    u_xlat16_28 = u_xlat10_2.w + -1.0;
    u_xlat16_28 = unity_SpecCube0_HDR.w * u_xlat16_28 + 1.0;
    u_xlat16_28 = u_xlat16_28 * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * vec3(u_xlat16_28);
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat4.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat4.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_28 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_28 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_4.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_28) * u_xlat16_6.xyz;
    u_xlat16_28 = u_xlat16_32 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_28);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_8.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_5.xyz = vec3(u_xlat27) * u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_1.xyz;
    u_xlat16_0.xyw = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat3.x = vs_TEXCOORD2.w;
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat3.xxx * u_xlat16_0.xyw + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD6.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_10.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_10.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_10.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_10.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
mediump float u_xlat16_29;
float u_xlat30;
mediump float u_xlat16_31;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_29 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_27 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_27 = (-u_xlat10_27) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_31 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz;
    u_xlat16_29 = u_xlat16_31 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_29);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_3.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_8.xyz = u_xlat16_3.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(_Occlusion);
    u_xlat16_2.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat3.x = vs_TEXCOORD2.w;
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat3.xxx * u_xlat16_0.xyz + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_27) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_27;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = vec3(u_xlat24) * u_xlat1.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_25 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_25 * u_xlat16_25 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_9.x = u_xlat16_25 * u_xlat16_25;
    u_xlat16_3.x = u_xlat16_25 * u_xlat16_9.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_17 = u_xlat16_9.x * u_xlat16_9.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_17 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat1.x;
    u_xlat24 = u_xlat16_9.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_9.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_11.xyz = u_xlat10_4.xyz + u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_11.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(u_xlat16_29);
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_29);
    u_xlat9.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_11.xyz;
    u_xlat9.xyz = u_xlat9.xyz * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_7.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat16_29 = (-u_xlat2.x) + 1.0;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat24) + u_xlat16_11.xyz;
    u_xlat16_11.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;
    u_xlat16_11.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_11.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_11.xyz);
    u_xlat16_11.x = u_xlat10_0.w + -1.0;
    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;
    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;
    u_xlat16_11.xyz = u_xlat10_0.xyz * u_xlat16_11.xxx;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Occlusion);
    u_xlat16_3.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat9.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD2.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_9.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_9.x + u_xlat16_1;
    u_xlat16_9.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_9.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_11;
mediump float u_xlat16_17;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat1.xyz = vec3(u_xlat24) * u_xlat1.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_25 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_25 * u_xlat16_25 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_9.x = u_xlat16_25 * u_xlat16_25;
    u_xlat16_3.x = u_xlat16_25 * u_xlat16_9.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_17 = u_xlat16_9.x * u_xlat16_9.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_17 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat1.x;
    u_xlat24 = u_xlat16_9.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_9.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_11.xyz = u_xlat10_4.xyz + u_xlat16_9.xyz;
    u_xlat16_5.xyz = u_xlat16_11.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(u_xlat16_29);
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_5.xyz) + vec3(u_xlat16_29);
    u_xlat9.xyz = vec3(u_xlat24) * u_xlat16_5.xyz + u_xlat16_11.xyz;
    u_xlat9.xyz = u_xlat9.xyz * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_11.xyz = u_xlat16_11.xyz * u_xlat16_7.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat16_29 = (-u_xlat2.x) + 1.0;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_29 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat9.xyz = u_xlat9.xyz * vec3(u_xlat24) + u_xlat16_11.xyz;
    u_xlat16_11.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;
    u_xlat16_11.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_11.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_11.xyz);
    u_xlat16_11.x = u_xlat10_0.w + -1.0;
    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;
    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;
    u_xlat16_11.xyz = u_xlat10_0.xyz * u_xlat16_11.xxx;
    u_xlat16_11.xyz = u_xlat16_11.xyz * vec3(_Occlusion);
    u_xlat16_3.xyz = u_xlat16_11.xyz * u_xlat16_3.xxx;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz + u_xlat9.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD2.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_9.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_9.x + u_xlat16_1;
    u_xlat16_9.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_9.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
vec2 u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat27;
bool u_xlatb27;
float u_xlat29;
mediump float u_xlat16_31;
mediump float u_xlat16_32;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat27 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb27 = u_xlat27<9.99999975e-06;
    u_xlat27 = (u_xlatb27) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat27 * u_xlat16_1.x;
    u_xlat3.x = u_xlat27 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat27 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat27 = sin(u_xlat27);
    u_xlat27 = u_xlat27 * _NormalRand.w;
    u_xlat27 = fract(u_xlat27);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat27) + u_xlat16_1.xyz;
    u_xlat27 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb27 = u_xlat3.z<0.00499999989;
    u_xlat29 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb27) ? 0.0 : u_xlat29;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat2.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat29 = u_xlat27;
    u_xlat29 = clamp(u_xlat29, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_31 = (-u_xlat29) + 1.0;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_31;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_31 * u_xlat16_9;
    u_xlat18.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat18.xy = sin(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat18.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat18.xy;
    u_xlat18.xy = fract(u_xlat18.xy);
    u_xlat18.xy = u_xlat18.xy + vs_TEXCOORD0.xy;
    u_xlat10_2.xyz = texture2D(_Whitecaps, u_xlat18.xy).xyz;
    u_xlat10_18 = texture2D(_WhitecapsAlpha, u_xlat18.xy).x;
    u_xlat16_18 = (-u_xlat10_18) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_31 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_31) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_31) * u_xlat16_6.xyz;
    u_xlat16_31 = u_xlat16_32 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_31);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyw = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_8.xyz = u_xlat16_0.xyw * unity_Lightmap_HDR.xxx;
    u_xlat16_8.xyz = u_xlat16_8.xyz * vec3(_Occlusion);
    u_xlat16_4.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyw = u_xlat16_4.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat16_0.xyw + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_18) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_18;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_13;
mediump float u_xlat16_30;
mediump float u_xlat16_32;
float u_xlat33;
mediump float u_xlat16_33;
lowp float u_xlat10_33;
float u_xlat34;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;
    u_xlat16_30 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_30)) + (-u_xlat3.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_30 = u_xlat10_1.w + -1.0;
    u_xlat16_30 = unity_SpecCube0_HDR.w * u_xlat16_30 + 1.0;
    u_xlat16_30 = u_xlat16_30 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_30);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat33 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD1.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat33;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat33 = u_xlat33 + u_xlat33;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat33)) + u_xlat3.xyz;
    u_xlat33 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat33) * _LightColor0.xyz;
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat16_30 = (-u_xlat34) + 1.0;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_30;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_6.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_33 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_33 = (-u_xlat10_33) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_30 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_30) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_7.xyz;
    u_xlat16_30 = u_xlat16_32 + 1.0;
    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_30);
    u_xlat16_9.xyz = vec3(u_xlat16_13) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_9.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_2.xyz = u_xlat3.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat16_3.xyz + unity_FogColor.xyz;
    u_xlat16_3.x = (-u_xlat16_33) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_33;
    u_xlat16_13 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_13;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat4.xyz = u_xlat4.xyz * _LightColor0.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat11.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat11.xyz = u_xlat11.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat11.xyz + unity_FogColor.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat4.xyz = u_xlat4.xyz * _LightColor0.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat11.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat11.xyz = u_xlat11.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat11.xyz + unity_FogColor.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec4 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump float u_xlat16_13;
vec2 u_xlat23;
mediump float u_xlat16_23;
lowp float u_xlat10_23;
mediump float u_xlat16_30;
mediump float u_xlat16_32;
float u_xlat33;
bool u_xlatb33;
float u_xlat34;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat3.xyz = vec3(u_xlat33) * u_xlat3.xyz;
    u_xlat16_30 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_30 = u_xlat16_30 + u_xlat16_30;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_30)) + (-u_xlat3.xyz);
    u_xlat33 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb33 = u_xlat33<9.99999975e-06;
    u_xlat33 = (u_xlatb33) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat4.z = u_xlat16_2.x * u_xlat33;
    u_xlat5.x = u_xlat16_2.z * u_xlat33;
    u_xlat4.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat5.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat4.xyz = u_xlat4.xyz + (-u_xlat5.xyz);
    u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(_NormalDiff);
    u_xlat33 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat33 = sin(u_xlat33);
    u_xlat33 = u_xlat33 * _NormalRand.w;
    u_xlat33 = fract(u_xlat33);
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat33) + u_xlat16_2.xyz;
    u_xlat33 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * u_xlat4.xyz;
    u_xlat5.z = (-_Smoothness) + 1.0;
    u_xlatb33 = u_xlat5.z<0.00499999989;
    u_xlat34 = u_xlat5.z * 8.29800034;
    u_xlat16_30 = (u_xlatb33) ? 0.0 : u_xlat34;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat4.xyz, u_xlat16_30);
    u_xlat16_30 = u_xlat10_1.w + -1.0;
    u_xlat16_30 = unity_SpecCube0_HDR.w * u_xlat16_30 + 1.0;
    u_xlat16_30 = u_xlat16_30 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_30);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat33 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat33 = inversesqrt(u_xlat33);
    u_xlat4.xyz = vec3(u_xlat33) * vs_TEXCOORD1.xyz;
    u_xlat33 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat34 = u_xlat33;
    u_xlat34 = clamp(u_xlat34, 0.0, 1.0);
    u_xlat33 = u_xlat33 + u_xlat33;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat33)) + u_xlat3.xyz;
    u_xlat33 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat33 = clamp(u_xlat33, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat33) * _LightColor0.xyz;
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat5.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat5.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_30 = (-u_xlat34) + 1.0;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_30;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat16_13 = u_xlat16_30 * u_xlat16_13;
    u_xlat23.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat23.xy = sin(u_xlat23.xy);
    u_xlat23.xy = u_xlat23.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat23.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat23.xy;
    u_xlat23.xy = fract(u_xlat23.xy);
    u_xlat23.xy = u_xlat23.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat23.xy).xyz;
    u_xlat10_23 = texture2D(_WhitecapsAlpha, u_xlat23.xy).x;
    u_xlat16_23 = (-u_xlat10_23) + 1.0;
    u_xlat16_5.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_30 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_32 = (-u_xlat16_30) + _Smoothness;
    u_xlat16_7.xyz = vec3(u_xlat16_30) * u_xlat16_7.xyz;
    u_xlat16_30 = u_xlat16_32 + 1.0;
    u_xlat16_30 = clamp(u_xlat16_30, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_30);
    u_xlat16_9.xyz = vec3(u_xlat16_13) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat16_8.xyz = u_xlat3.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_9.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_7.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = u_xlat16_8.xyz * u_xlat16_6.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyw = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat16_3.xyw + unity_FogColor.xyz;
    u_xlat16_3.x = (-u_xlat16_23) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_23;
    u_xlat16_13 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_13;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
lowp float u_xlat10_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
mediump vec3 u_xlat16_11;
float u_xlat24;
mediump float u_xlat16_26;
float u_xlat27;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat3.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat27 = u_xlat24;
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat24 = u_xlat24 + u_xlat24;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat24)) + u_xlat0.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_26 = (-u_xlat27) + 1.0;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_8;
    u_xlat16_8 = u_xlat16_26 * u_xlat16_8;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3 = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_26) + _Smoothness;
    u_xlat16_5.xyz = vec3(u_xlat16_26) * u_xlat16_5.xyz;
    u_xlat16_26 = u_xlat16_29 + 1.0;
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_26);
    u_xlat16_7.xyz = vec3(u_xlat16_8) * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_7.xyz;
    u_xlat16_11.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_11.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_2.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_2.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_5.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat24) * u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD2.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat16_0.xyz + unity_FogColor.xyz;
    u_xlat16_11.x = (-u_xlat16_3) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp float u_xlat10_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_18;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_26;
mediump float u_xlat16_29;
void main()
{
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_1.x = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_26 = (-_Smoothness) + 1.0;
    u_xlat16_3 = u_xlat16_26 * u_xlat16_26 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_3;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10.x = u_xlat16_26 * u_xlat16_26;
    u_xlat16_25 = u_xlat16_26 * u_xlat16_10.x;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10.x * u_xlat16_10.x + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat2.x;
    u_xlat24 = u_xlat16_10.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_2 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_2 = (-u_xlat10_2) + 1.0;
    u_xlat16_10.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_10.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_5.xyz;
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_29);
    u_xlat10.xyz = vec3(u_xlat24) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10.xyz = u_xlat16_1.xyz * u_xlat10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, u_xlat0.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat16_5.x = (-u_xlat3.x) + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_0.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz + u_xlat10.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD2.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_10.x = (-u_xlat16_2) + 1.0;
    u_xlat2.x = vs_TEXCOORD3 * u_xlat16_10.x + u_xlat16_2;
    u_xlat16_10.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat2.x = u_xlat2.x + u_xlat16_10.x;
    u_xlat0.w = min(u_xlat2.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp float u_xlat10_2;
vec3 u_xlat3;
mediump float u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
vec3 u_xlat10;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_18;
float u_xlat24;
mediump float u_xlat16_25;
mediump float u_xlat16_26;
mediump float u_xlat16_29;
void main()
{
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_1.x = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = u_xlat0.xyz * vec3(u_xlat24) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = max(u_xlat24, 0.00100000005);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat24 = dot(_WorldSpaceLightPos0.xyz, u_xlat2.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat24 = max(u_xlat24, 0.319999993);
    u_xlat16_26 = (-_Smoothness) + 1.0;
    u_xlat16_3 = u_xlat16_26 * u_xlat16_26 + 1.5;
    u_xlat24 = u_xlat24 * u_xlat16_3;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat2.x = dot(u_xlat3.xyz, u_xlat2.xyz);
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat2.x = u_xlat2.x * u_xlat2.x;
    u_xlat16_10.x = u_xlat16_26 * u_xlat16_26;
    u_xlat16_25 = u_xlat16_26 * u_xlat16_10.x;
    u_xlat16_25 = (-u_xlat16_25) * 0.280000001 + 1.0;
    u_xlat16_18 = u_xlat16_10.x * u_xlat16_10.x + -1.0;
    u_xlat2.x = u_xlat2.x * u_xlat16_18 + 1.00001001;
    u_xlat24 = u_xlat24 * u_xlat2.x;
    u_xlat24 = u_xlat16_10.x / u_xlat24;
    u_xlat24 = u_xlat24 + -9.99999975e-05;
    u_xlat24 = max(u_xlat24, 0.0);
    u_xlat24 = min(u_xlat24, 100.0);
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_2 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_2 = (-u_xlat10_2) + 1.0;
    u_xlat16_10.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_4.xyz + u_xlat16_10.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_29) * u_xlat16_5.xyz;
    u_xlat16_29 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_29 = u_xlat16_29 + 1.0;
    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_29);
    u_xlat10.xyz = vec3(u_xlat24) * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat10.xyz = u_xlat16_1.xyz * u_xlat10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_5.xyz * u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, u_xlat0.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat16_5.x = (-u_xlat3.x) + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.xyz = u_xlat16_5.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10.xyz = u_xlat10.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_0 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_1.x = u_xlat10_0.w + -1.0;
    u_xlat16_1.x = unity_SpecCube0_HDR.w * u_xlat16_1.x + 1.0;
    u_xlat16_1.x = u_xlat16_1.x * unity_SpecCube0_HDR.x;
    u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(_Occlusion);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_25);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz + u_xlat10.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD2.w;
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_10.x = (-u_xlat16_2) + 1.0;
    u_xlat2.x = vs_TEXCOORD3 * u_xlat16_10.x + u_xlat16_2;
    u_xlat16_10.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat2.x = u_xlat2.x + u_xlat16_10.x;
    u_xlat0.w = min(u_xlat2.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_8;
mediump float u_xlat16_16;
lowp float u_xlat10_16;
float u_xlat24;
bool u_xlatb24;
float u_xlat26;
mediump float u_xlat16_28;
mediump float u_xlat16_29;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat0.xyz = vec3(u_xlat24) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat24 = dot(u_xlat16_1.zxy, (-u_xlat16_1.xyz));
    u_xlatb24 = u_xlat24<9.99999975e-06;
    u_xlat24 = (u_xlatb24) ? u_xlat16_1.z : (-u_xlat16_1.z);
    u_xlat2.z = u_xlat24 * u_xlat16_1.x;
    u_xlat3.x = u_xlat24 * u_xlat16_1.z;
    u_xlat2.xy = (-u_xlat16_1.xy) * u_xlat16_1.yz;
    u_xlat3.yz = (-u_xlat16_1.xy) * u_xlat16_1.xy;
    u_xlat2.xyz = u_xlat2.xyz + (-u_xlat3.xyz);
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(_NormalDiff);
    u_xlat24 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat24 = sin(u_xlat24);
    u_xlat24 = u_xlat24 * _NormalRand.w;
    u_xlat24 = fract(u_xlat24);
    u_xlat2.xyz = u_xlat2.xyz * vec3(u_xlat24) + u_xlat16_1.xyz;
    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * u_xlat2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlatb24 = u_xlat3.z<0.00499999989;
    u_xlat26 = u_xlat3.z * 8.29800034;
    u_xlat16_1.x = (u_xlatb24) ? 0.0 : u_xlat26;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat2.xyz, u_xlat16_1.x);
    u_xlat16_4.x = u_xlat10_1.w + -1.0;
    u_xlat16_4.x = unity_SpecCube0_HDR.w * u_xlat16_4.x + 1.0;
    u_xlat16_4.x = u_xlat16_4.x * unity_SpecCube0_HDR.x;
    u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(_Occlusion);
    u_xlat24 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat24 = inversesqrt(u_xlat24);
    u_xlat2.xyz = vec3(u_xlat24) * vs_TEXCOORD1.xyz;
    u_xlat24 = dot(u_xlat0.xyz, u_xlat2.xyz);
    u_xlat26 = u_xlat24;
    u_xlat26 = clamp(u_xlat26, 0.0, 1.0);
    u_xlat24 = u_xlat24 + u_xlat24;
    u_xlat0.xyz = u_xlat2.xyz * (-vec3(u_xlat24)) + u_xlat0.xyz;
    u_xlat24 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat3.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_28 = (-u_xlat26) + 1.0;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_28;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_8;
    u_xlat16_8 = u_xlat16_28 * u_xlat16_8;
    u_xlat2.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat2.xy = sin(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat2.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat2.xy;
    u_xlat2.xy = fract(u_xlat2.xy);
    u_xlat2.xy = u_xlat2.xy + vs_TEXCOORD0.xy;
    u_xlat10_3.xyz = texture2D(_Whitecaps, u_xlat2.xy).xyz;
    u_xlat10_16 = texture2D(_WhitecapsAlpha, u_xlat2.xy).x;
    u_xlat16_16 = (-u_xlat10_16) + 1.0;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_5.xyz = u_xlat10_3.xyz + u_xlat16_2.xyz;
    u_xlat16_6.xyz = u_xlat16_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_28 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_28) + _Smoothness;
    u_xlat16_5.xyz = vec3(u_xlat16_28) * u_xlat16_5.xyz;
    u_xlat16_28 = u_xlat16_29 + 1.0;
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_7.xyz = (-u_xlat16_6.xyz) + vec3(u_xlat16_28);
    u_xlat16_7.xyz = vec3(u_xlat16_8) * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat16_5.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xyz;
    u_xlat16_2.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_7.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_7.xyz = u_xlat16_7.xyz * vec3(_Occlusion);
    u_xlat16_4.xyz = u_xlat16_7.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_28 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_28 = clamp(u_xlat16_28, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_28) * _LightColor0.xyz;
    u_xlat16_5.xyz = vec3(u_xlat24) * u_xlat16_5.xyz;
    u_xlat16_4.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyw = u_xlat16_4.xyz + (-unity_FogColor.xyz);
    u_xlat2.x = vs_TEXCOORD2.w;
    u_xlat2.x = clamp(u_xlat2.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat2.xxx * u_xlat16_0.xyw + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_16) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_16;
    u_xlat16_8 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_8;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
mediump vec3 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
vec3 u_xlat11;
mediump float u_xlat16_11;
lowp float u_xlat10_11;
vec3 u_xlat12;
float u_xlat22;
float u_xlat36;
mediump float u_xlat16_38;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat1.xxx;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat12.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat12.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat36 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat36;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_38 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_38 = (-u_xlat16_38) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_38);
    u_xlat3.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat11.xyz = u_xlat11.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat11.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat11.x = dot(u_xlat3.xyz, u_xlat11.xyz);
    u_xlat11.x = clamp(u_xlat11.x, 0.0, 1.0);
    u_xlat11.x = u_xlat11.x * u_xlat11.x;
    u_xlat22 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat11.x = u_xlat11.x * u_xlat22 + 1.00001001;
    u_xlat0.x = u_xlat11.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat11.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat11.xy = sin(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat11.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat11.xy;
    u_xlat11.xy = fract(u_xlat11.xy);
    u_xlat11.xy = u_xlat11.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat11.xy).xyz;
    u_xlat10_11 = texture2D(_WhitecapsAlpha, u_xlat11.xy).x;
    u_xlat16_11 = (-u_xlat10_11) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_38 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_38) * u_xlat16_7.xyz;
    u_xlat16_38 = (-u_xlat16_38) + _Smoothness;
    u_xlat16_38 = u_xlat16_38 + 1.0;
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_38);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_38 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_38 = clamp(u_xlat16_38, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_38) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = u_xlat16_4.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat16_38 = (-u_xlat12.x) + 1.0;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_38 = u_xlat16_38 * u_xlat16_38;
    u_xlat16_8.xyz = vec3(u_xlat16_38) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_11) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_11;
    u_xlat16_11 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_11;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp float u_xlat10_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
mediump float u_xlat16_27;
mediump float u_xlat16_29;
float u_xlat30;
float u_xlat31;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat16_27 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_27 = u_xlat16_27 + u_xlat16_27;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_27)) + (-u_xlat3.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_2.xyz);
    u_xlat16_27 = u_xlat10_1.w + -1.0;
    u_xlat16_27 = unity_SpecCube0_HDR.w * u_xlat16_27 + 1.0;
    u_xlat16_27 = u_xlat16_27 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_27);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat30;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat16_27 = (-u_xlat31) + 1.0;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_4 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_4.x = (-u_xlat10_4) + 1.0;
    u_xlat16_13.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_13.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_27) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_27) * u_xlat16_6.xyz;
    u_xlat16_27 = u_xlat16_29 + 1.0;
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_27);
    u_xlat16_8.xyz = vec3(u_xlat16_12) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat3.z = (-_Smoothness) + 1.0;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat3.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_2.xyz = u_xlat3.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_6.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat16_6.xyz = vec3(u_xlat30) * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * u_xlat16_6.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat30 = vs_TEXCOORD2.w;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat30) * u_xlat16_3.xyz + unity_FogColor.xyz;
    u_xlat16_3.x = (-u_xlat16_4.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_4.x;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_12;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_5.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat11.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat11.xyz = u_xlat11.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat11.xyz + unity_FogColor.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec2 u_xlat3;
mediump vec3 u_xlat16_3;
lowp float u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
mediump float u_xlat16_7;
vec3 u_xlat11;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
vec3 u_xlat15;
mediump float u_xlat16_15;
mediump float u_xlat16_20;
mediump float u_xlat16_24;
mediump float u_xlat16_26;
float u_xlat28;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_3 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_3.x = (-u_xlat10_3) + 1.0;
    u_xlat16_11.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_2.xyz = u_xlat10_4.xyz + u_xlat16_11.xyz;
    u_xlat16_24 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_5.xyz = vec3(u_xlat16_24) * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_24 = (-u_xlat16_24) + _Smoothness;
    u_xlat16_24 = u_xlat16_24 + 1.0;
    u_xlat16_24 = clamp(u_xlat16_24, 0.0, 1.0);
    u_xlat16_6.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_24);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat11.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat4.x = dot(u_xlat11.xyz, u_xlat11.xyz);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat12.xyz = u_xlat11.xyz * u_xlat4.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat11.xyz = u_xlat11.xyz * u_xlat4.xxx;
    u_xlat4.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat4.x = max(u_xlat4.x, 0.00100000005);
    u_xlat4.x = inversesqrt(u_xlat4.x);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat12.xyz;
    u_xlat28 = dot(_WorldSpaceLightPos0.xyz, u_xlat4.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat28 = max(u_xlat28, 0.319999993);
    u_xlat16_7 = (-_Smoothness) + 1.0;
    u_xlat16_15 = u_xlat16_7 * u_xlat16_7 + 1.5;
    u_xlat28 = u_xlat28 * u_xlat16_15;
    u_xlat15.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15.x = inversesqrt(u_xlat15.x);
    u_xlat15.xyz = u_xlat15.xxx * vs_TEXCOORD1.xyz;
    u_xlat4.x = dot(u_xlat15.xyz, u_xlat4.xyz);
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat4.x = u_xlat4.x * u_xlat4.x;
    u_xlat16_12 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_24 = u_xlat16_7 * u_xlat16_12;
    u_xlat16_24 = (-u_xlat16_24) * 0.280000001 + 1.0;
    u_xlat16_20 = u_xlat16_12 * u_xlat16_12 + -1.0;
    u_xlat4.x = u_xlat4.x * u_xlat16_20 + 1.00001001;
    u_xlat4.x = u_xlat4.x * u_xlat28;
    u_xlat4.x = u_xlat16_12 / u_xlat4.x;
    u_xlat4.x = u_xlat4.x + -9.99999975e-05;
    u_xlat4.x = max(u_xlat4.x, 0.0);
    u_xlat4.x = min(u_xlat4.x, 100.0);
    u_xlat4.xyz = u_xlat4.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_26 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_26 = clamp(u_xlat16_26, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_26) * _LightColor0.xyz;
    u_xlat4.xyz = u_xlat4.xyz * u_xlat16_5.xyz;
    u_xlat28 = dot(u_xlat15.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat28 = clamp(u_xlat28, 0.0, 1.0);
    u_xlat7 = dot(u_xlat15.xyz, u_xlat11.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat7) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat28) + u_xlat16_0.xyz;
    u_xlat16_0.x = dot((-u_xlat11.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_0.x = u_xlat16_0.x + u_xlat16_0.x;
    u_xlat16_0.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_0.xxx) + (-u_xlat11.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_0.xyz);
    u_xlat16_0.x = u_xlat10_1.w + -1.0;
    u_xlat16_0.x = unity_SpecCube0_HDR.w * u_xlat16_0.x + 1.0;
    u_xlat16_0.x = u_xlat16_0.x * unity_SpecCube0_HDR.x;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat16_0.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_24);
    u_xlat11.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz + u_xlat4.xyz;
    u_xlat11.xyz = u_xlat11.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat11.xyz + unity_FogColor.xyz;
    u_xlat16_11.x = (-u_xlat16_3.x) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_11.x + u_xlat16_3.x;
    u_xlat16_11.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_11.x;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec4 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_12;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
mediump float u_xlat16_27;
mediump float u_xlat16_29;
float u_xlat30;
bool u_xlatb30;
float u_xlat31;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(_Occlusion);
    u_xlat3.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat16_27 = dot((-u_xlat3.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_27 = u_xlat16_27 + u_xlat16_27;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_27)) + (-u_xlat3.xyz);
    u_xlat30 = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb30 = u_xlat30<9.99999975e-06;
    u_xlat30 = (u_xlatb30) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat4.z = u_xlat16_2.x * u_xlat30;
    u_xlat5.x = u_xlat16_2.z * u_xlat30;
    u_xlat4.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat5.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat4.xyz = u_xlat4.xyz + (-u_xlat5.xyz);
    u_xlat30 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz * vec3(_NormalDiff);
    u_xlat30 = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat30 = sin(u_xlat30);
    u_xlat30 = u_xlat30 * _NormalRand.w;
    u_xlat30 = fract(u_xlat30);
    u_xlat4.xyz = u_xlat4.xyz * vec3(u_xlat30) + u_xlat16_2.xyz;
    u_xlat30 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * u_xlat4.xyz;
    u_xlat5.z = (-_Smoothness) + 1.0;
    u_xlatb30 = u_xlat5.z<0.00499999989;
    u_xlat31 = u_xlat5.z * 8.29800034;
    u_xlat16_27 = (u_xlatb30) ? 0.0 : u_xlat31;
    u_xlat10_1 = textureCube(unity_SpecCube0, u_xlat4.xyz, u_xlat16_27);
    u_xlat16_27 = u_xlat10_1.w + -1.0;
    u_xlat16_27 = unity_SpecCube0_HDR.w * u_xlat16_27 + 1.0;
    u_xlat16_27 = u_xlat16_27 * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(u_xlat16_27);
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat30 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat4.xyz = vec3(u_xlat30) * vs_TEXCOORD1.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat4.xyz);
    u_xlat31 = u_xlat30;
    u_xlat31 = clamp(u_xlat31, 0.0, 1.0);
    u_xlat30 = u_xlat30 + u_xlat30;
    u_xlat3.xyz = u_xlat4.xyz * (-vec3(u_xlat30)) + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat3.x = u_xlat3.x * u_xlat3.x;
    u_xlat5.x = u_xlat3.x * u_xlat3.x;
    u_xlat3.x = texture2D(unity_NHxRoughness, u_xlat5.xz).x;
    u_xlat3.x = u_xlat3.x * 16.0;
    u_xlat16_27 = (-u_xlat31) + 1.0;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_27;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat16_12 = u_xlat16_27 * u_xlat16_12;
    u_xlat4.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat4.xy = sin(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat4.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat4.xy;
    u_xlat4.xy = fract(u_xlat4.xy);
    u_xlat4.xy = u_xlat4.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat4.xy).xyz;
    u_xlat10_21 = texture2D(_WhitecapsAlpha, u_xlat4.xy).x;
    u_xlat16_21 = (-u_xlat10_21) + 1.0;
    u_xlat16_4.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_4.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_29 = (-u_xlat16_27) + _Smoothness;
    u_xlat16_6.xyz = vec3(u_xlat16_27) * u_xlat16_6.xyz;
    u_xlat16_27 = u_xlat16_29 + 1.0;
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_27);
    u_xlat16_8.xyz = vec3(u_xlat16_12) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_7.xyz = u_xlat3.xxx * u_xlat16_7.xyz + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_6.xyz + u_xlat16_2.xyz;
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_27 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_27 = clamp(u_xlat16_27, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat16_27) * _LightColor0.xyz;
    u_xlat16_2.xyz = vec3(u_xlat30) * u_xlat16_2.xyz;
    u_xlat16_0.xyz = u_xlat16_7.xyz * u_xlat16_2.xyz + u_xlat16_0.xyz;
    u_xlat16_3.xyw = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat4.x = vs_TEXCOORD2.w;
    u_xlat4.x = clamp(u_xlat4.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat4.xxx * u_xlat16_3.xyw + unity_FogColor.xyz;
    u_xlat16_3.x = (-u_xlat16_21) + 1.0;
    u_xlat3.x = vs_TEXCOORD3 * u_xlat16_3.x + u_xlat16_21;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat3.x = u_xlat3.x + u_xlat16_12;
    u_xlat0.w = min(u_xlat3.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_41 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_41) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD4.xy = u_xlat0.xy;
    vs_TEXCOORD6.xy = u_xlat0.xy;
    vs_TEXCOORD6.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	vec4 _NormalRand;
uniform 	mediump float _NormalDiff;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
uniform lowp samplerCube unity_SpecCube0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
varying highp vec4 vs_TEXCOORD6;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_0;
vec4 u_xlat1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
vec3 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_9;
mediump vec3 u_xlat16_10;
mediump vec3 u_xlat16_11;
vec3 u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
vec3 u_xlat13;
float u_xlat24;
float u_xlat39;
mediump float u_xlat16_41;
void main()
{
    u_xlat0.x = dot(vs_TEXCOORD2.xyz, _NormalRand.xyz);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _NormalRand.w;
    u_xlat0.x = fract(u_xlat0.x);
    u_xlat12.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat13.xyz = u_xlat12.xyz * u_xlat1.xxx;
    u_xlat12.xyz = u_xlat12.xyz * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;
    u_xlat16_2.x = dot((-u_xlat13.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_2.x = u_xlat16_2.x + u_xlat16_2.x;
    u_xlat16_2.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_2.xxx) + (-u_xlat13.xyz);
    u_xlat1.x = dot(u_xlat16_2.zxy, (-u_xlat16_2.xyz));
    u_xlatb1 = u_xlat1.x<9.99999975e-06;
    u_xlat1.x = (u_xlatb1) ? u_xlat16_2.z : (-u_xlat16_2.z);
    u_xlat3.z = u_xlat1.x * u_xlat16_2.x;
    u_xlat4.x = u_xlat1.x * u_xlat16_2.z;
    u_xlat3.xy = (-u_xlat16_2.xy) * u_xlat16_2.yz;
    u_xlat4.yz = (-u_xlat16_2.xy) * u_xlat16_2.xy;
    u_xlat3.xyz = u_xlat3.xyz + (-u_xlat4.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat3.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz * vec3(_NormalDiff);
    u_xlat3.xyz = u_xlat3.xyz * u_xlat0.xxx + u_xlat16_2.xyz;
    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
    u_xlat0.x = (-_Smoothness) + 1.0;
    u_xlatb1 = u_xlat0.x<0.00499999989;
    u_xlat39 = u_xlat0.x * 8.29800034;
    u_xlat16_2.x = (u_xlatb1) ? 0.0 : u_xlat39;
    u_xlat10_2 = textureCube(unity_SpecCube0, u_xlat3.xyz, u_xlat16_2.x);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat1.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_41 = u_xlat0.x * u_xlat1.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.5;
    u_xlat16_41 = (-u_xlat16_41) * 0.280000001 + 1.0;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(u_xlat16_41);
    u_xlat3.x = dot(u_xlat12.xyz, u_xlat12.xyz);
    u_xlat3.x = max(u_xlat3.x, 0.00100000005);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat12.xyz = u_xlat12.xyz * u_xlat3.xxx;
    u_xlat3.x = dot(_WorldSpaceLightPos0.xyz, u_xlat12.xyz);
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat3.x = max(u_xlat3.x, 0.319999993);
    u_xlat0.x = u_xlat0.x * u_xlat3.x;
    u_xlat3.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat3.x = inversesqrt(u_xlat3.x);
    u_xlat3.xyz = u_xlat3.xxx * vs_TEXCOORD1.xyz;
    u_xlat12.x = dot(u_xlat3.xyz, u_xlat12.xyz);
    u_xlat12.x = clamp(u_xlat12.x, 0.0, 1.0);
    u_xlat12.x = u_xlat12.x * u_xlat12.x;
    u_xlat24 = u_xlat1.x * u_xlat1.x + -1.0;
    u_xlat12.x = u_xlat12.x * u_xlat24 + 1.00001001;
    u_xlat0.x = u_xlat12.x * u_xlat0.x;
    u_xlat0.x = u_xlat1.x / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat12.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat12.xy = sin(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat12.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat12.xy;
    u_xlat12.xy = fract(u_xlat12.xy);
    u_xlat12.xy = u_xlat12.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat12.xy).xyz;
    u_xlat10_12 = texture2D(_WhitecapsAlpha, u_xlat12.xy).x;
    u_xlat16_12 = (-u_xlat10_12) + 1.0;
    u_xlat16_6.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_7.xyz = u_xlat10_4.xyz + u_xlat16_6.xyz;
    u_xlat16_8.xyz = u_xlat16_7.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_8.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_8.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_7.xyz = vec3(u_xlat16_41) * u_xlat16_7.xyz;
    u_xlat16_41 = (-u_xlat16_41) + _Smoothness;
    u_xlat16_41 = u_xlat16_41 + 1.0;
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_9.xyz = (-u_xlat16_8.xyz) + vec3(u_xlat16_41);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat10_2 = texture2D(unity_ShadowMask, vs_TEXCOORD6.xy);
    u_xlat16_41 = dot(u_xlat10_2, unity_OcclusionMaskSelector);
    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);
    u_xlat16_10.xyz = vec3(u_xlat16_41) * _LightColor0.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat16_10.xyz;
    u_xlat16_41 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_41 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_41);
    u_xlat16_2 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_10.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_10.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_10.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_10.xyz = unity_SHC.xyz * vec3(u_xlat16_41) + u_xlat16_10.xyz;
    u_xlat2.xyz = vs_TEXCOORD1.xyz;
    u_xlat2.w = 1.0;
    u_xlat16_11.x = dot(unity_SHAr, u_xlat2);
    u_xlat16_11.y = dot(unity_SHAg, u_xlat2);
    u_xlat16_11.z = dot(unity_SHAb, u_xlat2);
    u_xlat16_10.xyz = u_xlat16_10.xyz + u_xlat16_11.xyz;
    u_xlat16_10.xyz = max(u_xlat16_10.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_10.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_6.xyz = texture2D(unity_Lightmap, vs_TEXCOORD4.xy).xyz;
    u_xlat16_10.xyz = unity_Lightmap_HDR.xxx * u_xlat16_6.xyz + u_xlat16_4.xyz;
    u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(_Occlusion);
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat16_10.xyz;
    u_xlat1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat13.x = dot(u_xlat3.xyz, u_xlat13.xyz);
    u_xlat13.x = clamp(u_xlat13.x, 0.0, 1.0);
    u_xlat16_41 = (-u_xlat13.x) + 1.0;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_41 = u_xlat16_41 * u_xlat16_41;
    u_xlat16_8.xyz = vec3(u_xlat16_41) * u_xlat16_9.xyz + u_xlat16_8.xyz;
    u_xlat0.xzw = u_xlat0.xzw * u_xlat1.xxx + u_xlat16_7.xyz;
    u_xlat0.xzw = u_xlat16_5.xyz * u_xlat16_8.xyz + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw + (-unity_FogColor.xyz);
    u_xlat1.x = vs_TEXCOORD2.w;
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat0.xzw + unity_FogColor.xyz;
    u_xlat16_0 = (-u_xlat16_12) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0 + u_xlat16_12;
    u_xlat16_12 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_12;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform highp sampler2D unity_NHxRoughness;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_5;
mediump vec3 u_xlat16_6;
mediump vec3 u_xlat16_7;
mediump vec3 u_xlat16_8;
mediump float u_xlat16_9;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
mediump float u_xlat16_29;
float u_xlat30;
mediump float u_xlat16_31;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat0.xyz = vec3(u_xlat27) * u_xlat0.xyz;
    u_xlat16_1.x = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_1.x = u_xlat16_1.x + u_xlat16_1.x;
    u_xlat16_1.xyz = vs_TEXCOORD1.xyz * (-u_xlat16_1.xxx) + (-u_xlat0.xyz);
    u_xlat10_1 = textureCube(_HeuristicReflection, u_xlat16_1.xyz);
    u_xlat16_2.x = u_xlat10_1.w + -1.0;
    u_xlat16_2.x = unity_SpecCube0_HDR.w * u_xlat16_2.x + 1.0;
    u_xlat16_2.x = u_xlat16_2.x * unity_SpecCube0_HDR.x;
    u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(_Occlusion);
    u_xlat27 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat27 = inversesqrt(u_xlat27);
    u_xlat3.xyz = vec3(u_xlat27) * vs_TEXCOORD1.xyz;
    u_xlat27 = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat30 = u_xlat27;
    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);
    u_xlat27 = u_xlat27 + u_xlat27;
    u_xlat0.xyz = u_xlat3.xyz * (-vec3(u_xlat27)) + u_xlat0.xyz;
    u_xlat27 = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat27 = clamp(u_xlat27, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat27) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_29 = (-u_xlat30) + 1.0;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_29;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat16_9 = u_xlat16_29 * u_xlat16_9;
    u_xlat3.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat3.xy = sin(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat3.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat3.xy;
    u_xlat3.xy = fract(u_xlat3.xy);
    u_xlat3.xy = u_xlat3.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat3.xy).xyz;
    u_xlat10_27 = texture2D(_WhitecapsAlpha, u_xlat3.xy).x;
    u_xlat16_27 = (-u_xlat10_27) + 1.0;
    u_xlat16_3.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_6.xyz = u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_7.xyz = u_xlat16_6.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_29 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_31 = (-u_xlat16_29) + _Smoothness;
    u_xlat16_31 = u_xlat16_31 + 1.0;
    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);
    u_xlat16_8.xyz = (-u_xlat16_7.xyz) + vec3(u_xlat16_31);
    u_xlat16_8.xyz = vec3(u_xlat16_9) * u_xlat16_8.xyz + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_8.xyz;
    u_xlat0.z = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xz).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat16_7.xyz = u_xlat16_7.xyz * u_xlat0.xxx;
    u_xlat16_6.xyz = u_xlat16_6.xyz * vec3(u_xlat16_29) + u_xlat16_7.xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz * u_xlat16_4.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz + (-unity_FogColor.xyz);
    u_xlat3.x = vs_TEXCOORD2.w;
    u_xlat3.x = clamp(u_xlat3.x, 0.0, 1.0);
    u_xlat1.xyz = u_xlat3.xxx * u_xlat16_0.xyz + unity_FogColor.xyz;
    u_xlat16_0.x = (-u_xlat16_27) + 1.0;
    u_xlat0.x = vs_TEXCOORD3 * u_xlat16_0.x + u_xlat16_27;
    u_xlat16_9 = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat0.x = u_xlat0.x + u_xlat16_9;
    u_xlat1.w = min(u_xlat0.x, 1.0);
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
float u_xlat21;
mediump float u_xlat16_22;
mediump float u_xlat16_26;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat21 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat21) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz;
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat21 = max(u_xlat21, 0.319999993);
    u_xlat16_22 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_22 * u_xlat16_22 + 1.5;
    u_xlat21 = u_xlat21 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_8.x = u_xlat16_22 * u_xlat16_22;
    u_xlat16_3.x = u_xlat16_22 * u_xlat16_8.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_15 = u_xlat16_8.x * u_xlat16_8.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_15 + 1.00001001;
    u_xlat21 = u_xlat21 * u_xlat1.x;
    u_xlat21 = u_xlat16_8.x / u_xlat21;
    u_xlat21 = u_xlat21 + -9.99999975e-05;
    u_xlat21 = max(u_xlat21, 0.0);
    u_xlat21 = min(u_xlat21, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_10.xyz = u_xlat10_4.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat8.xyz = vec3(u_xlat21) * u_xlat16_5.xyz;
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat8.xyz = u_xlat16_10.xyz * vec3(u_xlat16_26) + u_xlat8.xyz;
    u_xlat16_10.x = (-u_xlat16_26) + _Smoothness;
    u_xlat16_10.x = u_xlat16_10.x + 1.0;
    u_xlat16_10.x = clamp(u_xlat16_10.x, 0.0, 1.0);
    u_xlat16_10.xyz = (-u_xlat16_5.xyz) + u_xlat16_10.xxx;
    u_xlat8.xyz = u_xlat8.xyz * _LightColor0.xyz;
    u_xlat16_26 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_26 = u_xlat16_26 + u_xlat16_26;
    u_xlat16_6.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_26)) + (-u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat7 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat0.x) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_10.xyz = vec3(u_xlat16_26) * u_xlat16_10.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_6.xyz);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_3.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat8.xyz * vec3(u_xlat7) + u_xlat16_3.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD2.w;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_8.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_1;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_8.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD6;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
vec3 u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6.x = u_xlat6.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6.x);
    u_xlat3.x = cos(u_xlat6.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6.x = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6.x;
    u_xlat6.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6.x;
    u_xlat6.x = abs(u_xlat6.x) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6.x / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat6.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat2.xy = u_xlat6.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat6.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat1.xyz = u_xlat6.xxx * u_xlat3.xyz;
    u_xlat6.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat6.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    vs_TEXCOORD1.xyz = u_xlat6.xxx * u_xlat1.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD2.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_SpecCube0_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Occlusion;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsBaseAlpha;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform lowp sampler2D _WhitecapsAlpha;
uniform lowp samplerCube _HeuristicReflection;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec4 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec3 u_xlat2;
mediump float u_xlat16_2;
lowp vec4 u_xlat10_2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
vec3 u_xlat8;
mediump vec3 u_xlat16_8;
mediump vec3 u_xlat16_10;
mediump float u_xlat16_15;
float u_xlat21;
mediump float u_xlat16_22;
mediump float u_xlat16_26;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat21 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = u_xlat0.xyz * vec3(u_xlat21) + _WorldSpaceLightPos0.xyz;
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz;
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = max(u_xlat21, 0.00100000005);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    u_xlat21 = dot(_WorldSpaceLightPos0.xyz, u_xlat1.xyz);
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat21 = max(u_xlat21, 0.319999993);
    u_xlat16_22 = (-_Smoothness) + 1.0;
    u_xlat16_2 = u_xlat16_22 * u_xlat16_22 + 1.5;
    u_xlat21 = u_xlat21 * u_xlat16_2;
    u_xlat2.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat2.xxx * vs_TEXCOORD1.xyz;
    u_xlat1.x = dot(u_xlat2.xyz, u_xlat1.xyz);
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
    u_xlat1.x = u_xlat1.x * u_xlat1.x;
    u_xlat16_8.x = u_xlat16_22 * u_xlat16_22;
    u_xlat16_3.x = u_xlat16_22 * u_xlat16_8.x;
    u_xlat16_3.x = (-u_xlat16_3.x) * 0.280000001 + 1.0;
    u_xlat16_15 = u_xlat16_8.x * u_xlat16_8.x + -1.0;
    u_xlat1.x = u_xlat1.x * u_xlat16_15 + 1.00001001;
    u_xlat21 = u_xlat21 * u_xlat1.x;
    u_xlat21 = u_xlat16_8.x / u_xlat21;
    u_xlat21 = u_xlat21 + -9.99999975e-05;
    u_xlat21 = max(u_xlat21, 0.0);
    u_xlat21 = min(u_xlat21, 100.0);
    u_xlat1.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat1.xy = sin(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat1.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat1.xy;
    u_xlat1.xy = fract(u_xlat1.xy);
    u_xlat1.xy = u_xlat1.xy + vs_TEXCOORD0.xy;
    u_xlat10_4.xyz = texture2D(_Whitecaps, u_xlat1.xy).xyz;
    u_xlat10_1 = texture2D(_WhitecapsAlpha, u_xlat1.xy).x;
    u_xlat16_1 = (-u_xlat10_1) + 1.0;
    u_xlat16_8.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_10.xyz = u_xlat10_4.xyz + u_xlat16_8.xyz;
    u_xlat16_5.xyz = u_xlat16_10.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_5.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_5.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat8.xyz = vec3(u_xlat21) * u_xlat16_5.xyz;
    u_xlat16_26 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat8.xyz = u_xlat16_10.xyz * vec3(u_xlat16_26) + u_xlat8.xyz;
    u_xlat16_10.x = (-u_xlat16_26) + _Smoothness;
    u_xlat16_10.x = u_xlat16_10.x + 1.0;
    u_xlat16_10.x = clamp(u_xlat16_10.x, 0.0, 1.0);
    u_xlat16_10.xyz = (-u_xlat16_5.xyz) + u_xlat16_10.xxx;
    u_xlat8.xyz = u_xlat8.xyz * _LightColor0.xyz;
    u_xlat16_26 = dot((-u_xlat0.xyz), vs_TEXCOORD1.xyz);
    u_xlat16_26 = u_xlat16_26 + u_xlat16_26;
    u_xlat16_6.xyz = vs_TEXCOORD1.xyz * (-vec3(u_xlat16_26)) + (-u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat7 = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat7 = clamp(u_xlat7, 0.0, 1.0);
    u_xlat16_26 = (-u_xlat0.x) + 1.0;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;
    u_xlat16_10.xyz = vec3(u_xlat16_26) * u_xlat16_10.xyz + u_xlat16_5.xyz;
    u_xlat10_2 = textureCube(_HeuristicReflection, u_xlat16_6.xyz);
    u_xlat16_5.x = u_xlat10_2.w + -1.0;
    u_xlat16_5.x = unity_SpecCube0_HDR.w * u_xlat16_5.x + 1.0;
    u_xlat16_5.x = u_xlat16_5.x * unity_SpecCube0_HDR.x;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat16_5.xxx;
    u_xlat16_5.xyz = u_xlat16_5.xyz * vec3(_Occlusion);
    u_xlat16_5.xyz = u_xlat16_3.xxx * u_xlat16_5.xyz;
    u_xlat16_3.xyz = u_xlat16_10.xyz * u_xlat16_5.xyz;
    u_xlat0.xyz = u_xlat8.xyz * vec3(u_xlat7) + u_xlat16_3.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD2.w;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat21) * u_xlat0.xyz + unity_FogColor.xyz;
    u_xlat16_8.x = (-u_xlat16_1) + 1.0;
    u_xlat1.x = vs_TEXCOORD3 * u_xlat16_8.x + u_xlat16_1;
    u_xlat16_8.x = vs_COLOR0.w + _WhitecapsBaseAlpha;
    u_xlat1.x = u_xlat1.x + u_xlat16_8.x;
    u_xlat0.w = min(u_xlat1.x, 1.0);
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 5000
  Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 92658
Program "vp" {
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform highp sampler2D unity_NHxRoughness;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat1.xyz = vec3(u_xlat15) * vs_TEXCOORD1.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);
    u_xlat15 = u_xlat15 + u_xlat15;
    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat15 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat15) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.y = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat5.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat5.xy = sin(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat5.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat5.xy;
    u_xlat5.xy = fract(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat5.xy).xyz;
    u_xlat16_1.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_5.xyz + u_xlat16_1.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_17 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform highp sampler2D unity_NHxRoughness;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat1.xyz = vec3(u_xlat15) * vs_TEXCOORD1.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);
    u_xlat15 = u_xlat15 + u_xlat15;
    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat15 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat15) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.y = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat5.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat5.xy = sin(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat5.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat5.xy;
    u_xlat5.xy = fract(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat5.xy).xyz;
    u_xlat16_1.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_5.xyz + u_xlat16_1.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_17 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform highp sampler2D unity_NHxRoughness;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat1.xyz = vec3(u_xlat15) * vs_TEXCOORD1.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);
    u_xlat15 = u_xlat15 + u_xlat15;
    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat15 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat15) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.y = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat5.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat5.xy = sin(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat5.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat5.xy;
    u_xlat5.xy = fract(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat5.xy).xyz;
    u_xlat16_1.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_5.xyz + u_xlat16_1.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_17 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    u_xlat0.x = vs_TEXCOORD6;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xxx;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    u_xlat15 = vs_TEXCOORD6;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15);
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    u_xlat15 = vs_TEXCOORD6;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15);
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
uniform highp sampler2D unity_NHxRoughness;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat1.xyz = vec3(u_xlat15) * vs_TEXCOORD1.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat1.xyz);
    u_xlat15 = u_xlat15 + u_xlat15;
    u_xlat0.xyz = u_xlat1.xyz * (-vec3(u_xlat15)) + u_xlat0.xyz;
    u_xlat15 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat16_2.xyz = vec3(u_xlat15) * _LightColor0.xyz;
    u_xlat0.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.y = (-_Smoothness) + 1.0;
    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;
    u_xlat0.x = u_xlat0.x * 16.0;
    u_xlat5.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat5.xy = sin(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat5.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat5.xy;
    u_xlat5.xy = fract(u_xlat5.xy);
    u_xlat5.xy = u_xlat5.xy + vs_TEXCOORD0.xy;
    u_xlat10_5.xyz = texture2D(_Whitecaps, u_xlat5.xy).xyz;
    u_xlat16_1.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_5.xyz + u_xlat16_1.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_17 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_17) + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    u_xlat0.x = vs_TEXCOORD6;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xxx;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    u_xlat15 = vs_TEXCOORD6;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15);
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
uniform 	vec4 _Whitecaps_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD0;
attribute mediump vec4 in_COLOR0;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD3;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
float u_xlat6;
float u_xlat12;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat6 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat6;
    u_xlat6 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat6;
    u_xlat6 = abs(u_xlat6) + (-_WhitecapsDepthMin);
    u_xlat12 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD3 = u_xlat6 / u_xlat12;
    vs_TEXCOORD3 = clamp(vs_TEXCOORD3, 0.0, 1.0);
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD6 = max(u_xlat0.x, u_xlat16_5);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _Whitecaps_ST.xy + _Whitecaps_ST.zw;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb18)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 booster_Env;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Metallic;
uniform 	mediump float _Smoothness;
uniform 	mediump float _WhitecapsScrollSpeedU;
uniform 	mediump float _WhitecapsScrollSpeedV;
uniform 	mediump float _WhitecapsScrollSinScaleU;
uniform 	mediump float _WhitecapsScrollSinScaleV;
uniform 	mediump float _WhitecapsScrollSinSpeedU;
uniform 	mediump float _WhitecapsScrollSinSpeedV;
uniform lowp sampler2D _Whitecaps;
varying highp vec2 vs_TEXCOORD0;
varying highp float vs_TEXCOORD6;
varying highp vec3 vs_TEXCOORD1;
varying highp vec3 vs_TEXCOORD2;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
vec3 u_xlat6;
mediump float u_xlat16_6;
vec2 u_xlat10;
mediump float u_xlat16_10;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = max(u_xlat15, 0.00100000005);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat15 = dot(_WorldSpaceLightPos0.xyz, u_xlat0.xyz);
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat15 = max(u_xlat15, 0.319999993);
    u_xlat16_1 = (-_Smoothness) + 1.0;
    u_xlat16_6 = u_xlat16_1 * u_xlat16_1 + 1.5;
    u_xlat16_1 = u_xlat16_1 * u_xlat16_1;
    u_xlat15 = u_xlat15 * u_xlat16_6;
    u_xlat6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat6.xxx * vs_TEXCOORD1.xyz;
    u_xlat0.x = dot(u_xlat6.xyz, u_xlat0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat5 = dot(u_xlat6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat5 = clamp(u_xlat5, 0.0, 1.0);
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat16_10 = u_xlat16_1 * u_xlat16_1 + -1.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_10 + 1.00001001;
    u_xlat0.x = u_xlat0.x * u_xlat15;
    u_xlat0.x = u_xlat16_1 / u_xlat0.x;
    u_xlat0.x = u_xlat0.x + -9.99999975e-05;
    u_xlat0.x = max(u_xlat0.x, 0.0);
    u_xlat0.x = min(u_xlat0.x, 100.0);
    u_xlat10.xy = booster_Env.xx * vec2(_WhitecapsScrollSinSpeedU, _WhitecapsScrollSinSpeedV);
    u_xlat10.xy = sin(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy * vec2(_WhitecapsScrollSinScaleU, _WhitecapsScrollSinScaleV);
    u_xlat10.xy = vec2(_WhitecapsScrollSpeedU, _WhitecapsScrollSpeedV) * booster_Env.xx + u_xlat10.xy;
    u_xlat10.xy = fract(u_xlat10.xy);
    u_xlat10.xy = u_xlat10.xy + vs_TEXCOORD0.xy;
    u_xlat10_1.xyz = texture2D(_Whitecaps, u_xlat10.xy).xyz;
    u_xlat16_2.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_3.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);
    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);
    u_xlat0.xzw = u_xlat0.xxx * u_xlat16_4.xyz;
    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;
    u_xlat0.xzw = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat0.xzw;
    u_xlat0.xzw = u_xlat0.xzw * _LightColor0.xyz;
    u_xlat0.xyz = vec3(u_xlat5) * u_xlat0.xzw;
    u_xlat15 = vs_TEXCOORD6;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15);
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_NO" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" "_REFLECTIONPROBETYPE_YES" }
""
}
}
}
}
SubShader {
 LOD 2500
 Tags { "QUEUE" = "Transparent" "RenderType" = "Transparent" }
 Pass {
  Name "FORWARD"
  LOD 2500
  Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 242560
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = vec3(u_xlat16_0) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_0) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_0) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_0) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_4.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_4.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_4.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_4.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_4.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);
    u_xlat16_4.xyz = u_xlat16_4.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_4.xyz * vec3(u_xlat16_0) + u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.w = 0.0;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_1.w;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat11;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + (-unity_FogColor.xyz);
    u_xlat11 = vs_TEXCOORD1.w;
    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat11) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat11;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + (-unity_FogColor.xyz);
    u_xlat11 = vs_TEXCOORD1.w;
    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat11) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump float u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat11;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat1.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + (-unity_FogColor.xyz);
    u_xlat11 = vs_TEXCOORD1.w;
    u_xlat11 = clamp(u_xlat11, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat11) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD1.w;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD1.w;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_13 = max(u_xlat16_13, 0.0);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_13) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD1.w;
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat7.xyz = u_xlat7.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat7.xyz;
    u_xlat16_5 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_5);
    vs_COLOR0 = in_COLOR0;
    u_xlat16_5 = u_xlat7.y * u_xlat7.y;
    u_xlat16_5 = u_xlat7.x * u_xlat7.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat7.yzzx * u_xlat7.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec4 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_16;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat10_0 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_18 = dot(u_xlat10_0, unity_OcclusionMaskSelector);
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_4.xyz = vec3(u_xlat16_18) * _LightColor0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD1.w;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
float u_xlat18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
float u_xlat18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_15;
float u_xlat18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_15 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_15 = max(u_xlat16_15, 0.0);
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_15) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_5.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_2.xyz;
    u_xlat16_3.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_5.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_5.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_2.xyz;
    u_xlat16_3.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_5.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat10_1 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_5.x = dot(u_xlat10_1, unity_OcclusionMaskSelector);
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_2.xyz;
    u_xlat16_3.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_3.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_5.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD1.w;
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat18) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
lowp vec4 u_xlat10_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_3 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_3, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD1.w;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
lowp vec4 u_xlat10_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_3 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_3, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD1.w;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD1.w = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
uniform lowp sampler2D unity_ShadowMask;
varying highp vec3 vs_TEXCOORD0;
varying highp vec4 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
lowp vec4 u_xlat10_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
mediump float u_xlat16_20;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_0.x = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD0.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat1 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat10_3 = texture2D(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_20 = dot(u_xlat10_3, unity_OcclusionMaskSelector);
    u_xlat16_20 = clamp(u_xlat16_20, 0.0, 1.0);
    u_xlat16_5.xyz = vec3(u_xlat16_20) * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_5.xyz;
    u_xlat16_0.xyz = u_xlat16_2.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD1.w;
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat1;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 2500
  Tags { "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 323150
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    u_xlat16_1.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD5;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    u_xlat16_1.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD5;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD4;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
mediump float u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    vs_TEXCOORD0.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat7.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat7.x;
    u_xlat7.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat7.x;
    u_xlat7.x = abs(u_xlat7.x) + (-_WhitecapsDepthMin);
    u_xlat14 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat7.x / u_xlat14;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat16_6 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_6);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD5;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_7;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_7 = dot(vs_TEXCOORD0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7 = max(u_xlat16_7, 0.0);
    u_xlat16_1.xyz = vec3(u_xlat16_7) * u_xlat16_1.xyz;
    u_xlat0.x = vs_TEXCOORD5;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 392748
Program "vp" {
SubProgram "gles hw_tier00 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
varying highp vec3 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
varying highp vec3 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
varying highp vec3 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 450249
Program "vp" {
SubProgram "gles hw_tier00 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_5.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_5.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_2.w;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_1.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat3;
float u_xlat4;
float u_xlat6;
float u_xlat9;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat3 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat6 * _Wave2Speed + (-u_xlat3);
    u_xlat0.x = u_xlat6 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat3 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat3;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat9 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat9;
    u_xlat9 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat9;
    u_xlat1.x = abs(u_xlat9) + (-_WhitecapsDepthMin);
    u_xlat4 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat4;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat2.zw;
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat9);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_0.w;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec2 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7.x = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7.x * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7.x = u_xlat7.x * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7.x = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7.x * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7.x = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat0.x / u_xlat7.x;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat4.w = u_xlat0.x * 0.5;
    u_xlat4.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat4.zz + u_xlat4.xw;
    vs_TEXCOORD2.zw = u_xlat3.zw;
    u_xlat0.x = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat2.y = 1.0;
    u_xlat7.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat2.xy = u_xlat7.xx * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat4.x = (-u_xlat1.x);
    u_xlat4.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat4.xyz, in_NORMAL0.xyz);
    u_xlat7.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat3.xyz;
    u_xlat7.xyz = (bool(u_xlatb21)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat7.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat7.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat7.x = inversesqrt(u_xlat7.x);
    u_xlat1.xyz = u_xlat7.xxx * u_xlat1.xyz;
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_2 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_6.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_6.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_6.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
    u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat7.xyz = log2(u_xlat16_5.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat7.xyz = exp2(u_xlat7.xyz);
    u_xlat7.xyz = u_xlat7.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat7.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_5.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
vec4 u_xlat2;
float u_xlat9;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat2 = vs_COLOR0 + _Color;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat9 = vs_TEXCOORD5;
    u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
    u_xlat2.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat2;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 100

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
varying highp float vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump float u_xlat16_3;
float u_xlat4;
float u_xlat5;
float u_xlat8;
float u_xlat12;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat0.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4 = u_xlat0.x * _Wave2Freq;
    u_xlat0.x = u_xlat0.x * _WaveFreq;
    u_xlat8 = booster_Env.x * 0.0500000007;
    u_xlat0.y = u_xlat8 * _Wave2Speed + (-u_xlat4);
    u_xlat0.x = u_xlat8 * _WaveSpeed + (-u_xlat0.x);
    u_xlat0.xy = sin(u_xlat0.xy);
    u_xlat4 = u_xlat0.y * _Wave2Height;
    u_xlat0.x = _WaveHeight * u_xlat0.x + u_xlat4;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat0 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    gl_Position = u_xlat2;
    u_xlat12 = u_xlat1.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat1.x + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat1.z + u_xlat12;
    u_xlat12 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat1.w + u_xlat12;
    u_xlat1.x = abs(u_xlat12) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD1 = u_xlat1.x / u_xlat5;
    vs_TEXCOORD1 = clamp(vs_TEXCOORD1, 0.0, 1.0);
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat1.w = u_xlat0.x * 0.5;
    u_xlat1.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
    vs_TEXCOORD2.zw = u_xlat2.zw;
    u_xlat0.x = u_xlat2.z * unity_FogParams.z + unity_FogParams.w;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat4 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat4 * (-u_xlat12);
    u_xlat16_3 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat0.x, u_xlat16_3);
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform lowp sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
varying highp float vs_TEXCOORD5;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat15;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat10_0.xyz = texture2D(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat0 = vs_COLOR0 + _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD5;
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0 = u_xlat0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "DEFERRED"
  LOD 2500
  Tags { "LIGHTMODE" = "DEFERRED" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 477386
Program "vp" {
SubProgram "gles hw_tier00 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
vec3 u_xlat0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
float u_xlat5;
float u_xlat10;
float u_xlat15;
bool u_xlatb15;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat10 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat15 = sqrt(u_xlat10);
    u_xlat10 = inversesqrt(u_xlat10);
    u_xlat1.xy = vec2(u_xlat10) * u_xlat0.xy;
    u_xlat0.x = u_xlat15 * _Wave2Freq;
    u_xlat5 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat5 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat10 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat15 * _WaveFreq;
    u_xlatb15 = 0.0<u_xlat15;
    u_xlat5 = u_xlat5 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat5);
    u_xlat3.x = cos(u_xlat5);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat5 = _WaveHeight * u_xlat3.x + u_xlat10;
    u_xlat2.x = u_xlat5 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb15)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    vs_TEXCOORD0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat5 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat5;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying mediump vec3 vs_TEXCOORD4;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
vec3 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump float u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat7;
float u_xlat14;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat14 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat21 = sqrt(u_xlat14);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat1.xy = vec2(u_xlat14) * u_xlat0.xy;
    u_xlat0.x = u_xlat21 * _Wave2Freq;
    u_xlat7 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat7 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat14 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat21 * _WaveFreq;
    u_xlatb21 = 0.0<u_xlat21;
    u_xlat7 = u_xlat7 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat7);
    u_xlat3.x = cos(u_xlat7);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat7 = _WaveHeight * u_xlat3.x + u_xlat14;
    u_xlat2.x = u_xlat7 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat0.x = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat0.x;
    u_xlat0.x = abs(u_xlat0.x) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat0.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    u_xlat2.y = 1.0;
    u_xlat0.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xy = u_xlat0.xx * u_xlat2.xy;
    u_xlat0.z = (-u_xlat0.x);
    u_xlat2.y = dot(u_xlat0.yz, in_NORMAL0.yz);
    u_xlat3 = u_xlat0.xyxy * u_xlat1.xxyy;
    u_xlat0.x = (-u_xlat1.x);
    u_xlat0.yz = u_xlat3.zw;
    u_xlat1.zw = u_xlat3.xy;
    u_xlat2.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat2.z = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat2.xyz;
    u_xlat0.xyz = (bool(u_xlatb21)) ? u_xlat0.xyz : in_NORMAL0.xyz;
    u_xlat1.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat0.x = inversesqrt(u_xlat0.x);
    u_xlat0.xyz = u_xlat0.xxx * u_xlat1.xyz;
    vs_TEXCOORD0.xyz = u_xlat0.xyz;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_5 = u_xlat0.y * u_xlat0.y;
    u_xlat16_5 = u_xlat0.x * u_xlat0.x + (-u_xlat16_5);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying mediump vec3 vs_TEXCOORD4;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_0.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 booster_Env;
uniform 	float _WhitecapsDepthMin;
uniform 	float _WhitecapsDepthMax;
uniform 	mediump float _WaveFreq;
uniform 	mediump float _WaveSpeed;
uniform 	mediump float _WaveHeight;
uniform 	mediump float _Wave2Freq;
uniform 	mediump float _Wave2Speed;
uniform 	mediump float _Wave2Height;
uniform 	mediump float _WaveSlopeMag;
uniform 	mediump vec3 _WaveCenterPos;
attribute highp vec4 in_POSITION0;
attribute highp vec3 in_NORMAL0;
attribute highp vec4 in_TEXCOORD1;
attribute mediump vec4 in_COLOR0;
varying highp vec3 vs_TEXCOORD0;
varying highp float vs_TEXCOORD2;
varying highp vec3 vs_TEXCOORD1;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
varying highp vec4 vs_TEXCOORD4;
vec3 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec3 u_xlat5;
float u_xlat6;
float u_xlat7;
float u_xlat12;
float u_xlat14;
float u_xlat18;
bool u_xlatb18;
void main()
{
    u_xlat0.xy = in_POSITION0.yy * hlslcc_mtx4x4unity_ObjectToWorld[1].xz;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[0].xz * in_POSITION0.xx + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[2].xz * in_POSITION0.zz + u_xlat0.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_ObjectToWorld[3].xz * in_POSITION0.ww + u_xlat0.xy;
    u_xlat0.xy = u_xlat0.xy + (-vec2(_WaveCenterPos.x, _WaveCenterPos.z));
    u_xlat12 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat18 = sqrt(u_xlat12);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat1.xy = vec2(u_xlat12) * u_xlat0.xy;
    u_xlat0.x = u_xlat18 * _Wave2Freq;
    u_xlat6 = booster_Env.x * 0.0500000007;
    u_xlat0.x = u_xlat6 * _Wave2Speed + (-u_xlat0.x);
    u_xlat2.x = cos(u_xlat0.x);
    u_xlat0.x = sin(u_xlat0.x);
    u_xlat0.x = u_xlat0.x * _Wave2Height;
    u_xlat12 = u_xlat2.x * _Wave2Height;
    u_xlat2.x = u_xlat18 * _WaveFreq;
    u_xlatb18 = 0.0<u_xlat18;
    u_xlat6 = u_xlat6 * _WaveSpeed + (-u_xlat2.x);
    u_xlat2.x = sin(u_xlat6);
    u_xlat3.x = cos(u_xlat6);
    u_xlat0.x = _WaveHeight * u_xlat2.x + u_xlat0.x;
    u_xlat6 = _WaveHeight * u_xlat3.x + u_xlat12;
    u_xlat2.x = u_xlat6 * _WaveSlopeMag;
    u_xlat0.x = u_xlat0.x + in_POSITION0.y;
    u_xlat3 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat3;
    u_xlat4 = u_xlat3 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
    u_xlat3 = u_xlat4.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat4.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat4.zzzz + u_xlat3;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat4.wwww + u_xlat3;
    u_xlat2.y = 1.0;
    u_xlat14 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat14 = inversesqrt(u_xlat14);
    u_xlat2.xy = vec2(u_xlat14) * u_xlat2.xy;
    u_xlat2.z = (-u_xlat2.x);
    u_xlat3.y = dot(u_xlat2.yz, in_NORMAL0.yz);
    u_xlat2 = u_xlat1.xxyy * u_xlat2.xyxy;
    u_xlat5.x = (-u_xlat1.x);
    u_xlat5.yz = u_xlat2.zw;
    u_xlat1.zw = u_xlat2.xy;
    u_xlat3.x = dot(u_xlat1.yzw, in_NORMAL0.xyz);
    u_xlat3.z = dot(u_xlat5.xyz, in_NORMAL0.xyz);
    u_xlat1.x = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat1.x = inversesqrt(u_xlat1.x);
    u_xlat1.xyz = u_xlat1.xxx * u_xlat3.xyz;
    u_xlat1.xyz = (bool(u_xlatb18)) ? u_xlat1.xyz : in_NORMAL0.xyz;
    u_xlat2.x = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat2.y = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat2.z = dot(u_xlat1.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = inversesqrt(u_xlat18);
    vs_TEXCOORD0.xyz = vec3(u_xlat18) * u_xlat2.xyz;
    u_xlat18 = u_xlat4.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat4.x + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat4.z + u_xlat18;
    u_xlat18 = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat4.w + u_xlat18;
    u_xlat1.x = abs(u_xlat18) + (-_WhitecapsDepthMin);
    u_xlat7 = (-_WhitecapsDepthMin) + _WhitecapsDepthMax;
    vs_TEXCOORD2 = u_xlat1.x / u_xlat7;
    vs_TEXCOORD2 = clamp(vs_TEXCOORD2, 0.0, 1.0);
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_COLOR0 = in_COLOR0;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat0.x * (-u_xlat18);
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_draw_buffers
#extension GL_EXT_draw_buffers : enable
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform mediump sampler2D unity_Lightmap;
varying highp vec3 vs_TEXCOORD0;
varying mediump vec4 vs_COLOR0;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
#define SV_Target1 gl_FragData[1]
#define SV_Target2 gl_FragData[2]
#define SV_Target3 gl_FragData[3]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_19;
void main()
{
    u_xlat16_0.xyz = vs_COLOR0.xyz + _Color.xyz;
    u_xlat16_1.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    u_xlat16_19 = vs_TEXCOORD0.y * vs_TEXCOORD0.y;
    u_xlat16_19 = vs_TEXCOORD0.x * vs_TEXCOORD0.x + (-u_xlat16_19);
    u_xlat16_0 = vs_TEXCOORD0.yzzx * vs_TEXCOORD0.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_0);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_19) + u_xlat16_2.xyz;
    u_xlat0.xyz = vs_TEXCOORD0.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture2D(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
}
}
}
Fallback "Booster/Black"
}