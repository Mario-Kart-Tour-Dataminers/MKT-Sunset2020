//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Booster/StandardCustom/マシンパーツ/MachineParts_Tire_Ghost" {
Properties {
_Color ("Main Color", Color) = (1,1,1,1)
_AddColor ("加算色", Color) = (0,0,0,0)
_MinMSA ("Min MSA", Vector) = (0,0,0,0)
_MainTex ("Albedo(UV0)", 2D) = "white" { }
_MSA ("MSA Map(UV0)", 2D) = "black" { }
_BumpMap ("Normalmap(UV0)", 2D) = "bump" { }
_AlphaFactor ("アルファ強度", Range(0, 1)) = 1
[Header(Booster Reflection Cube Map)] [KeywordEnum(NO,YES,FIXEDCOLOR)] _ReflectionProbeType ("個別リフレクションキューブマップ使用", Float) = 0
_HeuristicReflection ("個別リフレクションキューブマップ", Cube) = "_Skybox" { }
_NormalDiff ("疑似LOD反射の揺らぎ", Range(-1, 1)) = 0
_NormalRand ("疑似LOD乱数値", Vector) = (9993.169,5715.817,4488.509,34.2347)
_FixedReflColor ("単色リフレクションカラー", Color) = (1,1,1,1)
[Space(20)] [Enum(NO,0,YES,2)] _StencilOp ("置き影が落ちなくなる", Float) = 2
}
SubShader {
 LOD 2500
 Tags { "DisableBatching" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
 Pass {
  Name "FORWARD"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  GpuProgramID 1267
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out mediump vec3 vs_TEXCOORD2;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD2.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  GpuProgramID 127049
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 181699
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec4 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    u_xlat0.x = u_xlat2.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat2.xw * vec2(0.5, 0.5);
    vs_TEXCOORD1.zw = u_xlat2.zw;
    vs_TEXCOORD1.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
}
}
 Pass {
  Name "DEFERRED"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "DEFERRED" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  GpuProgramID 224932
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD0.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
void main()
{
    SV_Target0 = vec4(0.0, 0.0, 0.0, 1.0);
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 276434
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_11) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_11) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_11) * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump float u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
void main()
{
    u_xlat16_0 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0 = max(u_xlat16_0, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_0) + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    SV_Target0.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    SV_Target0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat10;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    u_xlat16_1.xyz = u_xlat16_2.xyz * vec3(u_xlat16_11) + (-unity_FogColor.xyz);
    u_xlat10 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat10 = min(max(u_xlat10, 0.0), 1.0);
#else
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat10) * u_xlat16_1.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat1.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat10;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    u_xlat16_1.xyz = u_xlat16_2.xyz * vec3(u_xlat16_11) + (-unity_FogColor.xyz);
    u_xlat10 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat10 = min(max(u_xlat10, 0.0), 1.0);
#else
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat10) * u_xlat16_1.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat1.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat10;
mediump float u_xlat16_11;
void main()
{
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_1;
    u_xlat16_2.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat16_11 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_11 = max(u_xlat16_11, 0.0);
    u_xlat16_1.xyz = u_xlat16_2.xyz * vec3(u_xlat16_11) + (-unity_FogColor.xyz);
    u_xlat10 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat10 = min(max(u_xlat10, 0.0), 1.0);
#else
    u_xlat10 = clamp(u_xlat10, 0.0, 1.0);
#endif
    u_xlat1.xyz = vec3(u_xlat10) * u_xlat16_1.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat1.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat15;
mediump float u_xlat16_18;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat15 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat42, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    vs_TEXCOORD5.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
float u_xlat18;
mediump float u_xlat16_21;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_1.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_1.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_1.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_0.xyz = exp2(u_xlat16_0.xyz);
    u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_5.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_5.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
    u_xlat18 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
#else
    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat14;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat14;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat14;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_3.xyz * u_xlat16_0.xxx + u_xlat16_4.xyz;
    u_xlat16_2.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
#else
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
#else
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
float u_xlat21;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * _LightColor0.xyz;
    u_xlat16_18 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_18 = max(u_xlat16_18, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_18) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat21 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
#else
    u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat21) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
float u_xlat17;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat17 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat17 = min(max(u_xlat17, 0.0), 1.0);
#else
    u_xlat17 = clamp(u_xlat17, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat17) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
float u_xlat17;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat17 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat17 = min(max(u_xlat17, 0.0), 1.0);
#else
    u_xlat17 = clamp(u_xlat17, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat17) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump float u_xlat16_16;
float u_xlat17;
void main()
{
    u_xlat16_0 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_1.x = dot(u_xlat16_0, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_1.xyz = u_xlat16_1.xxx * _LightColor0.xyz;
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_16 = max(u_xlat16_16, 0.0);
    u_xlat16_2.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(u_xlat16_16) + u_xlat16_3.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat17 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat17 = min(max(u_xlat17, 0.0), 1.0);
#else
    u_xlat17 = clamp(u_xlat17, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat17) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
float u_xlat24;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat24 = min(max(u_xlat24, 0.0), 1.0);
#else
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat24) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
float u_xlat24;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat24 = min(max(u_xlat24, 0.0), 1.0);
#else
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat24) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD4;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD4 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.xy = u_xlat0.xy;
    vs_TEXCOORD5.xy = u_xlat0.xy;
    vs_TEXCOORD5.zw = vec2(0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_OcclusionMaskSelector;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
uniform mediump sampler2D unity_ShadowMask;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD4;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
in highp vec4 vs_TEXCOORD5;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_21;
float u_xlat24;
void main()
{
    u_xlat16_0.x = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_0.x = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_0.x);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_0.xyz = unity_SHC.xyz * u_xlat16_0.xxx + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyz;
    u_xlat16_0.xyz = max(u_xlat16_0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_3.xyz = log2(u_xlat16_0.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_3.xyz = exp2(u_xlat16_3.xyz);
    u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_0.xyz = unity_Lightmap_HDR.xxx * u_xlat16_4.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_5.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_5.xyz = u_xlat16_1.xyz * u_xlat16_5.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_5.xyz;
    u_xlat16_1 = texture(unity_ShadowMask, vs_TEXCOORD5.xy);
    u_xlat16_21 = dot(u_xlat16_1, unity_OcclusionMaskSelector);
#ifdef UNITY_ADRENO_ES3
    u_xlat16_21 = min(max(u_xlat16_21, 0.0), 1.0);
#else
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
#endif
    u_xlat16_6.xyz = vec3(u_xlat16_21) * _LightColor0.xyz;
    u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_6.xyz;
    u_xlat16_21 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_21 = max(u_xlat16_21, 0.0);
    u_xlat16_0.xyz = u_xlat16_5.xyz * vec3(u_xlat16_21) + u_xlat16_0.xyz;
    u_xlat16_3.xyz = u_xlat16_0.xyz + (-unity_FogColor.xyz);
    u_xlat24 = vs_TEXCOORD4;
#ifdef UNITY_ADRENO_ES3
    u_xlat24 = min(max(u_xlat24, 0.0), 1.0);
#else
    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);
#endif
    u_xlat3.xyz = vec3(u_xlat24) * u_xlat16_3.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat3.xyz;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "FORWARD"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 356256
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    SV_Target0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    u_xlat1.x = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat1.x = min(max(u_xlat1.x, 0.0), 1.0);
#else
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xxx;
    SV_Target0.xyz = u_xlat1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    u_xlat1.x = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat1.x = min(max(u_xlat1.x, 0.0), 1.0);
#else
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xxx;
    SV_Target0.xyz = u_xlat1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
float u_xlat39;
float u_xlat40;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat39 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat39) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat40 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat40) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat39 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat39, u_xlat16_12);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat39 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat39 = inversesqrt(u_xlat39);
    vs_TEXCOORD1.xyz = vec3(u_xlat39) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat39 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat39) + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
    u_xlat16_6 = dot(vs_TEXCOORD1.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6 = max(u_xlat16_6, 0.0);
    u_xlat16_0.xyz = vec3(u_xlat16_6) * u_xlat16_0.xyz;
    u_xlat1.x = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat1.x = min(max(u_xlat1.x, 0.0), 1.0);
#else
    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);
#endif
    u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xxx;
    SV_Target0.xyz = u_xlat1.xyz;
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "PREPASSBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 432350
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD1;
out highp vec3 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD0.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
in highp vec3 vs_TEXCOORD0;
layout(location = 0) out mediump vec4 SV_Target0;
void main()
{
    SV_Target0.xyz = vs_TEXCOORD0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    SV_Target0.w = 0.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
}
}
 Pass {
  Name "PREPASS"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "PREPASSFINAL" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 514208
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
float u_xlat11;
float u_xlat33;
float u_xlat34;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat34 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat34) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat33 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat33) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat11 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat11 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump vec3 u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    gl_Position = u_xlat3;
    u_xlat42 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_12.x = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat42, u_xlat16_12.x);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat0.xyz = vec3(u_xlat42) * u_xlat0.xyz;
    u_xlat16_12.x = u_xlat0.y * u_xlat0.y;
    u_xlat16_12.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_12.x);
    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_12.xyz = unity_SHC.xyz * u_xlat16_12.xxx + u_xlat16_13.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_13.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_13.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_13.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_12.xyz = u_xlat16_12.xyz + u_xlat16_13.xyz;
    u_xlat16_12.xyz = max(u_xlat16_12.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_12.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
    u_xlat16_1 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_1.w * _AlphaFactor;
    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
    u_xlat12 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 _ProjectionParams;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	mediump vec4 unity_FogColor;
uniform 	vec4 unity_FogParams;
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp float vs_TEXCOORD5;
out highp vec3 vs_TEXCOORD1;
out highp vec4 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec4 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
mediump float u_xlat16_11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat7.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat7.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat7.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat7.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat0.x = dot(u_xlat0, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat2;
    u_xlat2 = (-u_xlat3) + u_xlat7;
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat2, in_POSITION0);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat2 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;
    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;
    gl_Position = u_xlat3;
    u_xlat36 = u_xlat3.z * unity_FogParams.z + unity_FogParams.w;
    u_xlat16_11 = (-unity_FogColor.w) + 1.0;
    vs_TEXCOORD5 = max(u_xlat36, u_xlat16_11);
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat4 = u_xlat5 * u_xlat1.zzzz + u_xlat4;
    u_xlat5.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat6.x = (-u_xlat5.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat5.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat6.y = (-u_xlat5.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat5.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat6.z = (-u_xlat5.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat5.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat6.w = (-u_xlat5.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat5 = u_xlat1.xxxx * u_xlat6 + u_xlat5;
    u_xlat4 = u_xlat4 + (-u_xlat5);
    u_xlat1 = u_xlat4 * u_xlat1.yyyy + u_xlat5;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    u_xlat0.x = u_xlat3.y * _ProjectionParams.x;
    u_xlat0.w = u_xlat0.x * 0.5;
    u_xlat0.xz = u_xlat3.xw * vec2(0.5, 0.5);
    vs_TEXCOORD2.zw = u_xlat3.zw;
    vs_TEXCOORD2.xy = u_xlat0.zz + u_xlat0.xw;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat2.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat2.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat2.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat2.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_FogColor;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform 	mediump float _AlphaFactor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D _LightBuffer;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp float vs_TEXCOORD5;
in highp vec4 vs_TEXCOORD2;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec3 u_xlat2;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat14;
void main()
{
    u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
    u_xlat16_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
    u_xlat16_1.xyz = max(u_xlat16_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
    u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
    u_xlat16_0.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_1.xyz = unity_Lightmap_HDR.xxx * u_xlat16_0.xyz + (-u_xlat16_1.xyz);
    u_xlat16_0 = _Color + _AddColor;
    u_xlat16_2 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * u_xlat16_2;
    u_xlat16_3.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_3.xyz;
    SV_Target0.w = u_xlat16_0.w * _AlphaFactor;
    u_xlat16_2.xyz = u_xlat16_3.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
    u_xlat14 = vs_TEXCOORD5;
#ifdef UNITY_ADRENO_ES3
    u_xlat14 = min(max(u_xlat14, 0.0), 1.0);
#else
    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);
#endif
    u_xlat2.xyz = vec3(u_xlat14) * u_xlat16_2.xyz + unity_FogColor.xyz;
    SV_Target0.xyz = u_xlat2.xyz;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" "FOG_LINEAR" }
""
}
}
}
 Pass {
  Name "DEFERRED"
  LOD 2500
  Tags { "DisableBatching" = "true" "LIGHTMODE" = "DEFERRED" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 554452
Program "vp" {
SubProgram "gles3 hw_tier00 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
"#ifdef VERTEX
#version 300 es

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat3.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat3.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat3.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat3.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat3.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat3 * u_xlat1.zzzz + u_xlat2;
    u_xlat3.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat3 = u_xlat1.xxxx * u_xlat4 + u_xlat3;
    u_xlat2 = u_xlat2 + (-u_xlat3);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat3;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
mediump vec3 u_xlat16_1;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat0.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat0.w = 1.0;
    SV_Target2 = u_xlat0;
    SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out mediump vec3 vs_TEXCOORD4;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
mediump float u_xlat16_12;
mediump vec3 u_xlat16_13;
float u_xlat42;
float u_xlat43;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat42) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat43 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat43) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat3.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat3.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat3.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat42 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat42 = inversesqrt(u_xlat42);
    u_xlat2.xyz = vec3(u_xlat42) * u_xlat3.xyz;
    vs_TEXCOORD1.xyz = u_xlat2.xyz;
    u_xlat3.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat3.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat3.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat3.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat3.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat3.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat3.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat3.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat3 = u_xlat4 * u_xlat1.zzzz + u_xlat3;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat3 = u_xlat3 + (-u_xlat4);
    u_xlat1 = u_xlat3 * u_xlat1.yyyy + u_xlat4;
    u_xlat42 = dot(u_xlat1, in_POSITION0);
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat42) + u_xlat0.xyz;
    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat16_12 = u_xlat2.y * u_xlat2.y;
    u_xlat16_12 = u_xlat2.x * u_xlat2.x + (-u_xlat16_12);
    u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
    u_xlat16_13.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_13.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_13.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_12) + u_xlat16_13.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD4;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
    u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_1.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_1.xyz * unity_Lightmap_HDR.xxx;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 unity_LightmapST;
uniform 	vec4 hlslcc_mtx4x4_flMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_frMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rlMatrix[4];
uniform 	vec4 hlslcc_mtx4x4_rrMatrix[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
in highp vec4 in_TEXCOORD1;
out highp vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
bvec3 u_xlatb1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
vec4 u_xlat5;
vec3 u_xlat6;
vec4 u_xlat7;
vec3 u_xlat8;
vec3 u_xlat9;
vec4 u_xlat10;
vec4 u_xlat11;
float u_xlat12;
float u_xlat36;
float u_xlat37;
void main()
{
    u_xlat0.xyz = (-hlslcc_mtx4x4_rlMatrix[0].yxz) + hlslcc_mtx4x4_rrMatrix[0].yxz;
    u_xlatb1.xyz = greaterThanEqual(in_TEXCOORD1.xxxx, vec4(1.0, 2.0, 3.0, 0.0)).xyz;
    u_xlat1.xyz = mix(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), vec3(u_xlatb1.xyz));
    u_xlat2.x = u_xlat0.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].y;
    u_xlat3.xyz = (-hlslcc_mtx4x4_rlMatrix[1].xyz) + hlslcc_mtx4x4_rrMatrix[1].xyz;
    u_xlat2.y = u_xlat3.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].y;
    u_xlat4.xyz = (-hlslcc_mtx4x4_rlMatrix[2].xzy) + hlslcc_mtx4x4_rrMatrix[2].xzy;
    u_xlat2.z = u_xlat4.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].y;
    u_xlat5.xyw = (-hlslcc_mtx4x4_rlMatrix[3].xzy) + hlslcc_mtx4x4_rrMatrix[3].xzy;
    u_xlat2.w = u_xlat5.w * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].y;
    u_xlat6.xyz = (-hlslcc_mtx4x4_flMatrix[0].yxz) + hlslcc_mtx4x4_frMatrix[0].yxz;
    u_xlat7.x = u_xlat1.x * u_xlat6.x + hlslcc_mtx4x4_flMatrix[0].y;
    u_xlat8.xyz = (-hlslcc_mtx4x4_flMatrix[1].xyz) + hlslcc_mtx4x4_frMatrix[1].xyz;
    u_xlat7.y = u_xlat1.x * u_xlat8.y + hlslcc_mtx4x4_flMatrix[1].y;
    u_xlat9.xyz = (-hlslcc_mtx4x4_flMatrix[2].xzy) + hlslcc_mtx4x4_frMatrix[2].xzy;
    u_xlat7.z = u_xlat1.x * u_xlat9.z + hlslcc_mtx4x4_flMatrix[2].y;
    u_xlat10.xyw = (-hlslcc_mtx4x4_flMatrix[3].xzy) + hlslcc_mtx4x4_frMatrix[3].xzy;
    u_xlat7.w = u_xlat1.x * u_xlat10.w + hlslcc_mtx4x4_flMatrix[3].y;
    u_xlat2 = u_xlat2 + (-u_xlat7);
    u_xlat2 = u_xlat2 * u_xlat1.yyyy + u_xlat7;
    u_xlat0.x = dot(u_xlat2, in_POSITION0);
    u_xlat2.y = dot(u_xlat2.xyz, in_NORMAL0.xyz);
    u_xlat7 = u_xlat0.xxxx * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat11.x = u_xlat0.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].z;
    u_xlat0.x = u_xlat0.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[0].x;
    u_xlat11.y = u_xlat3.z * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].z;
    u_xlat0.y = u_xlat3.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[1].x;
    u_xlat11.z = u_xlat4.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].z;
    u_xlat0.z = u_xlat4.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[2].x;
    u_xlat11.w = u_xlat5.y * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].z;
    u_xlat0.w = u_xlat5.x * u_xlat1.z + hlslcc_mtx4x4_rlMatrix[3].x;
    u_xlat3.x = u_xlat1.x * u_xlat6.z + hlslcc_mtx4x4_flMatrix[0].z;
    u_xlat4.x = u_xlat1.x * u_xlat6.y + hlslcc_mtx4x4_flMatrix[0].x;
    u_xlat3.y = u_xlat1.x * u_xlat8.z + hlslcc_mtx4x4_flMatrix[1].z;
    u_xlat4.y = u_xlat1.x * u_xlat8.x + hlslcc_mtx4x4_flMatrix[1].x;
    u_xlat3.z = u_xlat1.x * u_xlat9.y + hlslcc_mtx4x4_flMatrix[2].z;
    u_xlat4.z = u_xlat1.x * u_xlat9.x + hlslcc_mtx4x4_flMatrix[2].x;
    u_xlat3.w = u_xlat1.x * u_xlat10.y + hlslcc_mtx4x4_flMatrix[3].z;
    u_xlat4.w = u_xlat1.x * u_xlat10.x + hlslcc_mtx4x4_flMatrix[3].x;
    u_xlat0 = u_xlat0 + (-u_xlat4);
    u_xlat0 = u_xlat0 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat0, in_POSITION0);
    u_xlat2.x = dot(u_xlat0.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * vec4(u_xlat36) + u_xlat7;
    u_xlat4 = (-u_xlat3) + u_xlat11;
    u_xlat3 = u_xlat4 * u_xlat1.yyyy + u_xlat3;
    u_xlat37 = dot(u_xlat3, in_POSITION0);
    u_xlat2.z = dot(u_xlat3.xyz, in_NORMAL0.xyz);
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * vec4(u_xlat37) + u_xlat0;
    u_xlat3 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat4 = u_xlat3.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat3.xxxx + u_xlat4;
    u_xlat4 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat3.zzzz + u_xlat4;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat3.wwww + u_xlat4;
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat4.x = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat4.y = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat4.z = dot(u_xlat2.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat36 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat36 = inversesqrt(u_xlat36);
    vs_TEXCOORD1.xyz = vec3(u_xlat36) * u_xlat4.xyz;
    u_xlat2.x = hlslcc_mtx4x4_rlMatrix[0].w;
    u_xlat4.x = (-u_xlat2.x) + hlslcc_mtx4x4_rrMatrix[0].w;
    u_xlat2.y = hlslcc_mtx4x4_rlMatrix[1].w;
    u_xlat4.y = (-u_xlat2.y) + hlslcc_mtx4x4_rrMatrix[1].w;
    u_xlat2.z = hlslcc_mtx4x4_rlMatrix[2].w;
    u_xlat4.z = (-u_xlat2.z) + hlslcc_mtx4x4_rrMatrix[2].w;
    u_xlat2.w = hlslcc_mtx4x4_rlMatrix[3].w;
    u_xlat4.w = (-u_xlat2.w) + hlslcc_mtx4x4_rrMatrix[3].w;
    u_xlat2 = u_xlat4 * u_xlat1.zzzz + u_xlat2;
    u_xlat4.x = hlslcc_mtx4x4_flMatrix[0].w;
    u_xlat5.x = (-u_xlat4.x) + hlslcc_mtx4x4_frMatrix[0].w;
    u_xlat4.y = hlslcc_mtx4x4_flMatrix[1].w;
    u_xlat5.y = (-u_xlat4.y) + hlslcc_mtx4x4_frMatrix[1].w;
    u_xlat4.z = hlslcc_mtx4x4_flMatrix[2].w;
    u_xlat5.z = (-u_xlat4.z) + hlslcc_mtx4x4_frMatrix[2].w;
    u_xlat4.w = hlslcc_mtx4x4_flMatrix[3].w;
    u_xlat5.w = (-u_xlat4.w) + hlslcc_mtx4x4_frMatrix[3].w;
    u_xlat4 = u_xlat1.xxxx * u_xlat5 + u_xlat4;
    u_xlat2 = u_xlat2 + (-u_xlat4);
    u_xlat1 = u_xlat2 * u_xlat1.yyyy + u_xlat4;
    u_xlat36 = dot(u_xlat1, in_POSITION0);
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * vec3(u_xlat36) + u_xlat0.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    vs_TEXCOORD4.xyz = u_xlat0.xyz * unity_ShadowFadeCenterAndType.www;
    vs_TEXCOORD3.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
    vs_TEXCOORD3.zw = vec2(0.0, 0.0);
    u_xlat0.x = u_xlat3.y * hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z * u_xlat3.x + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[2].z * u_xlat3.z + u_xlat0.x;
    u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[3].z * u_xlat3.w + u_xlat0.x;
    u_xlat12 = (-unity_ShadowFadeCenterAndType.w) + 1.0;
    vs_TEXCOORD4.w = u_xlat12 * (-u_xlat0.x);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	mediump vec4 unity_Lightmap_HDR;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 booster_PowerSavingAdjustColor;
uniform 	mediump vec4 _AddColor;
uniform mediump sampler2D _MainTex;
uniform mediump sampler2D unity_Lightmap;
in highp vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec4 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
layout(location = 1) out mediump vec4 SV_Target1;
layout(location = 2) out mediump vec4 SV_Target2;
layout(location = 3) out mediump vec4 SV_Target3;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_18;
void main()
{
    u_xlat16_0.xyz = _Color.xyz + _AddColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = (-booster_PowerSavingAdjustColor.xyz) + vec3(1.0, 1.0, 1.0);
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
    u_xlat1.xyz = vs_TEXCOORD1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
    u_xlat1.w = 1.0;
    SV_Target2 = u_xlat1;
    u_xlat16_18 = vs_TEXCOORD1.y * vs_TEXCOORD1.y;
    u_xlat16_18 = vs_TEXCOORD1.x * vs_TEXCOORD1.x + (-u_xlat16_18);
    u_xlat16_1 = vs_TEXCOORD1.yzzx * vs_TEXCOORD1.xyzz;
    u_xlat16_2.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_2.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_2.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_2.xyz = unity_SHC.xyz * vec3(u_xlat16_18) + u_xlat16_2.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_4.xyz = log2(u_xlat16_2.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_5.xyz = texture(unity_Lightmap, vs_TEXCOORD3.xy).xyz;
    u_xlat16_2.xyz = unity_Lightmap_HDR.xxx * u_xlat16_5.xyz + u_xlat16_4.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target3.xyz = exp2((-u_xlat16_0.xyz));
    SV_Target3.w = 1.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
""
}
SubProgram "gles3 hw_tier01 " {
""
}
SubProgram "gles3 hw_tier02 " {
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "LIGHTMAP_ON" "SHADOWS_SHADOWMASK" "LIGHTPROBE_SH" }
""
}
}
}
}
Fallback "Booster/Black"
}