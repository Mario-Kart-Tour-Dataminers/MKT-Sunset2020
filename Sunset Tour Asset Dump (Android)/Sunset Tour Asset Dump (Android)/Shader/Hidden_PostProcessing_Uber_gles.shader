//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Hidden/PostProcessing/Uber" {
Properties {
}
SubShader {
 Pass {
  ZTest Always
  ZWrite Off
  Cull Off
  GpuProgramID 20131
Program "vp" {
SubProgram "gles hw_tier00 " {
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
float u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
bool u_xlatb2;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0 : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
float u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
bool u_xlatb2;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0 : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
float u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
mediump vec3 u_xlat16_1;
bool u_xlatb2;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0 : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
bool u_xlatb3;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
bool u_xlatb3;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
bool u_xlatb3;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump float u_xlat16_0;
lowp float u_xlat10_0;
lowp float u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_0 = texture2D(_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = u_xlat10_0 * 2.0 + -1.0;
    u_xlat16_2.x = -abs(u_xlat16_0) + 1.0;
    u_xlat16_0 = u_xlat16_0 * 3.40282347e+38 + 0.5;
    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);
    u_xlat16_0 = u_xlat16_0 * 2.0 + -1.0;
    u_xlat16_2.x = sqrt(u_xlat16_2.x);
    u_xlat16_2.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_0 = u_xlat16_2.x * u_xlat16_0;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_1 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_1);
    u_xlat16_2.xyz = sqrt(u_xlat16_2.xyz);
    SV_Target0.xyz = vec3(u_xlat16_0) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump float u_xlat16_0;
lowp float u_xlat10_0;
lowp float u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_0 = texture2D(_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = u_xlat10_0 * 2.0 + -1.0;
    u_xlat16_2.x = -abs(u_xlat16_0) + 1.0;
    u_xlat16_0 = u_xlat16_0 * 3.40282347e+38 + 0.5;
    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);
    u_xlat16_0 = u_xlat16_0 * 2.0 + -1.0;
    u_xlat16_2.x = sqrt(u_xlat16_2.x);
    u_xlat16_2.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_0 = u_xlat16_2.x * u_xlat16_0;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_1 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_1);
    u_xlat16_2.xyz = sqrt(u_xlat16_2.xyz);
    SV_Target0.xyz = vec3(u_xlat16_0) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump float u_xlat16_0;
lowp float u_xlat10_0;
lowp float u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_0 = texture2D(_DitheringTex, u_xlat0.xy).w;
    u_xlat16_0 = u_xlat10_0 * 2.0 + -1.0;
    u_xlat16_2.x = -abs(u_xlat16_0) + 1.0;
    u_xlat16_0 = u_xlat16_0 * 3.40282347e+38 + 0.5;
    u_xlat16_0 = clamp(u_xlat16_0, 0.0, 1.0);
    u_xlat16_0 = u_xlat16_0 * 2.0 + -1.0;
    u_xlat16_2.x = sqrt(u_xlat16_2.x);
    u_xlat16_2.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_0 = u_xlat16_2.x * u_xlat16_0;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_1 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_2.xyz = u_xlat16_2.xyz * vec3(u_xlat10_1);
    u_xlat16_2.xyz = sqrt(u_xlat16_2.xyz);
    SV_Target0.xyz = vec3(u_xlat16_0) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_2.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
vec3 u_xlat4;
float u_xlat6;
lowp float u_xlat10_6;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0.x = _Lut2D_Params.y;
    u_xlat0.y = 0.0;
    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_1.zxy;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_1.xyz = vec3(u_xlat10_6) * u_xlat16_1.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_1.xyz = sqrt(u_xlat16_1.xyz);
    u_xlat4.xyz = u_xlat16_1.xyz * _Lut2D_Params.zzz;
    u_xlat6 = floor(u_xlat4.x);
    u_xlat2.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat2.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat2.xy;
    u_xlat2.x = u_xlat6 * _Lut2D_Params.y + u_xlat2.y;
    u_xlat6 = u_xlat16_1.x * _Lut2D_Params.z + (-u_xlat6);
    u_xlat0.xy = u_xlat0.xy + u_xlat2.xz;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat2.xz).xyz;
    u_xlat10_0.xyw = texture2D(_Lut2D, u_xlat0.xy).xyz;
    u_xlat16_0.xyw = (-u_xlat10_1.xyz) + u_xlat10_0.xyw;
    u_xlat0.xyz = vec3(u_xlat6) * u_xlat16_0.xyw + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
bool u_xlatb2;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
bool u_xlatb2;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
bool u_xlatb2;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb2 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb2) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_6 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_6 = u_xlat10_6 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_6) + 1.0;
    u_xlat16_6 = u_xlat16_6 * 3.40282347e+38 + 0.5;
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
    u_xlat16_6 = u_xlat16_6 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_6) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_6 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_6 = u_xlat10_6 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_6) + 1.0;
    u_xlat16_6 = u_xlat16_6 * 3.40282347e+38 + 0.5;
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
    u_xlat16_6 = u_xlat16_6 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_6) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat6;
mediump float u_xlat16_6;
lowp float u_xlat10_6;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_6 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_6) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_6 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_6 = sqrt(u_xlat16_6);
    u_xlat6 = _Grain_Params1.xxxy.z * (-u_xlat16_6) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat6) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_6 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_6 = u_xlat10_6 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_6) + 1.0;
    u_xlat16_6 = u_xlat16_6 * 3.40282347e+38 + 0.5;
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
    u_xlat16_6 = u_xlat16_6 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_6) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_9) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_9 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat16_9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
vec3 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat3.xyz = u_xlat1.xyz;
    u_xlat3.xyz = clamp(u_xlat3.xyz, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat3.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
vec3 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat3.xyz = u_xlat1.xyz;
    u_xlat3.xyz = clamp(u_xlat3.xyz, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat3.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
vec3 u_xlat2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat3.xyz = u_xlat1.xyz;
    u_xlat3.xyz = clamp(u_xlat3.xyz, 0.0, 1.0);
    u_xlat3.x = dot(u_xlat3.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat3.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlatb9 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb9) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlatb9 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb9) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlatb9 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb9) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
bool u_xlatb9;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_3.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;
    u_xlatb9 = _Vignette_Mode<0.5;
    if(u_xlatb9){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat9 = _ScreenParams.x / _ScreenParams.y;
        u_xlat9 = u_xlat9 + -1.0;
        u_xlat9 = _Vignette_Settings.w * u_xlat9 + 1.0;
        u_xlat1.x = u_xlat9 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat9 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat9 = (-u_xlat9) + 1.0;
        u_xlat9 = max(u_xlat9, 0.0);
        u_xlat9 = log2(u_xlat9);
        u_xlat9 = u_xlat9 * _Vignette_Settings.y;
        u_xlat9 = exp2(u_xlat9);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_9 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_9) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat9) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_9 = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = sqrt(u_xlat16_9);
    u_xlat16_9 = (-u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_4.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
float u_xlat9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb3 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb3) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat10_2.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.xyz;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_2.xyz;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat9;
mediump float u_xlat16_9;
lowp float u_xlat10_9;
void main()
{
    u_xlat0 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat0.xyzy * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0 = u_xlat0.xwzw * u_xlat1.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat1 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat10_2.zxy;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat0.xy).xyz;
    u_xlat10_0.xyz = texture2D(_BloomTex, u_xlat0.zw).xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat10_2.zxy;
    u_xlat16_0.xyz = u_xlat10_0.zxy + u_xlat16_1.xyz;
    u_xlat0.xyz = u_xlat16_0.xyz * _Bloom_Settings.yyy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat1.xyz = u_xlat0.xyz * _Bloom_Color.zxy;
    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy * u_xlat10_2.zxy;
    u_xlat10_9 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_2.xyz * vec3(u_xlat10_9) + u_xlat1.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat0.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat9 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat9 = sqrt(u_xlat9);
    u_xlat9 = _Grain_Params1.xxxy.z * (-u_xlat9) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat9) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat3.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat3.x = floor(u_xlat3.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat3.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat3.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat3.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat3.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_3.xyz = texture2D(_Lut2D, u_xlat3.xy).xyz;
    u_xlat16_3.xyz = (-u_xlat10_1.xyz) + u_xlat10_3.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_9 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_9 = u_xlat10_9 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_9) + 1.0;
    u_xlat16_9 = u_xlat16_9 * 3.40282347e+38 + 0.5;
    u_xlat16_9 = clamp(u_xlat16_9, 0.0, 1.0);
    u_xlat16_9 = u_xlat16_9 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_9 = u_xlat16_9 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_9) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat4.xyz = u_xlat1.xyz;
    u_xlat4.xyz = clamp(u_xlat4.xyz, 0.0, 1.0);
    u_xlat4.x = dot(u_xlat4.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat4.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat4.xyz = u_xlat1.xyz;
    u_xlat4.xyz = clamp(u_xlat4.xyz, 0.0, 1.0);
    u_xlat4.x = dot(u_xlat4.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat4.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat4.xyz = u_xlat1.xyz;
    u_xlat4.xyz = clamp(u_xlat4.xyz, 0.0, 1.0);
    u_xlat4.x = dot(u_xlat4.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat4.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb12 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb12) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat12;
mediump float u_xlat16_12;
lowp float u_xlat10_12;
bool u_xlatb12;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat10_4.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_4.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_6.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_6.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb12 = _Vignette_Mode<0.5;
    if(u_xlatb12){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat12 = _ScreenParams.x / _ScreenParams.y;
        u_xlat12 = u_xlat12 + -1.0;
        u_xlat12 = _Vignette_Settings.w * u_xlat12 + 1.0;
        u_xlat1.x = u_xlat12 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat12 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat12 = (-u_xlat12) + 1.0;
        u_xlat12 = max(u_xlat12, 0.0);
        u_xlat12 = log2(u_xlat12);
        u_xlat12 = u_xlat12 * _Vignette_Settings.y;
        u_xlat12 = exp2(u_xlat12);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_12 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_12) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat12 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat12 = sqrt(u_xlat12);
    u_xlat12 = _Grain_Params1.xxxy.z * (-u_xlat12) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat12) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat4.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat4.x = floor(u_xlat4.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat4.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat4.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat8.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat8.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat4.x);
    u_xlat16_4.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_12 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_12 = u_xlat10_12 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_12 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_12 = -abs(u_xlat16_12) + 1.0;
    u_xlat16_12 = sqrt(u_xlat16_12);
    u_xlat16_12 = (-u_xlat16_12) + 1.0;
    u_xlat16_12 = u_xlat16_12 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_12) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1 = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * vec4(u_xlat1);
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1 = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * vec4(u_xlat1);
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1 = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * vec4(u_xlat1);
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = vec3(u_xlat10_0) * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat16_0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat16_0.xyz = u_xlat10_0.xxx * u_xlat16_6.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat16_0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_0.xyz * u_xlat2.xyz + (-u_xlat16_0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat16_0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_2.xyz;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_4.xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat10_3.xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
lowp vec3 u_xlat10_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
void main()
{
    u_xlat0 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat0 = u_xlat0 * u_xlat1.xxxx;
    u_xlat0 = u_xlat0 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat0 = u_xlat0 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);
    u_xlat0 = u_xlat0 * vec4(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat0.zw, 0.0).xyz;
    u_xlat10_0.xyz = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_2.zxy;
    u_xlat3.xy = vs_TEXCOORD0.xy;
    u_xlat3.xy = clamp(u_xlat3.xy, 0.0, 1.0);
    u_xlat3.xy = u_xlat3.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat3.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy + u_xlat16_0.xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_4.zxy;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_3.zxy + u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat15 = _Bloom_Settings.x * 0.5;
    u_xlat2 = u_xlat1.xyzy * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat1 = u_xlat1.xwzw * vec4(u_xlat15) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat10_3.zxy;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat10_3.zxy;
    u_xlat16_1.xyz = u_xlat10_1.zxy + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat1.xyz * _Bloom_Color.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_15) + u_xlat2.xyz;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat2.xyz = u_xlat10_2.zxy * _Bloom_Settings.zzz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat6.xyz = u_xlat1.xyz;
    u_xlat6.xyz = clamp(u_xlat6.xyz, 0.0, 1.0);
    u_xlat6.x = dot(u_xlat6.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat6.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat1.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * vec3(u_xlat10_0) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.zxy * u_xlat1.zxy;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.zxy + u_xlat0.zxy;
    //ENDIF
    }
    u_xlat1.xyz = u_xlat1.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat1.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb18 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb18) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6 = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = vec4(u_xlat6) * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat1.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec3 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
lowp vec3 u_xlat10_3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
mediump vec3 u_xlat16_8;
lowp vec3 u_xlat10_8;
vec2 u_xlat12;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
bool u_xlatb18;
void main()
{
    u_xlat10_0.x = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat6.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat6.xxxx * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat4.xy = vs_TEXCOORD0.xy;
    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);
    u_xlat4.xy = u_xlat4.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat4.xy, 0.0).xyz;
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.zw, 0.0).xyz;
    u_xlat16_5.xyz = u_xlat10_2.xyz * u_xlat10_5.xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_6.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz + u_xlat10_2.xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz + u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_1.xyz / u_xlat16_6.xyz;
    u_xlat16_6.xyz = u_xlat16_6.xyz * u_xlat16_6.xyz;
    u_xlat1 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat2.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat1.xyzy * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_8.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_8.xyz = u_xlat10_8.xyz + u_xlat10_3.xyz;
    u_xlat1 = u_xlat1.xwzw * u_xlat2.xxxx + vs_TEXCOORD0.xyxy;
    u_xlat1 = clamp(u_xlat1, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat1.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_8.xyz + u_xlat10_3.xyz;
    u_xlat10_1.xyz = texture2D(_BloomTex, u_xlat1.zw).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz + u_xlat16_2.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * _Bloom_Settings.yyy;
    u_xlat2.xy = vs_TEXCOORD0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_2.xyz = texture2D(_Bloom_DirtTex, u_xlat2.xy).xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat2.xyz = u_xlat10_2.xyz * _Bloom_Settings.zzz;
    u_xlat3.xyz = u_xlat1.xyz * _Bloom_Color.xyz;
    u_xlat0.xyz = u_xlat16_6.xyz * u_xlat10_0.xxx + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat2.xyz * u_xlat1.xyz + u_xlat0.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat1.xy = vs_TEXCOORD0.xy + (-_Vignette_Center.xy);
        u_xlat1.yz = abs(u_xlat1.yx) * _Vignette_Settings.xx;
        u_xlat18 = _ScreenParams.x / _ScreenParams.y;
        u_xlat18 = u_xlat18 + -1.0;
        u_xlat18 = _Vignette_Settings.w * u_xlat18 + 1.0;
        u_xlat1.x = u_xlat18 * u_xlat1.z;
        u_xlat1.xy = u_xlat1.xy;
        u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
        u_xlat1.xy = log2(u_xlat1.xy);
        u_xlat1.xy = u_xlat1.xy * _Vignette_Settings.zz;
        u_xlat1.xy = exp2(u_xlat1.xy);
        u_xlat18 = dot(u_xlat1.xy, u_xlat1.xy);
        u_xlat18 = (-u_xlat18) + 1.0;
        u_xlat18 = max(u_xlat18, 0.0);
        u_xlat18 = log2(u_xlat18);
        u_xlat18 = u_xlat18 * _Vignette_Settings.y;
        u_xlat18 = exp2(u_xlat18);
        u_xlat1.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz + _Vignette_Color.xyz;
        u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz;
    } else {
        u_xlat10_18 = texture2D(_Vignette_Mask, vs_TEXCOORD0.xy).w;
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = vec3(u_xlat10_18) * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + (-u_xlat0.xyz);
        u_xlat1.xyz = vec3(_Vignette_Opacity) * u_xlat2.xyz + u_xlat0.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat2.xyz = u_xlat1.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat2.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat1.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat12.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat12.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat16_6.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_18 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat16_18 = (-u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat5.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb5 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb5) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
float u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2 = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2;
    u_xlat2 = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2 * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2 * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2 * u_xlat7 + -0.330299497;
    u_xlat2 = u_xlat2 * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2 + u_xlat7;
    u_xlat2 = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2<(-u_xlat2);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec2 u_xlat2;
bool u_xlatb2;
float u_xlat3;
float u_xlat4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec2 u_xlat6;
float u_xlat7;
vec2 u_xlat10;
float u_xlat11;
bool u_xlatb12;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat16;
void main()
{
    u_xlat0.xy = vs_TEXCOORD1.xy + vec2(-0.5, -0.5);
    u_xlat10.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat10.xy = u_xlat10.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat10.xy, u_xlat10.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat6.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat16 = max(abs(u_xlat6.y), 1.0);
    u_xlat16 = float(1.0) / u_xlat16;
    u_xlat2.x = min(abs(u_xlat6.y), 1.0);
    u_xlat16 = u_xlat16 * u_xlat2.x;
    u_xlat2.x = u_xlat16 * u_xlat16;
    u_xlat7 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat7 = u_xlat2.x * u_xlat7 + 0.180141002;
    u_xlat7 = u_xlat2.x * u_xlat7 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat7 + 0.999866009;
    u_xlat7 = u_xlat16 * u_xlat2.x;
    u_xlat7 = u_xlat7 * -2.0 + 1.57079637;
    u_xlatb12 = 1.0<abs(u_xlat6.y);
    u_xlat7 = u_xlatb12 ? u_xlat7 : float(0.0);
    u_xlat16 = u_xlat16 * u_xlat2.x + u_xlat7;
    u_xlat2.x = min(u_xlat6.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat16 = (u_xlatb2) ? (-u_xlat16) : u_xlat16;
    u_xlat1.x = u_xlat1.x * u_xlat16 + -1.0;
    u_xlat1.xw = u_xlat10.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlatb2 = 0.0<_Distortion_Amount.w;
    u_xlat3 = sin(u_xlat6.x);
    u_xlat4 = cos(u_xlat6.x);
    u_xlat6.x = float(1.0) / u_xlat6.y;
    u_xlat11 = u_xlat3 / u_xlat4;
    u_xlat6.x = u_xlat11 * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat10.xy * u_xlat6.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb2)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_15 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_15) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_15 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat16_15) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat5.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_5.xyz = texture2D(_Lut2D, u_xlat5.xy).xyz;
    u_xlat16_5.xyz = (-u_xlat10_1.xyz) + u_xlat10_5.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_15 = clamp(u_xlat16_15, 0.0, 1.0);
    u_xlat16_15 = u_xlat16_15 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_1) * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
float u_xlat4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4 = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xxx * u_xlat16_6.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
float u_xlat6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6 = max(abs(u_xlat1.y), 1.0);
    u_xlat6 = float(1.0) / u_xlat6;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6 = u_xlat6 * u_xlat20;
    u_xlat20 = u_xlat6 * u_xlat6;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6 * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6 = (u_xlatb20) ? (-u_xlat6) : u_xlat6;
    u_xlat0.x = u_xlat0.x * u_xlat6 + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.xyz * u_xlat10_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec3 u_xlat16_0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
bool u_xlatb3;
vec4 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
float u_xlat7;
vec2 u_xlat8;
vec3 u_xlat9;
lowp vec3 u_xlat10_9;
vec2 u_xlat12;
float u_xlat14;
bool u_xlatb15;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat20;
bool u_xlatb20;
float u_xlat22;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat1 = u_xlat1 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat1.xy, u_xlat1.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlat8.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat20 = max(abs(u_xlat8.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat3 = min(abs(u_xlat8.y), 1.0);
    u_xlat20 = u_xlat20 * u_xlat3;
    u_xlat3 = u_xlat20 * u_xlat20;
    u_xlat9.x = u_xlat3 * 0.0208350997 + -0.0851330012;
    u_xlat9.x = u_xlat3 * u_xlat9.x + 0.180141002;
    u_xlat9.x = u_xlat3 * u_xlat9.x + -0.330299497;
    u_xlat3 = u_xlat3 * u_xlat9.x + 0.999866009;
    u_xlat9.x = u_xlat20 * u_xlat3;
    u_xlat9.x = u_xlat9.x * -2.0 + 1.57079637;
    u_xlatb15 = 1.0<abs(u_xlat8.y);
    u_xlat9.x = u_xlatb15 ? u_xlat9.x : float(0.0);
    u_xlat20 = u_xlat20 * u_xlat3 + u_xlat9.x;
    u_xlat3 = min(u_xlat8.y, 1.0);
    u_xlatb3 = u_xlat3<(-u_xlat3);
    u_xlat20 = (u_xlatb3) ? (-u_xlat20) : u_xlat20;
    u_xlat2.x = u_xlat2.x * u_xlat20 + -1.0;
    u_xlat2.xw = u_xlat1.xy * u_xlat2.xx + u_xlat0.xy;
    u_xlatb3 = 0.0<_Distortion_Amount.w;
    u_xlat4.x = sin(u_xlat8.x);
    u_xlat5 = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat14 = u_xlat4.x / u_xlat5;
    u_xlat8.x = u_xlat14 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat1.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat0.xy : u_xlat2.xw;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat1.x = _Bloom_Settings.x * 0.5;
    u_xlat4 = u_xlat2.xyzy * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat4 = clamp(u_xlat4, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat1.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_9.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat9.xyz = u_xlat10_9.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat4 = u_xlat4 * vec4(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat4.xy).xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat4.zw).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat10_5.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat10_5.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_4.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat0.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat1.xy = u_xlat0.xx * _Distortion_Amount.xy;
    u_xlat0.x = float(1.0) / u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _Distortion_Amount.x;
    u_xlat6.x = max(abs(u_xlat1.y), 1.0);
    u_xlat6.x = float(1.0) / u_xlat6.x;
    u_xlat20 = min(abs(u_xlat1.y), 1.0);
    u_xlat6.x = u_xlat6.x * u_xlat20;
    u_xlat20 = u_xlat6.x * u_xlat6.x;
    u_xlat22 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat22 = u_xlat20 * u_xlat22 + 0.180141002;
    u_xlat22 = u_xlat20 * u_xlat22 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat22 + 0.999866009;
    u_xlat22 = u_xlat6.x * u_xlat20;
    u_xlat22 = u_xlat22 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat1.y);
    u_xlat22 = u_xlatb5 ? u_xlat22 : float(0.0);
    u_xlat6.x = u_xlat6.x * u_xlat20 + u_xlat22;
    u_xlat20 = min(u_xlat1.y, 1.0);
    u_xlatb20 = u_xlat20<(-u_xlat20);
    u_xlat6.x = (u_xlatb20) ? (-u_xlat6.x) : u_xlat6.x;
    u_xlat0.x = u_xlat0.x * u_xlat6.x + -1.0;
    u_xlat0.xy = u_xlat1.zw * u_xlat0.xx + u_xlat0.zw;
    u_xlat5 = cos(u_xlat1.x);
    u_xlat1.x = sin(u_xlat1.x);
    u_xlat7 = float(1.0) / u_xlat1.y;
    u_xlat1.x = u_xlat1.x / u_xlat5;
    u_xlat1.x = u_xlat1.x * u_xlat7 + -1.0;
    u_xlat12.xy = u_xlat1.zw * u_xlat1.xx + u_xlat0.zw;
    u_xlat0.xy = (bool(u_xlatb3)) ? u_xlat12.xy : u_xlat0.xy;
    u_xlat10_0.xyz = texture2D(_MainTex, u_xlat0.xy).xyz;
    u_xlat16_0.xyz = u_xlat10_0.zxy * u_xlat10_0.zxy;
    u_xlat10_18 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat0.xyz = u_xlat9.xyz * u_xlat2.xyz + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat18 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat18) + 1.0;
    u_xlat1.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1 = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1 = sqrt(u_xlat16_1);
    u_xlat16_1 = (-u_xlat16_1) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat5.xyz = u_xlat2.xyz;
    u_xlat5.xyz = clamp(u_xlat5.xyz, 0.0, 1.0);
    u_xlat5.x = dot(u_xlat5.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat5.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp float u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
bool u_xlatb15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb15 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb15) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp float u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1 = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * vec3(u_xlat10_1) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
highp vec4 phase0_Input0_1;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump float u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
vec3 u_xlat5;
mediump vec3 u_xlat16_5;
float u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
float u_xlat8;
vec2 u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
float u_xlat13;
bool u_xlatb13;
float u_xlat15;
mediump float u_xlat16_15;
lowp float u_xlat10_15;
float u_xlat17;
bool u_xlatb17;
float u_xlat18;
void main()
{
    phase0_Input0_1 = vec4(vs_TEXCOORD0, vs_TEXCOORD1);
    u_xlat0 = phase0_Input0_1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat1 = u_xlat0 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat0 = u_xlat0 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat0 = u_xlat0 * _Distortion_CenterScale.zwzw;
    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat2.x = sqrt(u_xlat2.x);
    u_xlatb7 = 0.0<_Distortion_Amount.w;
    u_xlat12.xy = u_xlat2.xx * _Distortion_Amount.xy;
    u_xlat3.x = sin(u_xlat12.x);
    u_xlat4.x = cos(u_xlat12.x);
    u_xlat12.x = u_xlat3.x / u_xlat4.x;
    u_xlat3.x = float(1.0) / u_xlat12.y;
    u_xlat12.x = u_xlat12.x * u_xlat3.x + -1.0;
    u_xlat3.xy = u_xlat0.xy * u_xlat12.xx + u_xlat1.xy;
    u_xlat2.x = float(1.0) / u_xlat2.x;
    u_xlat2.x = u_xlat2.x * _Distortion_Amount.x;
    u_xlat12.x = min(abs(u_xlat12.y), 1.0);
    u_xlat13 = max(abs(u_xlat12.y), 1.0);
    u_xlat13 = float(1.0) / u_xlat13;
    u_xlat12.x = u_xlat12.x * u_xlat13;
    u_xlat13 = u_xlat12.x * u_xlat12.x;
    u_xlat18 = u_xlat13 * 0.0208350997 + -0.0851330012;
    u_xlat18 = u_xlat13 * u_xlat18 + 0.180141002;
    u_xlat18 = u_xlat13 * u_xlat18 + -0.330299497;
    u_xlat13 = u_xlat13 * u_xlat18 + 0.999866009;
    u_xlat18 = u_xlat12.x * u_xlat13;
    u_xlatb4 = 1.0<abs(u_xlat12.y);
    u_xlat18 = u_xlat18 * -2.0 + 1.57079637;
    u_xlat18 = u_xlatb4 ? u_xlat18 : float(0.0);
    u_xlat12.x = u_xlat12.x * u_xlat13 + u_xlat18;
    u_xlat17 = min(u_xlat12.y, 1.0);
    u_xlatb17 = u_xlat17<(-u_xlat17);
    u_xlat12.x = (u_xlatb17) ? (-u_xlat12.x) : u_xlat12.x;
    u_xlat2.x = u_xlat2.x * u_xlat12.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat2.xx + u_xlat1.xy;
    u_xlat0.xy = (bool(u_xlatb7)) ? u_xlat3.xy : u_xlat0.xy;
    u_xlat1.x = dot(u_xlat0.zw, u_xlat0.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xz = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat3.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat6 = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat2.z;
    u_xlat6 = u_xlat6 * u_xlat2.x + -1.0;
    u_xlat2.xw = u_xlat0.zw * vec2(u_xlat6) + u_xlat1.zw;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat6 = min(abs(u_xlat2.z), 1.0);
    u_xlat3.x = max(abs(u_xlat2.z), 1.0);
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat6 = u_xlat6 * u_xlat3.x;
    u_xlat3.x = u_xlat6 * u_xlat6;
    u_xlat8 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat3.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat3.x * u_xlat8 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat6 * u_xlat3.x;
    u_xlatb13 = 1.0<abs(u_xlat2.z);
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlat8 = u_xlatb13 ? u_xlat8 : float(0.0);
    u_xlat6 = u_xlat6 * u_xlat3.x + u_xlat8;
    u_xlat12.x = min(u_xlat2.z, 1.0);
    u_xlatb12 = u_xlat12.x<(-u_xlat12.x);
    u_xlat6 = (u_xlatb12) ? (-u_xlat6) : u_xlat6;
    u_xlat1.x = u_xlat1.x * u_xlat6 + -1.0;
    u_xlat10.xy = u_xlat0.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat10.xy = (bool(u_xlatb7)) ? u_xlat2.xw : u_xlat10.xy;
    u_xlat10_1.x = texture2D(_AutoExposureTex, phase0_Input0_1.xy).x;
    u_xlat10_6.xyz = texture2D(_MainTex, u_xlat10.xy).xyz;
    u_xlat16_6.xyz = u_xlat10_6.xyz * u_xlat10_6.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat10.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * u_xlat10.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat10.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat10.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_6.xyz * u_xlat10_1.xxx + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb10 = _Vignette_Mode<0.5;
    if(u_xlatb10){
        u_xlat10.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat10.yx) * _Vignette_Settings.xx;
        u_xlat10.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat10.x = u_xlat10.x + -1.0;
        u_xlat10.x = _Vignette_Settings.w * u_xlat10.x + 1.0;
        u_xlat2.x = u_xlat10.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat10.xy = log2(u_xlat2.xy);
        u_xlat10.xy = u_xlat10.xy * _Vignette_Settings.zz;
        u_xlat10.xy = exp2(u_xlat10.xy);
        u_xlat10.x = dot(u_xlat10.xy, u_xlat10.xy);
        u_xlat10.x = (-u_xlat10.x) + 1.0;
        u_xlat10.x = max(u_xlat10.x, 0.0);
        u_xlat10.x = log2(u_xlat10.x);
        u_xlat10.x = u_xlat10.x * _Vignette_Settings.y;
        u_xlat10.x = exp2(u_xlat10.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat10.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat5.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat5.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = phase0_Input0_1.zw * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat15 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat15 = sqrt(u_xlat15);
    u_xlat15 = _Grain_Params1.xxxy.z * (-u_xlat15) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat15) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat5.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat5.x = floor(u_xlat5.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat5.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat5.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat10.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat10.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat5.x);
    u_xlat16_5.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_5.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = phase0_Input0_1.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_15 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_15 = u_xlat10_15 * 2.0 + -1.0;
    u_xlat16_1 = u_xlat16_15 * 3.40282347e+38 + 0.5;
    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);
    u_xlat16_1 = u_xlat16_1 * 2.0 + -1.0;
    u_xlat16_15 = -abs(u_xlat16_15) + 1.0;
    u_xlat16_15 = sqrt(u_xlat16_15);
    u_xlat16_15 = (-u_xlat16_15) + 1.0;
    u_xlat16_15 = u_xlat16_15 * u_xlat16_1;
    SV_Target0.xyz = vec3(u_xlat16_15) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat0.x = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec2 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat16_0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_0.xyz = clamp(u_xlat16_0.xyz, 0.0, 1.0);
    u_xlat16_0.xyz = sqrt(u_xlat16_0.xyz);
    u_xlat6.xyz = u_xlat16_0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat16_0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
bool u_xlatb6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb6 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb6) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz * u_xlat10_4.xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.xyw * u_xlat10_5.xyz + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.xyz + u_xlat10_5.xyz;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.xyz * u_xlat10_2.xyz + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
lowp vec4 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
float u_xlat4;
lowp vec3 u_xlat10_4;
bool u_xlatb4;
float u_xlat5;
lowp vec3 u_xlat10_5;
vec3 u_xlat6;
mediump vec3 u_xlat16_6;
lowp vec3 u_xlat10_6;
vec2 u_xlat7;
float u_xlat8;
vec2 u_xlat9;
float u_xlat10;
bool u_xlatb10;
vec2 u_xlat12;
bool u_xlatb12;
vec2 u_xlat13;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
float u_xlat18;
mediump float u_xlat16_18;
lowp float u_xlat10_18;
float u_xlat19;
float u_xlat21;
bool u_xlatb21;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat12.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat12.xy = u_xlat12.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat12.xy, u_xlat12.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat7.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19 = max(abs(u_xlat7.y), 1.0);
    u_xlat19 = float(1.0) / u_xlat19;
    u_xlat2.x = min(abs(u_xlat7.y), 1.0);
    u_xlat19 = u_xlat19 * u_xlat2.x;
    u_xlat2.x = u_xlat19 * u_xlat19;
    u_xlat8 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat8 = u_xlat2.x * u_xlat8 + 0.180141002;
    u_xlat8 = u_xlat2.x * u_xlat8 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat8 + 0.999866009;
    u_xlat8 = u_xlat19 * u_xlat2.x;
    u_xlat8 = u_xlat8 * -2.0 + 1.57079637;
    u_xlatb14 = 1.0<abs(u_xlat7.y);
    u_xlat8 = u_xlatb14 ? u_xlat8 : float(0.0);
    u_xlat19 = u_xlat19 * u_xlat2.x + u_xlat8;
    u_xlat2.x = min(u_xlat7.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat19 = (u_xlatb2) ? (-u_xlat19) : u_xlat19;
    u_xlat1.x = u_xlat1.x * u_xlat19 + -1.0;
    u_xlat1.xw = u_xlat12.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat7.x);
    u_xlat3.x = cos(u_xlat7.x);
    u_xlat7.x = float(1.0) / u_xlat7.y;
    u_xlat13.x = u_xlat2.x / u_xlat3.x;
    u_xlat7.x = u_xlat13.x * u_xlat7.x + -1.0;
    u_xlat0.xy = u_xlat12.xy * u_xlat7.xx + u_xlat0.xy;
    u_xlatb12 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb12)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_0.xyw = texture2DLodEXT(_MainTex, u_xlat0.xy, 0.0).xyz;
    u_xlat1 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat2.x = dot(u_xlat1.zw, u_xlat1.zw);
    u_xlat1 = u_xlat1 * u_xlat2.xxxx;
    u_xlat1 = u_xlat1 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat1 = u_xlat1 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat1 = u_xlat1 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat2 = u_xlat1 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat1 = u_xlat1 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat3.x = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat3.x = sqrt(u_xlat3.x);
    u_xlat9.xy = u_xlat3.xx * _Distortion_Amount.xy;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat3.x = u_xlat3.x * _Distortion_Amount.x;
    u_xlat21 = max(abs(u_xlat9.y), 1.0);
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat4 = min(abs(u_xlat9.y), 1.0);
    u_xlat21 = u_xlat21 * u_xlat4;
    u_xlat4 = u_xlat21 * u_xlat21;
    u_xlat10 = u_xlat4 * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat4 * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat4 * u_xlat10 + -0.330299497;
    u_xlat4 = u_xlat4 * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat21 * u_xlat4;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat9.y);
    u_xlat10 = u_xlatb16 ? u_xlat10 : float(0.0);
    u_xlat21 = u_xlat21 * u_xlat4 + u_xlat10;
    u_xlat4 = min(u_xlat9.y, 1.0);
    u_xlatb4 = u_xlat4<(-u_xlat4);
    u_xlat21 = (u_xlatb4) ? (-u_xlat21) : u_xlat21;
    u_xlat3.x = u_xlat3.x * u_xlat21 + -1.0;
    u_xlat3.xw = u_xlat2.xy * u_xlat3.xx + u_xlat1.xy;
    u_xlat4 = sin(u_xlat9.x);
    u_xlat5 = cos(u_xlat9.x);
    u_xlat9.x = float(1.0) / u_xlat9.y;
    u_xlat15 = u_xlat4 / u_xlat5;
    u_xlat9.x = u_xlat15 * u_xlat9.x + -1.0;
    u_xlat1.xy = u_xlat2.xy * u_xlat9.xx + u_xlat1.xy;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat1.xy : u_xlat3.xw;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_3.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy * u_xlat10_4.zxy;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_0.xyw = u_xlat10_0.wxy * u_xlat10_5.zxy + u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat10_4.zxy + u_xlat10_5.zxy;
    u_xlat1.x = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat2.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat7.x = max(abs(u_xlat2.y), 1.0);
    u_xlat7.x = float(1.0) / u_xlat7.x;
    u_xlat21 = min(abs(u_xlat2.y), 1.0);
    u_xlat7.x = u_xlat7.x * u_xlat21;
    u_xlat21 = u_xlat7.x * u_xlat7.x;
    u_xlat4 = u_xlat21 * 0.0208350997 + -0.0851330012;
    u_xlat4 = u_xlat21 * u_xlat4 + 0.180141002;
    u_xlat4 = u_xlat21 * u_xlat4 + -0.330299497;
    u_xlat21 = u_xlat21 * u_xlat4 + 0.999866009;
    u_xlat4 = u_xlat7.x * u_xlat21;
    u_xlat4 = u_xlat4 * -2.0 + 1.57079637;
    u_xlatb10 = 1.0<abs(u_xlat2.y);
    u_xlat4 = u_xlatb10 ? u_xlat4 : float(0.0);
    u_xlat7.x = u_xlat7.x * u_xlat21 + u_xlat4;
    u_xlat21 = min(u_xlat2.y, 1.0);
    u_xlatb21 = u_xlat21<(-u_xlat21);
    u_xlat7.x = (u_xlatb21) ? (-u_xlat7.x) : u_xlat7.x;
    u_xlat1.x = u_xlat1.x * u_xlat7.x + -1.0;
    u_xlat1.xy = u_xlat2.zw * u_xlat1.xx + u_xlat1.zw;
    u_xlat4 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat8 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x / u_xlat4;
    u_xlat2.x = u_xlat2.x * u_xlat8 + -1.0;
    u_xlat13.xy = u_xlat2.zw * u_xlat2.xx + u_xlat1.zw;
    u_xlat1.xy = (bool(u_xlatb12)) ? u_xlat13.xy : u_xlat1.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat10_2.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_0.xyz = u_xlat10_1.zxy * u_xlat10_2.zxy + u_xlat16_0.xyw;
    u_xlat16_1.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz / u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_0.xyz;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat16_0.xyz = vec3(u_xlat10_18) * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_0.yzx;
    u_xlat16_1.xyz = clamp(u_xlat16_1.xyz, 0.0, 1.0);
    u_xlat16_18 = dot(u_xlat16_1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat16_18 = sqrt(u_xlat16_18);
    u_xlat18 = _Grain_Params1.xxxy.z * (-u_xlat16_18) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat18) + u_xlat16_0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat6.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat6.x = floor(u_xlat6.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat6.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat6.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat6.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat6.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_6.xyz = texture2D(_Lut2D, u_xlat6.xy).xyz;
    u_xlat16_6.xyz = (-u_xlat10_1.xyz) + u_xlat10_6.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_6.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_18 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_18 = u_xlat10_18 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_18) + 1.0;
    u_xlat16_18 = u_xlat16_18 * 3.40282347e+38 + 0.5;
    u_xlat16_18 = clamp(u_xlat16_18, 0.0, 1.0);
    u_xlat16_18 = u_xlat16_18 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_18 = u_xlat16_18 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_18) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1 = sqrt(u_xlat1);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = vec2(u_xlat1) * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1 = float(1.0) / u_xlat1;
    u_xlat1 = u_xlat1 * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1 = u_xlat1 * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * vec2(u_xlat1) + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1 = sqrt(u_xlat1);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = vec2(u_xlat1) * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1 = float(1.0) / u_xlat1;
    u_xlat1 = u_xlat1 * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1 = u_xlat1 * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * vec2(u_xlat1) + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
float u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1 = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1 = sqrt(u_xlat1);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = vec2(u_xlat1) * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1 = float(1.0) / u_xlat1;
    u_xlat1 = u_xlat1 * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1 = u_xlat1 * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * vec2(u_xlat1) + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec2 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat16_1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
float u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3 = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec2 u_xlat3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat16_1.xyz = vec3(u_xlat10_18) * u_xlat16_1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat16_1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xyz + (-u_xlat16_1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat16_1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    u_xlat0.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
bool u_xlatb7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    u_xlat0.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat0.x = dot(u_xlat0.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlatb7 = 0.5<_LumaInAlpha;
    SV_Target0.w = (u_xlatb7) ? u_xlat0.x : 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.xyz * u_xlat10_5.xyz;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.xyz * u_xlat10_6.xyz + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.xyz + u_xlat10_6.xyz;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.xyz * u_xlat10_3.xyz + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.xyz + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.xyz * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.xyz;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec3 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec2 u_xlat4;
mediump vec3 u_xlat16_4;
lowp vec3 u_xlat10_4;
float u_xlat5;
lowp vec3 u_xlat10_5;
bool u_xlatb5;
lowp vec3 u_xlat10_6;
vec3 u_xlat7;
mediump vec3 u_xlat16_7;
lowp vec3 u_xlat10_7;
vec2 u_xlat8;
float u_xlat9;
float u_xlat10;
vec2 u_xlat14;
bool u_xlatb14;
float u_xlat15;
bool u_xlatb16;
vec2 u_xlat18;
bool u_xlatb18;
float u_xlat21;
mediump float u_xlat16_21;
lowp float u_xlat10_21;
float u_xlat22;
float u_xlat25;
bool u_xlatb25;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat14.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat14.xy = u_xlat14.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat14.xy, u_xlat14.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlat8.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat8.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat2.x = min(abs(u_xlat8.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat2.x;
    u_xlat2.x = u_xlat22 * u_xlat22;
    u_xlat9 = u_xlat2.x * 0.0208350997 + -0.0851330012;
    u_xlat9 = u_xlat2.x * u_xlat9 + 0.180141002;
    u_xlat9 = u_xlat2.x * u_xlat9 + -0.330299497;
    u_xlat2.x = u_xlat2.x * u_xlat9 + 0.999866009;
    u_xlat9 = u_xlat22 * u_xlat2.x;
    u_xlat9 = u_xlat9 * -2.0 + 1.57079637;
    u_xlatb16 = 1.0<abs(u_xlat8.y);
    u_xlat9 = u_xlatb16 ? u_xlat9 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat2.x + u_xlat9;
    u_xlat2.x = min(u_xlat8.y, 1.0);
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat22 = (u_xlatb2) ? (-u_xlat22) : u_xlat22;
    u_xlat1.x = u_xlat1.x * u_xlat22 + -1.0;
    u_xlat1.xw = u_xlat14.xy * u_xlat1.xx + u_xlat0.xy;
    u_xlat2.x = sin(u_xlat8.x);
    u_xlat3.x = cos(u_xlat8.x);
    u_xlat8.x = float(1.0) / u_xlat8.y;
    u_xlat15 = u_xlat2.x / u_xlat3.x;
    u_xlat8.x = u_xlat15 * u_xlat8.x + -1.0;
    u_xlat0.xy = u_xlat14.xy * u_xlat8.xx + u_xlat0.xy;
    u_xlatb14 = 0.0<_Distortion_Amount.w;
    u_xlat0.xy = (bool(u_xlatb14)) ? u_xlat0.xy : u_xlat1.xw;
    u_xlat1.xy = u_xlat0.xy;
    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);
    u_xlat1.xy = u_xlat1.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_1.xyz = texture2DLodEXT(_MainTex, u_xlat1.xy, 0.0).xyz;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat21 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat21) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat3 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat3 = u_xlat3 * _Distortion_CenterScale.zwzw;
    u_xlat21 = dot(u_xlat3.xy, u_xlat3.xy);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat4.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat4.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat18.x = min(abs(u_xlat4.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat18.x;
    u_xlat18.x = u_xlat22 * u_xlat22;
    u_xlat25 = u_xlat18.x * 0.0208350997 + -0.0851330012;
    u_xlat25 = u_xlat18.x * u_xlat25 + 0.180141002;
    u_xlat25 = u_xlat18.x * u_xlat25 + -0.330299497;
    u_xlat18.x = u_xlat18.x * u_xlat25 + 0.999866009;
    u_xlat25 = u_xlat22 * u_xlat18.x;
    u_xlat25 = u_xlat25 * -2.0 + 1.57079637;
    u_xlatb5 = 1.0<abs(u_xlat4.y);
    u_xlat25 = u_xlatb5 ? u_xlat25 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat18.x + u_xlat25;
    u_xlat18.x = min(u_xlat4.y, 1.0);
    u_xlatb18 = u_xlat18.x<(-u_xlat18.x);
    u_xlat22 = (u_xlatb18) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat18.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat5 = cos(u_xlat4.x);
    u_xlat4.x = sin(u_xlat4.x);
    u_xlat21 = float(1.0) / u_xlat4.y;
    u_xlat22 = u_xlat4.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.xy * vec2(u_xlat21) + u_xlat2.xy;
    u_xlat2.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat18.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat10_5.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat16_4.xyz = u_xlat10_4.zxy * u_xlat10_5.zxy;
    u_xlat10_6.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_1.zxy * u_xlat10_6.zxy + u_xlat16_4.xyz;
    u_xlat16_4.xyz = u_xlat10_5.zxy + u_xlat10_6.zxy;
    u_xlat21 = dot(u_xlat3.zw, u_xlat3.zw);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat2.xy = vec2(u_xlat21) * _Distortion_Amount.xy;
    u_xlat21 = float(1.0) / u_xlat21;
    u_xlat21 = u_xlat21 * _Distortion_Amount.x;
    u_xlat22 = max(abs(u_xlat2.y), 1.0);
    u_xlat22 = float(1.0) / u_xlat22;
    u_xlat3.x = min(abs(u_xlat2.y), 1.0);
    u_xlat22 = u_xlat22 * u_xlat3.x;
    u_xlat3.x = u_xlat22 * u_xlat22;
    u_xlat10 = u_xlat3.x * 0.0208350997 + -0.0851330012;
    u_xlat10 = u_xlat3.x * u_xlat10 + 0.180141002;
    u_xlat10 = u_xlat3.x * u_xlat10 + -0.330299497;
    u_xlat3.x = u_xlat3.x * u_xlat10 + 0.999866009;
    u_xlat10 = u_xlat22 * u_xlat3.x;
    u_xlat10 = u_xlat10 * -2.0 + 1.57079637;
    u_xlatb25 = 1.0<abs(u_xlat2.y);
    u_xlat10 = u_xlatb25 ? u_xlat10 : float(0.0);
    u_xlat22 = u_xlat22 * u_xlat3.x + u_xlat10;
    u_xlat3.x = min(u_xlat2.y, 1.0);
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat22 = (u_xlatb3) ? (-u_xlat22) : u_xlat22;
    u_xlat21 = u_xlat21 * u_xlat22 + -1.0;
    u_xlat3.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat5 = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat21 = float(1.0) / u_xlat2.y;
    u_xlat22 = u_xlat2.x / u_xlat5;
    u_xlat21 = u_xlat22 * u_xlat21 + -1.0;
    u_xlat2.xy = u_xlat3.zw * vec2(u_xlat21) + u_xlat2.zw;
    u_xlat14.xy = (bool(u_xlatb14)) ? u_xlat2.xy : u_xlat3.xy;
    u_xlat14.xy = clamp(u_xlat14.xy, 0.0, 1.0);
    u_xlat14.xy = u_xlat14.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat14.xy, 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat16_1.xyz = u_xlat10_2.zxy * u_xlat10_3.zxy + u_xlat16_1.xyz;
    u_xlat16_2.xyz = u_xlat10_3.zxy + u_xlat16_4.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz / u_xlat16_2.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat14.x = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat2 = u_xlat2.xwzw * u_xlat14.xxxx + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_0.xyz = texture2D(_Bloom_DirtTex, u_xlat0.xy).xyz;
    u_xlat0.xyz = u_xlat10_0.zxy * _Bloom_Settings.zzz;
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.zxy + u_xlat10_4.zxy;
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.zxy;
    u_xlat16_2.xyz = u_xlat10_2.zxy + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat2.xyz * _Bloom_Color.zxy;
    u_xlat10_21 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_21) + u_xlat3.xyz;
    u_xlat0.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlat1.xyz = u_xlat0.yzx;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat21 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat21 = sqrt(u_xlat21);
    u_xlat21 = _Grain_Params1.xxxy.z * (-u_xlat21) + 1.0;
    u_xlat1.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_1.xyz = texture2D(_GrainTex, u_xlat1.xy).xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat10_1.zxy;
    u_xlat1.xyz = u_xlat1.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat1.xyz * vec3(u_xlat21) + u_xlat0.xyz;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat7.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat7.x = floor(u_xlat7.x);
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat7.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat7.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat7.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat2.x = _Lut2D_Params.y;
    u_xlat2.y = 0.0;
    u_xlat7.xy = u_xlat1.xz + u_xlat2.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat10_7.xyz = texture2D(_Lut2D, u_xlat7.xy).xyz;
    u_xlat16_7.xyz = (-u_xlat10_1.xyz) + u_xlat10_7.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat10_1.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_21 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_21 = u_xlat10_21 * 2.0 + -1.0;
    u_xlat16_1.x = -abs(u_xlat16_21) + 1.0;
    u_xlat16_21 = u_xlat16_21 * 3.40282347e+38 + 0.5;
    u_xlat16_21 = clamp(u_xlat16_21, 0.0, 1.0);
    u_xlat16_21 = u_xlat16_21 * 2.0 + -1.0;
    u_xlat16_1.x = sqrt(u_xlat16_1.x);
    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;
    u_xlat16_21 = u_xlat16_21 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_21) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
bool u_xlatb0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlatb0 = 0.5<_LumaInAlpha;
    u_xlat9.xyz = u_xlat2.xyz;
    u_xlat9.xyz = clamp(u_xlat9.xyz, 0.0, 1.0);
    u_xlat9.x = dot(u_xlat9.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb0) ? u_xlat9.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat2.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp float u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.zxy * u_xlat2.zxy;
    } else {
        u_xlat10_0 = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = vec3(u_xlat10_0) * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.zxy + u_xlat1.zxy;
    //ENDIF
    }
    u_xlat2.xyz = u_xlat2.xyz;
    u_xlat2.xyz = clamp(u_xlat2.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat2.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = u_xlat0.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = sqrt(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform 	float _LumaInAlpha;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
bool u_xlatb27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xyz = u_xlat0.xyz * u_xlat0.xyz;
    u_xlatb27 = 0.5<_LumaInAlpha;
    u_xlat1.xyz = min(u_xlat1.xyz, vec3(1.0, 1.0, 1.0));
    u_xlat1.x = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    SV_Target0.w = (u_xlatb27) ? u_xlat1.x : 1.0;
    SV_Target0.xyz = abs(u_xlat0.xyz);
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.xyz * u_xlat2.xyz;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.xyz;
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
"#ifdef VERTEX
#version 100

uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _UVTransform;
attribute highp vec3 in_POSITION0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
vec2 u_xlat0;
void main()
{
    gl_Position.xy = in_POSITION0.xy;
    gl_Position.zw = vec2(0.0, 1.0);
    u_xlat0.xy = in_POSITION0.xy + vec2(1.0, 1.0);
    u_xlat0.xy = u_xlat0.xy * _UVTransform.xy;
    u_xlat0.xy = u_xlat0.xy * vec2(0.5, 0.5) + _UVTransform.zw;
    vs_TEXCOORD1.xy = u_xlat0.xy * vec2(_RenderViewportScaleFactor);
    vs_TEXCOORD0.xy = u_xlat0.xy;
    return;
}

#endif
#ifdef FRAGMENT
#version 100
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif
#if !defined(GL_EXT_shader_texture_lod)
#define texture1DLodEXT texture1D
#define texture2DLodEXT texture2D
#define texture2DProjLodEXT texture2DProj
#define texture3DLodEXT texture3D
#define textureCubeLodEXT textureCube
#endif

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec4 _ScreenParams;
uniform 	float _RenderViewportScaleFactor;
uniform 	vec4 _Distortion_Amount;
uniform 	vec4 _Distortion_CenterScale;
uniform 	vec4 _Dithering_Coords;
uniform 	vec4 _BloomTex_TexelSize;
uniform 	vec4 _Bloom_DirtTileOffset;
uniform 	vec3 _Bloom_Settings;
uniform 	vec3 _Bloom_Color;
uniform 	float _ChromaticAberration_Amount;
uniform 	vec3 _Lut2D_Params;
uniform 	vec3 _Vignette_Color;
uniform 	vec2 _Vignette_Center;
uniform 	vec4 _Vignette_Settings;
uniform 	float _Vignette_Opacity;
uniform 	float _Vignette_Mode;
uniform 	vec2 _Grain_Params1;
uniform 	vec4 _Grain_Params2;
uniform lowp sampler2D _AutoExposureTex;
uniform lowp sampler2D _ChromaticAberration_SpectralLut;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _BloomTex;
uniform lowp sampler2D _Bloom_DirtTex;
uniform lowp sampler2D _Vignette_Mask;
uniform lowp sampler2D _GrainTex;
uniform lowp sampler2D _Lut2D;
uniform lowp sampler2D _DitheringTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec2 vs_TEXCOORD1;
#define SV_Target0 gl_FragData[0]
vec3 u_xlat0;
lowp vec3 u_xlat10_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
lowp vec4 u_xlat10_1;
vec4 u_xlat2;
mediump vec3 u_xlat16_2;
lowp vec3 u_xlat10_2;
vec4 u_xlat3;
mediump vec3 u_xlat16_3;
lowp vec3 u_xlat10_3;
bool u_xlatb3;
vec3 u_xlat4;
lowp vec3 u_xlat10_4;
vec2 u_xlat5;
mediump vec3 u_xlat16_5;
lowp vec3 u_xlat10_5;
vec4 u_xlat6;
mediump vec3 u_xlat16_6;
vec3 u_xlat7;
lowp vec3 u_xlat10_7;
float u_xlat8;
vec3 u_xlat9;
mediump vec3 u_xlat16_9;
bool u_xlatb10;
float u_xlat11;
bool u_xlatb11;
vec2 u_xlat18;
lowp float u_xlat10_18;
bool u_xlatb18;
vec2 u_xlat19;
float u_xlat20;
float u_xlat27;
mediump float u_xlat16_27;
lowp float u_xlat10_27;
float u_xlat28;
bool u_xlatb28;
float u_xlat29;
float u_xlat30;
float u_xlat31;
bool u_xlatb31;
float u_xlat32;
bool u_xlatb32;
bool u_xlatb34;
void main()
{
    u_xlat0.xy = vs_TEXCOORD0.xy + vec2(-0.5, -0.5);
    u_xlat18.xy = u_xlat0.xy * _Distortion_Amount.zz + vec2(0.5, 0.5);
    u_xlat0.xy = u_xlat0.xy * _Distortion_Amount.zz + (-_Distortion_CenterScale.xy);
    u_xlat0.xy = u_xlat0.xy * _Distortion_CenterScale.zw;
    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);
    u_xlat1.x = sqrt(u_xlat1.x);
    u_xlatb10 = 0.0<_Distortion_Amount.w;
    u_xlat19.xy = u_xlat1.xx * _Distortion_Amount.xy;
    u_xlat2.x = sin(u_xlat19.x);
    u_xlat3.x = cos(u_xlat19.x);
    u_xlat19.x = u_xlat2.x / u_xlat3.x;
    u_xlat2.x = float(1.0) / u_xlat19.y;
    u_xlat19.x = u_xlat19.x * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat0.xy * u_xlat19.xx + u_xlat18.xy;
    u_xlat1.x = float(1.0) / u_xlat1.x;
    u_xlat1.x = u_xlat1.x * _Distortion_Amount.x;
    u_xlat19.x = min(abs(u_xlat19.y), 1.0);
    u_xlat20 = max(abs(u_xlat19.y), 1.0);
    u_xlat20 = float(1.0) / u_xlat20;
    u_xlat19.x = u_xlat19.x * u_xlat20;
    u_xlat20 = u_xlat19.x * u_xlat19.x;
    u_xlat29 = u_xlat20 * 0.0208350997 + -0.0851330012;
    u_xlat29 = u_xlat20 * u_xlat29 + 0.180141002;
    u_xlat29 = u_xlat20 * u_xlat29 + -0.330299497;
    u_xlat20 = u_xlat20 * u_xlat29 + 0.999866009;
    u_xlat29 = u_xlat19.x * u_xlat20;
    u_xlatb3 = 1.0<abs(u_xlat19.y);
    u_xlat29 = u_xlat29 * -2.0 + 1.57079637;
    u_xlat29 = u_xlatb3 ? u_xlat29 : float(0.0);
    u_xlat19.x = u_xlat19.x * u_xlat20 + u_xlat29;
    u_xlat28 = min(u_xlat19.y, 1.0);
    u_xlatb28 = u_xlat28<(-u_xlat28);
    u_xlat19.x = (u_xlatb28) ? (-u_xlat19.x) : u_xlat19.x;
    u_xlat1.x = u_xlat1.x * u_xlat19.x + -1.0;
    u_xlat0.xy = u_xlat0.xy * u_xlat1.xx + u_xlat18.xy;
    u_xlat0.xy = (bool(u_xlatb10)) ? u_xlat2.xy : u_xlat0.xy;
    u_xlat10_18 = texture2D(_AutoExposureTex, vs_TEXCOORD0.xy).x;
    u_xlat2 = vs_TEXCOORD0.xyxy * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat2 = vec4(u_xlat27) * u_xlat2;
    u_xlat2 = u_xlat2 * vec4(vec4(_ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount, _ChromaticAberration_Amount));
    u_xlat10_1.xzw = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.166666672, 0.0), 0.0).xyz;
    u_xlat10_3.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.5, 0.0), 0.0).xyz;
    u_xlat10_4.xyz = texture2DLodEXT(_ChromaticAberration_SpectralLut, vec2(0.833333313, 0.0), 0.0).xyz;
    u_xlat5.xy = u_xlat0.xy;
    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);
    u_xlat5.xy = u_xlat5.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_5.xyz = texture2DLodEXT(_MainTex, u_xlat5.xy, 0.0).xyz;
    u_xlat2 = u_xlat2 * vec4(-0.333333343, -0.333333343, -0.666666687, -0.666666687) + vs_TEXCOORD0.xyxy;
    u_xlat2 = u_xlat2 + vec4(-0.5, -0.5, -0.5, -0.5);
    u_xlat6 = u_xlat2 * _Distortion_Amount.zzzz + vec4(0.5, 0.5, 0.5, 0.5);
    u_xlat2 = u_xlat2 * _Distortion_Amount.zzzz + (-_Distortion_CenterScale.xyxy);
    u_xlat2 = u_xlat2 * _Distortion_CenterScale.zwzw;
    u_xlat27 = dot(u_xlat2.xy, u_xlat2.xy);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat7.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat8 = cos(u_xlat7.x);
    u_xlat7.x = sin(u_xlat7.x);
    u_xlat30 = u_xlat7.x / u_xlat8;
    u_xlat31 = float(1.0) / u_xlat7.y;
    u_xlat30 = u_xlat30 * u_xlat31 + -1.0;
    u_xlat7.xz = u_xlat2.xy * vec2(u_xlat30) + u_xlat6.xy;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat30 = min(abs(u_xlat7.y), 1.0);
    u_xlat31 = max(abs(u_xlat7.y), 1.0);
    u_xlat31 = float(1.0) / u_xlat31;
    u_xlat30 = u_xlat30 * u_xlat31;
    u_xlat31 = u_xlat30 * u_xlat30;
    u_xlat32 = u_xlat31 * 0.0208350997 + -0.0851330012;
    u_xlat32 = u_xlat31 * u_xlat32 + 0.180141002;
    u_xlat32 = u_xlat31 * u_xlat32 + -0.330299497;
    u_xlat31 = u_xlat31 * u_xlat32 + 0.999866009;
    u_xlat32 = u_xlat30 * u_xlat31;
    u_xlatb34 = 1.0<abs(u_xlat7.y);
    u_xlat32 = u_xlat32 * -2.0 + 1.57079637;
    u_xlat32 = u_xlatb34 ? u_xlat32 : float(0.0);
    u_xlat30 = u_xlat30 * u_xlat31 + u_xlat32;
    u_xlat31 = min(u_xlat7.y, 1.0);
    u_xlatb31 = u_xlat31<(-u_xlat31);
    u_xlat30 = (u_xlatb31) ? (-u_xlat30) : u_xlat30;
    u_xlat27 = u_xlat27 * u_xlat30 + -1.0;
    u_xlat2.xy = u_xlat2.xy * vec2(u_xlat27) + u_xlat6.xy;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat7.xz : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_7.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat27 = dot(u_xlat2.zw, u_xlat2.zw);
    u_xlat27 = sqrt(u_xlat27);
    u_xlat2.xy = vec2(u_xlat27) * _Distortion_Amount.xy;
    u_xlat6.x = cos(u_xlat2.x);
    u_xlat2.x = sin(u_xlat2.x);
    u_xlat2.x = u_xlat2.x / u_xlat6.x;
    u_xlat30 = float(1.0) / u_xlat2.y;
    u_xlat2.x = u_xlat2.x * u_xlat30 + -1.0;
    u_xlat6.xy = u_xlat2.zw * u_xlat2.xx + u_xlat6.zw;
    u_xlat27 = float(1.0) / u_xlat27;
    u_xlat27 = u_xlat27 * _Distortion_Amount.x;
    u_xlat2.x = min(abs(u_xlat2.y), 1.0);
    u_xlat30 = max(abs(u_xlat2.y), 1.0);
    u_xlat30 = float(1.0) / u_xlat30;
    u_xlat2.x = u_xlat2.x * u_xlat30;
    u_xlat30 = u_xlat2.x * u_xlat2.x;
    u_xlat31 = u_xlat30 * 0.0208350997 + -0.0851330012;
    u_xlat31 = u_xlat30 * u_xlat31 + 0.180141002;
    u_xlat31 = u_xlat30 * u_xlat31 + -0.330299497;
    u_xlat30 = u_xlat30 * u_xlat31 + 0.999866009;
    u_xlat31 = u_xlat2.x * u_xlat30;
    u_xlatb32 = 1.0<abs(u_xlat2.y);
    u_xlat31 = u_xlat31 * -2.0 + 1.57079637;
    u_xlat31 = u_xlatb32 ? u_xlat31 : float(0.0);
    u_xlat2.x = u_xlat2.x * u_xlat30 + u_xlat31;
    u_xlat11 = min(u_xlat2.y, 1.0);
    u_xlatb11 = u_xlat11<(-u_xlat11);
    u_xlat2.x = (u_xlatb11) ? (-u_xlat2.x) : u_xlat2.x;
    u_xlat27 = u_xlat27 * u_xlat2.x + -1.0;
    u_xlat2.xy = u_xlat2.zw * vec2(u_xlat27) + u_xlat6.zw;
    u_xlat2.xy = (bool(u_xlatb10)) ? u_xlat6.xy : u_xlat2.xy;
    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
    u_xlat2.xy = u_xlat2.xy * vec2(_RenderViewportScaleFactor);
    u_xlat10_2.xyz = texture2DLodEXT(_MainTex, u_xlat2.xy, 0.0).xyz;
    u_xlat16_6.xyz = u_xlat10_3.xyz * u_xlat10_7.xyz;
    u_xlat16_5.xyz = u_xlat10_5.xyz * u_xlat10_1.xzw + u_xlat16_6.xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz * u_xlat10_4.xyz + u_xlat16_5.xyz;
    u_xlat16_1.xyz = u_xlat10_1.xzw + u_xlat10_3.xyz;
    u_xlat16_1.xyz = u_xlat10_4.xyz + u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_2.xyz / u_xlat16_1.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_1.xyz;
    u_xlat2 = _BloomTex_TexelSize.xyxy * vec4(-1.0, -1.0, 1.0, 1.0);
    u_xlat27 = _Bloom_Settings.x * 0.5;
    u_xlat3 = u_xlat2.xyzy * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
    u_xlat3 = u_xlat3 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat3.xy).xyz;
    u_xlat10_3.xyz = texture2D(_BloomTex, u_xlat3.zw).xyz;
    u_xlat16_3.xyz = u_xlat10_3.xyz + u_xlat10_4.xyz;
    u_xlat2 = u_xlat2.xwzw * vec4(u_xlat27) + u_xlat0.xyxy;
    u_xlat2 = clamp(u_xlat2, 0.0, 1.0);
    u_xlat2 = u_xlat2 * vec4(_RenderViewportScaleFactor);
    u_xlat10_4.xyz = texture2D(_BloomTex, u_xlat2.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz + u_xlat10_4.xyz;
    u_xlat10_2.xyz = texture2D(_BloomTex, u_xlat2.zw).xyz;
    u_xlat16_2.xyz = u_xlat10_2.xyz + u_xlat16_3.xyz;
    u_xlat2.xyz = u_xlat16_2.xyz * _Bloom_Settings.yyy;
    u_xlat3.xy = u_xlat0.xy * _Bloom_DirtTileOffset.xy + _Bloom_DirtTileOffset.zw;
    u_xlat10_3.xyz = texture2D(_Bloom_DirtTex, u_xlat3.xy).xyz;
    u_xlat2.xyz = u_xlat2.xyz * vec3(0.25, 0.25, 0.25);
    u_xlat3.xyz = u_xlat10_3.xyz * _Bloom_Settings.zzz;
    u_xlat4.xyz = u_xlat2.xyz * _Bloom_Color.xyz;
    u_xlat1.xyz = u_xlat16_1.xyz * vec3(u_xlat10_18) + u_xlat4.xyz;
    u_xlat1.xyz = u_xlat3.xyz * u_xlat2.xyz + u_xlat1.xyz;
    u_xlatb18 = _Vignette_Mode<0.5;
    if(u_xlatb18){
        u_xlat18.xy = u_xlat0.xy + (-_Vignette_Center.xy);
        u_xlat2.yz = abs(u_xlat18.yx) * _Vignette_Settings.xx;
        u_xlat18.x = _ScreenParams.x / _ScreenParams.y;
        u_xlat18.x = u_xlat18.x + -1.0;
        u_xlat18.x = _Vignette_Settings.w * u_xlat18.x + 1.0;
        u_xlat2.x = u_xlat18.x * u_xlat2.z;
        u_xlat2.xy = u_xlat2.xy;
        u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);
        u_xlat18.xy = log2(u_xlat2.xy);
        u_xlat18.xy = u_xlat18.xy * _Vignette_Settings.zz;
        u_xlat18.xy = exp2(u_xlat18.xy);
        u_xlat18.x = dot(u_xlat18.xy, u_xlat18.xy);
        u_xlat18.x = (-u_xlat18.x) + 1.0;
        u_xlat18.x = max(u_xlat18.x, 0.0);
        u_xlat18.x = log2(u_xlat18.x);
        u_xlat18.x = u_xlat18.x * _Vignette_Settings.y;
        u_xlat18.x = exp2(u_xlat18.x);
        u_xlat2.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat2.xyz = u_xlat18.xxx * u_xlat2.xyz + _Vignette_Color.xyz;
        u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xyz;
    } else {
        u_xlat10_0.x = texture2D(_Vignette_Mask, u_xlat0.xy).w;
        u_xlat9.xyz = (-_Vignette_Color.xyz) + vec3(1.0, 1.0, 1.0);
        u_xlat0.xyz = u_xlat10_0.xxx * u_xlat9.xyz + _Vignette_Color.xyz;
        u_xlat0.xyz = u_xlat1.xyz * u_xlat0.xyz + (-u_xlat1.xyz);
        u_xlat2.xyz = vec3(_Vignette_Opacity) * u_xlat0.xyz + u_xlat1.xyz;
    //ENDIF
    }
    u_xlat0.xy = vs_TEXCOORD1.xy * _Grain_Params2.xy + _Grain_Params2.zw;
    u_xlat10_0.xyz = texture2D(_GrainTex, u_xlat0.xy).xyz;
    u_xlat1.xyz = u_xlat2.xyz;
    u_xlat1.xyz = clamp(u_xlat1.xyz, 0.0, 1.0);
    u_xlat27 = dot(u_xlat1.xyz, vec3(0.212672904, 0.715152204, 0.0721750036));
    u_xlat27 = sqrt(u_xlat27);
    u_xlat27 = _Grain_Params1.xxxy.z * (-u_xlat27) + 1.0;
    u_xlat0.xyz = u_xlat10_0.zxy * u_xlat2.zxy;
    u_xlat0.xyz = u_xlat0.xyz * vec3(_Grain_Params1.y, _Grain_Params1.y, _Grain_Params1.y);
    u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat27) + u_xlat2.zxy;
    u_xlat0.xyz = clamp(u_xlat0.xyz, 0.0, 1.0);
    u_xlat0.xyz = sqrt(u_xlat0.xyz);
    u_xlat9.xyz = u_xlat0.xyz * _Lut2D_Params.zzz;
    u_xlat9.x = floor(u_xlat9.x);
    u_xlat1.xy = _Lut2D_Params.xy * vec2(0.5, 0.5);
    u_xlat1.yz = u_xlat9.yz * _Lut2D_Params.xy + u_xlat1.xy;
    u_xlat1.x = u_xlat9.x * _Lut2D_Params.y + u_xlat1.y;
    u_xlat10_2.xyz = texture2D(_Lut2D, u_xlat1.xz).xyz;
    u_xlat3.x = _Lut2D_Params.y;
    u_xlat3.y = 0.0;
    u_xlat18.xy = u_xlat1.xz + u_xlat3.xy;
    u_xlat10_1.xyz = texture2D(_Lut2D, u_xlat18.xy).xyz;
    u_xlat0.x = u_xlat0.x * _Lut2D_Params.z + (-u_xlat9.x);
    u_xlat16_9.xyz = (-u_xlat10_2.xyz) + u_xlat10_1.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_9.xyz + u_xlat10_2.xyz;
    u_xlat1.xy = vs_TEXCOORD0.xy * _Dithering_Coords.xy + _Dithering_Coords.zw;
    u_xlat10_27 = texture2D(_DitheringTex, u_xlat1.xy).w;
    u_xlat16_27 = u_xlat10_27 * 2.0 + -1.0;
    u_xlat16_1.x = u_xlat16_27 * 3.40282347e+38 + 0.5;
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat16_1.x * 2.0 + -1.0;
    u_xlat16_27 = -abs(u_xlat16_27) + 1.0;
    u_xlat16_27 = sqrt(u_xlat16_27);
    u_xlat16_27 = (-u_xlat16_27) + 1.0;
    u_xlat16_27 = u_xlat16_27 * u_xlat16_1.x;
    SV_Target0.xyz = vec3(u_xlat16_27) * vec3(0.00392156886, 0.00392156886, 0.00392156886) + abs(u_xlat0.xyz);
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
""
}
SubProgram "gles hw_tier01 " {
""
}
SubProgram "gles hw_tier02 " {
""
}
SubProgram "gles hw_tier00 " {
Keywords { "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DISTORT" "CHROMATIC_ABERRATION_LOW" "BLOOM_LOW" "VIGNETTE" "GRAIN" "FINALPASS" "COLOR_GRADING_LDR_2D" }
""
}
}
}
}
}